%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Coffee shop interior vector illustration.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 2/5/2020
%%BoundingBox: 0 0 2950 2000
%%HiResBoundingBox: 0 0 2950 2000
%%CropBox: 0 0 2950 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Coffee shop interior vector illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Coffee shop interior vector illustration. Young men and women drinking coffee at tables or counter. Modern cafe image for canteen or catering concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>image</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>client</rdf:li>
               <rdf:li>customer</rdf:li>
               <rdf:li>consumer</rdf:li>
               <rdf:li>coffee</rdf:li>
               <rdf:li>shop</rdf:li>
               <rdf:li>drinking</rdf:li>
               <rdf:li>table</rdf:li>
               <rdf:li>cafe</rdf:li>
               <rdf:li>interior</rdf:li>
               <rdf:li>barista</rdf:li>
               <rdf:li>job</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>restaurant</rdf:li>
               <rdf:li>indoors</rdf:li>
               <rdf:li>food</rdf:li>
               <rdf:li>lifestyle</rdf:li>
               <rdf:li>retail</rdf:li>
               <rdf:li>sitting</rdf:li>
               <rdf:li>talking</rdf:li>
               <rdf:li>counter</rdf:li>
               <rdf:li>machine</rdf:li>
               <rdf:li>menu</rdf:li>
               <rdf:li>leisure</rdf:li>
               <rdf:li>meeting</rdf:li>
               <rdf:li>canteen</rdf:li>
               <rdf:li>catering</rdf:li>
               <rdf:li>diner</rdf:li>
               <rdf:li>confectionary</rdf:li>
               <rdf:li>breakfast</rdf:li>
               <rdf:li>morning</rdf:li>
               <rdf:li>break</rdf:li>
               <rdf:li>lunch</rdf:li>
               <rdf:li>pink</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-02-05T15:27:17+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-02-05T15:27:18+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-02-05T15:27:18+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqskkKmg8MWUY2&#xA;pTXTRxO4APBS1PkK4QLKTFIbXzNe3CM3+jxcWKhX51277ZT4m7sZaCIr6jY8lf8AT17/AL8tf+Sm&#xA;PiMfycf6X2KB8zXwult/9GIK8vU+PiOu2Dxd6bB2fHh4vV9ibadqUl1ZRTuqqzg1ArTYkfwyyMrF&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:75E424341B48EA119453A3DC36AEC7C8</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:75E424341B48EA119453A3DC36AEC7C8</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5eac2586-ee68-9e4d-9484-7cd57100e251</stRef:instanceID>
            <stRef:documentID>xmp.did:15F424814738EA11B64A807947707A5C</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d8a17867-3074-0540-9f04-ffbdb04611df</stEvt:instanceID>
                  <stEvt:when>2020-01-11T17:00:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bf45d28d-ff9c-f349-bf99-14be75ead3d2</stEvt:instanceID>
                  <stEvt:when>2020-01-13T22:35:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:15F424814738EA11B64A807947707A5C</stEvt:instanceID>
                  <stEvt:when>2020-01-16T12:05:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5eac2586-ee68-9e4d-9484-7cd57100e251</stEvt:instanceID>
                  <stEvt:when>2020-01-26T23:10:14+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:75E424341B48EA119453A3DC36AEC7C8</stEvt:instanceID>
                  <stEvt:when>2020-02-05T15:27:18+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2950.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=94 B=90</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>93</xmpG:green>
                           <xmpG:blue>89</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2950 2000 li
2950 0 li
cp
clp
2950 2000 mo
0 2000 li
0 0 li
2950 0 li
2950 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
2822.17 1865.46 mo
127.832 1865.46 li
127.832 1775.16 li
2822.17 1775.16 li
2822.17 1865.46 li
.662745 .819608 1 rgb
f
2822.17 1353.94 mo
127.832 1353.94 li
127.832 134.535 li
2465.72 134.535 li
2662.58 134.535 2822.17 294.123 2822.17 490.985 cv
2822.17 1353.94 li
level3{
gsave
clp
[-136.81 -1102.53 1102.53 -136.81 1527.07 1330.88 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .54902 .592157 ]
/C1 [1 .956863 .968627 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-136.81 -1102.53 1102.53 -136.81 1527.07 1330.88 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVc]orr2orrr2orrr2orrr2orrr2orrr2or
~>
<~N/W^TNK0$ZO,oBaOHGZgP*2#mPa%DtQ'R`%Q^=),R@0J3R[]e9S=H.@SXuFFT:_dLTqS0SU8+KYUnji`
VP^5gVl6PmWMuntWiN2%XK8P+Y-+q2YHY78Z*CU?Za7!F['d<L[^NZS\%&rY\[f;_]=Y\f]Y2"l^:q@s
^qdb%_8=(+_o'F2`5T^8`l?'>aN2HEai_cKbKJ,Rc-=MYcHjh_d*U1fdF-Ile'lgre^`4$f%8O*f\"m1
g=k98gYCT>h;-rEhV[5Ki8ESQio8tXj5f:^jlPXekND$lkiq?rlK[^$lg4!*mHs?0n*f`7nF?&=o()DD
~>
<~Q^=&+R$a;0R[T\7S"#q<SXl=CSt;RHTV.sOTqS3TUSFT[Unji`VP^5gVl-JlWMuksWiE,#XK8M*Xf\b/
YHP.6YctC;ZEgdBZa7$G[C*EN[^NZS\@B&Z\[f;_]=Y\f]Y(qk^:q=r^V@S"_83t)_SX4.`5KU5`Poj:
a2c6AaN2KFb0%lMbKJ,Rc-=MYcHab^d*U.edF$Cje'ldqeC<%!f%/F(f@S[-g"G'4g=k<9gt^]@h;-rE
hr!>Li8ESQio8tXj5]4]jlPUdk2tjikih6pl07Kulg*m'm-O-,mdBN3n*fc8naZ/?o()DDo^qeKp%A%P
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
127.832 1353.94 mo
127.832 1353.94 li
127.832 134.535 li
2465.72 134.535 li
2822.17 134.535 li
2822.17 828.438 li
2565.85 828.438 li
2565.85 521.55 li
2401.31 521.55 li
2401.31 521.55 li
2334.78 521.55 li
2273.67 521.55 2217.92 548.861 2184.51 592.434 cv
2184.51 134.535 li
1651.58 134.535 li
1651.58 789.746 li
1731.43 789.746 li
1725.89 802.496 1722.33 811.838 1722.33 811.838 cv
1739.26 828.438 li
1446 828.438 li
1482.27 811.053 li
1482.27 811.053 1479.86 801.48 1474.01 789.746 cv
1490.06 789.746 li
1604.01 789.746 li
1604.01 827.914 li
1651.58 827.914 li
1651.58 134.535 li
1604.01 134.535 li
1302.38 134.535 li
1302.38 789.746 li
1322.85 789.746 li
1322.41 797.172 1322.94 811.582 1323.95 828.438 cv
741.156 828.438 li
734.744 808.134 725.459 789.587 712.516 784.769 cv
712.919 784.773 713.325 784.775 713.732 784.775 cv
721.741 749.621 li
721.741 749.621 721.741 749.621 721.741 749.621 cv
729.807 714.218 li
708.857 646.896 li
638.868 751.126 li
638.868 751.126 li
638.868 751.126 637.346 751.011 634.68 751.011 cv
620.683 751.011 575.12 754.166 552.429 793.625 cv
552.429 793.625 550.482 806.816 547.5 828.438 cv
127.832 828.438 li
127.832 1353.94 li
163.033 826.866 mo
163.033 826.866 li
454.682 826.866 li
454.682 727.129 li
454.682 727.129 li
454.682 636.953 li
454.682 580.766 409.134 535.217 352.946 535.217 cv
264.769 535.217 li
208.582 535.217 163.033 580.766 163.033 636.953 cv
163.033 826.866 li
270.986 134.535 mo
270.795 136.421 270.695 138.334 270.695 140.272 cv
270.695 410.969 li
270.695 441.286 294.596 465.864 324.08 465.864 cv
505.621 465.864 li
535.104 465.864 559.006 441.286 559.006 410.969 cv
559.006 140.272 li
559.006 138.334 558.905 136.421 558.715 134.535 cv
270.986 134.535 li
2333.63 156.951 mo
2299.85 156.951 2272.46 184.339 2272.46 218.123 cv
2272.46 366.118 li
2272.46 399.902 2299.85 427.29 2333.63 427.29 cv
2723.79 427.29 li
2757.58 427.29 2784.97 399.902 2784.97 366.118 cv
2784.97 218.123 li
2784.97 184.339 2757.58 156.951 2723.79 156.951 cv
2333.63 156.951 li
2090.88 828.438 mo
1907.52 828.438 li
1901.21 815.116 1893.93 801.934 1885.84 789.746 cv
2104.94 789.746 li
2090.88 828.438 li
level3{
gsave
clp
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .576471 .615686 ]
/C1 [1 .956863 .968627 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVc]orr2orrr2orrr2orrr2orrr2orrr2or
~>
<~PEV2pPa%GuQBmi'Q^=),R@0J3R[T_8S=H+?SXl@DT:_aKTV8'QU8"BWUSO]]V5:#cVPg>iW2QYoWN)tu
X/i>'XKAV,Y-+t3YHY78Z*CU?ZEpmD['[6K[C3NP\$rlW\@K/]]"5Mc]=bei]tM.o^;%Fu^qde&_8=(,
_o'F2`Pog9`l?'>aN2HEaiV]JbKJ)Qbfn>VcHa_]cd:%cdF$@idaQ[oeC<!ue^i=&f@SX,f\+s2g=k98
gYCT>h;-rEhV[5Ji8ESQiSrkVj5]4]jQ5Lbk2tjikNM-ol07KulKdd&m-O-,mI'E2n*fc8nF?&>o()DD
~>
<~SXl=CSt;RHT:hjMTqS0SU8"EXUnjf_V5:&dVPg>iW2QYoWN)tuX/i;&XK8P+Xfeh0YHP.6Yd(I<ZEgdB
Za7$G['d<L[^NZS\%&rX\[f8^]"5Mc]=beh]tM.o^;%Ft^qdb%_84"*_Sa:0`5KX6`Q#p;a2c6AaN2KF
b0%lMbKJ,Rbg"DWcHa_]cd0tbdF$@idaHUne'umse^`4$f%8O*f\"j0g"G*5g=tB:gt^]@h;7#Fhr!>L
i8ESQiSrkVj5]4]jQ5Lbk2tghkND'mkiq?rlK[^$lg4!)mHs</mdBQ4n*oi:naZ2@o(2JEo^qeKp%A%P
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
2822.17 1780.08 mo
127.832 1780.08 li
127.832 1353.94 li
2822.17 1353.94 li
2822.17 1780.08 li
.662745 .819608 1 rgb
f
1311.44 1398.24 mo
1128.94 1780.08 li
2234.11 1780.08 li
2132.16 1403.67 li
1311.44 1398.24 li
cp
.811765 .901961 1 rgb
f
144.336 1353.94 mo
127.832 1353.94 li
127.832 828.438 li
547.5 828.438 li
547.5 828.438 li
127.832 828.438 li
127.832 848.119 li
544.819 848.119 li
544.819 848.119 li
127.832 848.119 li
127.832 863.111 li
542.822 863.111 li
528.556 971.226 505.286 1170.22 523.256 1197.57 cv
532.446 1211.56 564.538 1216.29 601.71 1216.29 cv
603.164 1216.29 604.63 1216.28 606.098 1216.27 cv
625.499 1250.35 649.501 1295.9 663.912 1335.64 cv
357.469 1346.44 li
367.017 1307.43 425.703 1123.29 466.326 998.304 cv
466.881 996.601 465.919 994.777 464.179 994.234 cv
463.845 994.13 463.506 994.081 463.173 994.081 cv
461.771 994.081 460.472 994.96 460.025 996.339 cv
459.74 997.217 431.152 1085.19 403.414 1172.69 cv
366.033 1290.6 354.137 1331.72 350.834 1346.67 cv
290.224 1348.8 li
297.728 1315.6 358.12 1126.05 399.642 998.304 cv
400.197 996.601 399.235 994.777 397.495 994.234 cv
397.161 994.13 396.822 994.081 396.489 994.081 cv
395.088 994.081 393.788 994.96 393.341 996.339 cv
393.056 997.217 364.468 1085.19 336.73 1172.69 cv
297.162 1297.5 286.149 1336.27 283.655 1349.04 cv
144.336 1353.94 li
754.205 1332.46 mo
741.249 1272.95 722.998 1220.59 722.998 1220.59 cv
717.536 1205.47 li
734.637 1202.4 746.23 1199.4 747.998 1197.57 cv
751.409 1194.04 732.099 1134.59 732.228 1064.06 cv
732.228 1064.03 732.228 1064.01 732.228 1063.98 cv
732.228 1063.94 732.228 1063.89 732.228 1063.85 cv
732.228 1063.77 732.229 1063.69 732.229 1063.6 cv
732.235 1061.56 732.251 1059.51 732.278 1057.45 cv
741.066 1053.11 750.433 1048.19 760.093 1042.89 cv
765.867 1045.88 771.411 1047.63 776.472 1047.63 cv
776.472 1047.63 li
776.472 1047.63 li
776.473 1047.63 li
777.258 1047.63 778.031 1047.59 778.792 1047.51 cv
813.442 1043.58 889.002 979.841 911.152 969.775 cv
922.49 964.624 937.082 958.153 948.627 953.064 cv
1024.64 953.064 li
1033.17 953.064 1040.09 946.145 1040.09 937.611 cv
1040.09 937.341 li
1040.09 937.341 li
788.336 937.341 li
788.336 937.611 li
788.336 946.145 795.255 953.064 803.79 953.064 cv
844.635 953.064 li
842.24 954.758 838.473 956.943 832.192 960.069 cv
809.671 963.891 789.371 966.979 782.574 966.979 cv
773.102 966.979 757.225 936.356 744.422 907.649 cv
746.603 888.305 748.25 872.699 748.431 863.111 cv
1326.34 863.111 li
1327.19 874.318 1328.09 885.328 1328.92 895.072 cv
1328.92 895.075 li
1328.93 895.145 1328.93 895.216 1328.94 895.287 cv
1328.94 895.294 1328.94 895.298 1328.94 895.305 cv
1330.63 915.188 1332 929.726 1332 929.726 cv
1332 929.726 1338.22 929.843 1347.64 929.843 cv
1377.06 929.843 1437.74 928.701 1437.74 919.278 cv
1437.74 912.318 1438.81 885.443 1439.75 863.111 cv
1799.71 863.111 li
1802.26 872.362 1803.3 882.54 1800.95 890.954 cv
1794.98 912.35 1788.01 925.287 1788.01 925.287 cv
1788.01 925.287 1791.33 927.154 1796.99 929.961 cv
1765.31 934.267 1623.57 955.292 1613.86 987.983 cv
1610.79 998.29 1621.13 1022.13 1637.6 1051.11 cv
1639.83 1057.52 1642.58 1064.35 1645.74 1071.49 cv
1475.68 1187.49 1254.46 1314.84 1096.18 1320.42 cv
754.205 1332.46 li
901.915 907.204 mo
901.915 907.204 li
901.915 921.861 914.007 933.707 928.909 933.707 cv
938.821 933.707 li
941.633 933.707 944.34 933.284 946.871 932.476 cv
946.871 932.476 li
946.871 932.476 li
955.061 929.98 961.562 923.759 964.34 915.78 cv
969.893 915.78 li
976.818 915.78 982.441 910.262 982.441 903.478 cv
982.441 896.695 976.818 891.141 969.893 891.141 cv
965.816 891.141 li
965.816 887.063 li
965.816 886.22 965.113 885.551 964.305 885.551 cv
903.427 885.551 li
902.583 885.551 901.915 886.22 901.915 887.063 cv
901.915 907.204 li
901.915 907.204 li
792.039 903.478 mo
792.039 903.478 li
792.039 910.262 797.662 915.78 804.587 915.78 cv
810.141 915.78 li
813.796 926.22 823.813 933.707 835.694 933.707 cv
845.571 933.707 li
848.383 933.707 851.055 933.284 853.585 932.512 cv
853.585 932.512 li
853.585 932.512 li
864.587 929.172 872.566 919.119 872.566 907.204 cv
872.566 887.063 li
872.566 886.22 871.897 885.551 871.054 885.551 cv
810.175 885.551 li
809.367 885.551 808.664 886.22 808.664 887.063 cv
808.664 891.141 li
804.587 891.141 li
797.662 891.141 792.039 896.695 792.039 903.478 cv
792.039 903.478 li
969.893 911.316 mo
965.465 911.316 li
965.676 909.981 965.816 908.61 965.816 907.204 cv
965.816 895.639 li
969.893 895.639 li
974.287 895.639 977.872 899.155 977.872 903.478 cv
977.872 907.802 974.287 911.316 969.893 911.316 cv
809.015 911.316 mo
804.587 911.316 li
800.193 911.316 796.608 907.802 796.608 903.478 cv
796.608 899.155 800.193 895.639 804.587 895.639 cv
808.664 895.639 li
808.664 907.204 li
808.664 907.204 li
808.664 908.61 808.805 909.981 809.015 911.316 cv
1927.52 881.265 mo
1925.86 875.422 1923.94 869.331 1921.76 863.111 cv
2627.96 863.111 li
1927.52 881.265 li
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .54902 .592157 ]
/C1 [.960784 .54902 .592157 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .54902 .592157 ]
/C1 [1 .956863 .968627 ]
/N 1 
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@n=Up\4FV
p\4FVp\4FVp\4FVp\4FVp\4IXq"XXZq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYU0eqtp9fqtp9fqtp9fqtp9fqtp9fqtp<hr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?KkrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrr2orrr2orrr2orrr2orrr2orrr2or
~>
<~N/W^SN/W^SN/WaUNfK-\O-#HcOcbfiPEV2pPa.N"QBml(R$a8/R@9S6S"#q<SXl=CStDXJTV/!PU8"BW
USO]^V5:&dVl-JlW2ZbrWiE,#XK8P+Xfeh1YHP17Z*CU?ZEpmE['[6K[^NZS\%&rY\[f;_]=Y_g]Y2"m
^:q@s^qde&_8=(,_o'F2`Poj:`lH-@aN2KFb0%oNbKS2Tc-FV[cd0tbd*^7hdaQ[oeC<%!e^i='f@\a.
g"G*5g=tB;gtgfBhVR/Ihr*GOiSrkVj5]4]jQ5Lck3(pjkih9ql0@R"lg4!)mHs?0mdKW6nF?&=o()DD
~>
<~Q^=&*Q^=&*Q^=),R$jA2R[T_8S=H+?SXl@DT:_aKTV8'QU8"BWUSO]]V5:&dVPg>iW2Q\pWN)u!X/i>'
Xf\_.Y-+t3Yct@:Z*L[@Za7!F['d<L[^NZS\%&rX\[f;_]">Se]Y(qk]tV4q^V@S"_83t)_SX4.`5KU5
`Q#p;a2c6AaN;QGb0%oNbKS2Sc-=PZcHjh`d*U1fdF-Ile'lgre^`4$f%8O*f\"j0g"P06gY:N=gtgfB
hVR/Ihr*GOiSieUioB([jQ,Fak2tghkND'ml07HtlKdd%m-O*+mI'E1n*fc8nF?&=o()DDoCV\Jp%A%P
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
2822.17 848.119 mo
127.832 848.119 li
127.832 828.438 li
2822.17 828.438 li
2822.17 848.119 li
1 1 1 rgb
f
2822.17 848.119 mo
127.832 848.119 li
127.832 863.111 li
2822.17 863.111 li
2822.17 848.119 li
.501961 .203922 .0862745 rgb
f
505.621 465.864 mo
324.08 465.864 li
294.596 465.864 270.695 441.286 270.695 410.969 cv
270.695 140.272 li
270.695 138.334 270.795 136.421 270.986 134.535 cv
558.715 134.535 li
558.905 136.421 559.006 138.334 559.006 140.272 cv
559.006 410.969 li
559.006 441.286 535.104 465.864 505.621 465.864 cv
level3{
gsave
clp
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`d=)mI@/$&R`9iHa+0`$JtC#7TZ;_Za+^8.LSW"HV9"LkaGQq;N2jsYX2p=&acN[IOfuliZ,r38ad'6T
QF4i$[E4fFadT`]S%?_3]?-YXae-;iTteaD_9/Oib+utuVT$]Ta31F&bGiV,X38\fbfd-6bHK79YgL\"
d`f#Fbd>mD[FNL0f?C_Vc+2QQ]%bKAgs*Ohc+`)[^Z!GQim#@$c,8Yf`TGFakfq04cH,=sb3[Erm`s&F
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`Pog8`Pog8`Pog8`Q#p;`l?$<`l?$<`l?$<`l?$<`l?$<`lH-?a2c6@a2c6@a2c6@a2c6@a2c6@a2l?C
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2KFaiVZHaiVZHaiVZH
aiVZHaiVZHaiVZIb0%lLb0%lLb0%lLb0%lLb0%lLb0%lMbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Q
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tc-=MXc-=MXc-=MXc-=MX
~>
<~H@(!dI!g<hI!pElIXcisIt3'#JUrB'JV&K+K7no2KS>,7L5(G;L51P?Ll$tFM2I1KMi<URN/`gVNK0$[
O,oBaOH>TeOcbfiP*2#mPa%GuQ'IZ$QBml(Q^=),R@0M4R[T_8S"#q<SXl@DSt;RHTV.sNTV/!PU8"EX
USFT[UnsoaV5:#cVPg>jW2QYoWN)u!X/i;&XK8M*Xfeh1YHP.6Yct@:Z*CR>ZEpmE['[3J[C*EN[^NWR
\$rlW\[f8]]"5Ja]=Y_g]tM+m^:q=q^V@Ou^qde&_SX1,_o'F2`5KU4`Poj:a2c6@aN2KFaiVZHb0%oN
~>
<~Q^=&*Q^F/.R@9S5R[]e:S=Q4ASXuFFT:hjMTV8'QTq\9VUSO]]UnsobVPg>iVl6PnWN)tuWiN2$X/rD)
Xf\b/Y-+t3YctC;Z*CU?Za7$G['[3I['[6K[^NZS\$rlW\[f;_]"5Mc]Y(qk]tM.o^:q@s^qde&_84"*
_Sa:0`5KU5`Q#p<a2c6AaN2HEai_cLbKJ)Qbg"DXcHa_]cd:%ddF$@hdF$@idaQ[peC<!ue^i='f@SX,
f\"m1g=k97gY:K;gt^`AhVR,Ghr!AMiSibSio9"YjQ,C_jlPUck2tjikih6ol07Kulg*m&m-O-,mdBN2
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
283.912 140.114 mo
283.912 403.364 li
283.912 432.848 307.813 456.749 337.297 456.749 cv
518.838 456.749 li
548.321 456.749 572.223 432.848 572.223 403.364 cv
572.223 140.114 li
572.223 138.229 572.122 136.369 571.932 134.535 cv
284.203 134.535 li
284.013 136.369 283.912 138.229 283.912 140.114 cv
cp
.996078 .639216 .65098 rgb
f
2723.79 427.29 mo
2333.63 427.29 li
2299.85 427.29 2272.46 399.902 2272.46 366.118 cv
2272.46 218.123 li
2272.46 184.339 2299.85 156.951 2333.63 156.951 cv
2723.79 156.951 li
2757.58 156.951 2784.97 184.339 2784.97 218.123 cv
2784.97 366.118 li
2784.97 399.902 2757.58 427.29 2723.79 427.29 cv
level3{
gsave
clp
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2715.94 419.432 mo
2325.77 419.432 li
2291.99 419.432 2264.6 392.045 2264.6 358.26 cv
2264.6 210.266 li
2264.6 176.481 2291.99 149.094 2325.77 149.094 cv
2715.94 149.094 li
2749.72 149.094 2777.11 176.481 2777.11 210.266 cv
2777.11 358.26 li
2777.11 392.045 2749.72 419.432 2715.94 419.432 cv
cp
.619608 .67451 .933333 rgb
f
2598.21 222.021 mo
2312.7 222.021 li
2308.33 222.021 2304.78 218.475 2304.78 214.1 cv
2304.78 209.725 2308.33 206.179 2312.7 206.179 cv
2598.21 206.179 li
2602.59 206.179 2606.13 209.725 2606.13 214.1 cv
2606.13 218.475 2602.59 222.021 2598.21 222.021 cv
cp
.313726 .494118 .937255 rgb
f
2697.96 222.021 mo
2648.22 222.021 li
2643.85 222.021 2640.3 218.475 2640.3 214.1 cv
2640.3 209.725 2643.85 206.179 2648.22 206.179 cv
2697.96 206.179 li
2702.34 206.179 2705.88 209.725 2705.88 214.1 cv
2705.88 218.475 2702.34 222.021 2697.96 222.021 cv
cp
f
2598.21 258.394 mo
2312.7 258.394 li
2308.33 258.394 2304.78 254.848 2304.78 250.473 cv
2304.78 246.098 2308.33 242.552 2312.7 242.552 cv
2598.21 242.552 li
2602.59 242.552 2606.13 246.098 2606.13 250.473 cv
2606.13 254.848 2602.59 258.394 2598.21 258.394 cv
cp
f
2697.96 258.394 mo
2648.22 258.394 li
2643.85 258.394 2640.3 254.848 2640.3 250.473 cv
2640.3 246.098 2643.85 242.552 2648.22 242.552 cv
2697.96 242.552 li
2702.34 242.552 2705.88 246.098 2705.88 250.473 cv
2705.88 254.848 2702.34 258.394 2697.96 258.394 cv
cp
f
2598.21 292.184 mo
2312.7 292.184 li
2308.33 292.184 2304.78 288.638 2304.78 284.263 cv
2304.78 279.889 2308.33 276.342 2312.7 276.342 cv
2598.21 276.342 li
2602.59 276.342 2606.13 279.889 2606.13 284.263 cv
2606.13 288.638 2602.59 292.184 2598.21 292.184 cv
cp
f
2697.96 292.184 mo
2648.22 292.184 li
2643.85 292.184 2640.3 288.638 2640.3 284.263 cv
2640.3 279.889 2643.85 276.342 2648.22 276.342 cv
2697.96 276.342 li
2702.34 276.342 2705.88 279.889 2705.88 284.263 cv
2705.88 288.638 2702.34 292.184 2697.96 292.184 cv
cp
f
2598.21 331.863 mo
2312.7 331.863 li
2308.33 331.863 2304.78 328.317 2304.78 323.943 cv
2304.78 319.568 2308.33 316.022 2312.7 316.022 cv
2598.21 316.022 li
2602.59 316.022 2606.13 319.568 2606.13 323.943 cv
2606.13 328.317 2602.59 331.863 2598.21 331.863 cv
cp
f
2697.96 331.863 mo
2648.22 331.863 li
2643.85 331.863 2640.3 328.317 2640.3 323.943 cv
2640.3 319.568 2643.85 316.022 2648.22 316.022 cv
2697.96 316.022 li
2702.34 316.022 2705.88 319.568 2705.88 323.943 cv
2705.88 328.317 2702.34 331.863 2697.96 331.863 cv
cp
f
2598.21 371.543 mo
2312.7 371.543 li
2308.33 371.543 2304.78 367.997 2304.78 363.623 cv
2304.78 359.248 2308.33 355.702 2312.7 355.702 cv
2598.21 355.702 li
2602.59 355.702 2606.13 359.248 2606.13 363.623 cv
2606.13 367.997 2602.59 371.543 2598.21 371.543 cv
cp
f
2697.96 371.543 mo
2648.22 371.543 li
2643.85 371.543 2640.3 367.997 2640.3 363.623 cv
2640.3 359.248 2643.85 355.702 2648.22 355.702 cv
2697.96 355.702 li
2702.34 355.702 2705.88 359.248 2705.88 363.623 cv
2705.88 367.997 2702.34 371.543 2697.96 371.543 cv
cp
f
551.605 303.174 mo
306.937 303.174 li
305.11 303.174 303.63 301.694 303.63 299.867 cv
303.63 298.041 305.11 296.561 306.937 296.561 cv
551.605 296.561 li
553.432 296.561 554.912 298.041 554.912 299.867 cv
554.912 301.694 553.432 303.174 551.605 303.174 cv
cp
1 1 1 rgb
f
551.421 156.212 mo
528.275 156.212 li
526.449 156.212 524.969 154.732 524.969 152.905 cv
524.969 151.079 526.449 149.599 528.275 149.599 cv
551.421 149.599 li
553.248 149.599 554.728 151.079 554.728 152.905 cv
554.728 154.732 553.248 156.212 551.421 156.212 cv
cp
f
551.421 174.582 mo
528.275 174.582 li
526.449 174.582 524.969 173.102 524.969 171.275 cv
524.969 169.449 526.449 167.968 528.275 167.968 cv
551.421 167.968 li
553.248 167.968 554.728 169.449 554.728 171.275 cv
554.728 173.102 553.248 174.582 551.421 174.582 cv
cp
f
551.421 192.952 mo
528.275 192.952 li
526.449 192.952 524.969 191.473 524.969 189.646 cv
524.969 187.819 526.449 186.339 528.275 186.339 cv
551.421 186.339 li
553.248 186.339 554.728 187.819 554.728 189.646 cv
554.728 191.473 553.248 192.952 551.421 192.952 cv
cp
f
551.421 211.323 mo
528.275 211.323 li
526.449 211.323 524.969 209.843 524.969 208.016 cv
524.969 206.19 526.449 204.709 528.275 204.709 cv
551.421 204.709 li
553.248 204.709 554.728 206.19 554.728 208.016 cv
554.728 209.843 553.248 211.323 551.421 211.323 cv
cp
f
551.421 229.692 mo
528.275 229.692 li
526.449 229.692 524.969 228.212 524.969 226.386 cv
524.969 224.56 526.449 223.079 528.275 223.079 cv
551.421 223.079 li
553.248 223.079 554.728 224.56 554.728 226.386 cv
554.728 228.212 553.248 229.692 551.421 229.692 cv
cp
f
551.421 248.063 mo
528.275 248.063 li
526.449 248.063 524.969 246.583 524.969 244.756 cv
524.969 242.93 526.449 241.45 528.275 241.45 cv
551.421 241.45 li
553.248 241.45 554.728 242.93 554.728 244.756 cv
554.728 246.583 553.248 248.063 551.421 248.063 cv
cp
f
490.983 156.212 mo
314.629 156.212 li
312.802 156.212 311.322 154.732 311.322 152.905 cv
311.322 151.079 312.802 149.599 314.629 149.599 cv
490.983 149.599 li
492.81 149.599 494.29 151.079 494.29 152.905 cv
494.29 154.732 492.81 156.212 490.983 156.212 cv
cp
f
490.983 174.582 mo
314.629 174.582 li
312.802 174.582 311.322 173.102 311.322 171.275 cv
311.322 169.449 312.802 167.968 314.629 167.968 cv
490.983 167.968 li
492.81 167.968 494.29 169.449 494.29 171.275 cv
494.29 173.102 492.81 174.582 490.983 174.582 cv
cp
f
490.983 192.952 mo
314.629 192.952 li
312.802 192.952 311.322 191.473 311.322 189.646 cv
311.322 187.819 312.802 186.339 314.629 186.339 cv
490.983 186.339 li
492.81 186.339 494.29 187.819 494.29 189.646 cv
494.29 191.473 492.81 192.952 490.983 192.952 cv
cp
f
490.983 211.323 mo
314.629 211.323 li
312.802 211.323 311.322 209.843 311.322 208.016 cv
311.322 206.19 312.802 204.709 314.629 204.709 cv
490.983 204.709 li
492.81 204.709 494.29 206.19 494.29 208.016 cv
494.29 209.843 492.81 211.323 490.983 211.323 cv
cp
f
490.983 229.692 mo
314.629 229.692 li
312.802 229.692 311.322 228.212 311.322 226.386 cv
311.322 224.56 312.802 223.079 314.629 223.079 cv
490.983 223.079 li
492.81 223.079 494.29 224.56 494.29 226.386 cv
494.29 228.212 492.81 229.692 490.983 229.692 cv
cp
f
490.983 248.063 mo
314.629 248.063 li
312.802 248.063 311.322 246.583 311.322 244.756 cv
311.322 242.93 312.802 241.45 314.629 241.45 cv
490.983 241.45 li
492.81 241.45 494.29 242.93 494.29 244.756 cv
494.29 246.583 492.81 248.063 490.983 248.063 cv
cp
f
948.206 134.535 mo
948.206 229.009 li
926.753 230.11 909.521 247.188 908.178 268.576 cv
883.052 268.576 li
876.75 268.576 871.641 273.685 871.641 279.987 cv
875.122 279.987 li
863.779 279.987 852.607 282.748 842.569 288.03 cv
810.422 304.95 li
809.926 305.08 809.671 305.212 809.671 305.346 cv
809.671 310.371 1091.15 310.374 1091.15 305.346 cv
1091.15 305.221 1090.93 305.099 1090.5 304.978 cv
1069.02 294.346 1055.06 279.987 1027.94 279.987 cv
1029.18 279.987 li
1029.18 273.685 1024.07 268.576 1017.77 268.576 cv
992.643 268.576 li
991.299 247.188 974.067 230.111 952.615 229.01 cv
952.615 134.535 li
948.206 134.535 li
cp
.984314 .6 0 rgb
f
127.832 1780.08 mo
127.832 1780.08 li
127.832 1353.94 li
144.336 1353.94 li
283.019 1353.94 li
283.029 1355.13 283.304 1355.5 283.574 1355.86 cv
284.675 1357.25 li
496.242 1357.25 li
498.069 1357.25 499.549 1355.8 499.549 1354.01 cv
499.549 1353.99 499.549 1353.97 499.548 1353.94 cv
542.847 1353.94 li
127.832 1780.08 li
.639216 .741176 .964706 rgb
f
496.242 1350.77 mo
356.49 1350.77 li
361.743 1323.98 423.89 1128.87 466.326 998.304 cv
466.881 996.601 465.919 994.777 464.179 994.234 cv
462.437 993.691 460.578 994.632 460.025 996.339 cv
459.74 997.217 431.152 1085.19 403.414 1172.69 cv
361.858 1303.77 351.798 1339.94 350.025 1350.77 cv
289.806 1350.77 li
295.059 1323.98 357.206 1128.87 399.642 998.304 cv
400.197 996.601 399.235 994.777 397.495 994.234 cv
395.754 993.691 393.895 994.632 393.341 996.339 cv
393.056 997.217 364.468 1085.19 336.73 1172.69 cv
280.126 1351.24 281.958 1353.7 283.574 1355.86 cv
284.675 1357.25 li
496.242 1357.25 li
498.069 1357.25 499.549 1355.8 499.549 1354.01 cv
499.549 1352.22 498.069 1350.77 496.242 1350.77 cv
.227451 .196078 .337255 rgb
f
486.393 1011.88 mo
354.875 1011.88 li
354.875 999.791 364.677 989.989 376.769 989.989 cv
464.499 989.989 li
476.591 989.989 486.393 999.791 486.393 1011.88 cv
cp
.733333 .298039 .282353 rgb
f
503.324 1276.72 mo
308.122 1276.72 li
308.122 1267.88 li
503.324 1267.88 li
505.767 1267.88 507.746 1269.86 507.746 1272.3 cv
507.746 1274.75 505.767 1276.72 503.324 1276.72 cv
cp
.227451 .196078 .337255 rgb
f
1282.49 410.306 mo
611.495 410.306 li
606.929 410.306 603.229 406.604 603.229 402.039 cv
603.229 397.474 606.929 393.773 611.495 393.773 cv
1282.49 393.773 li
1282.49 410.306 li
cp
.619608 .666667 .92549 rgb
f
1299.04 827.914 mo
1276.57 827.914 li
1276.57 134.535 li
1299.04 134.535 li
1299.04 827.914 li
cp
f
1651.58 827.914 mo
1604.01 827.914 li
1604.01 134.535 li
1651.58 134.535 li
1651.58 827.914 li
f
1282.49 627.638 mo
611.495 627.638 li
606.929 627.638 603.229 623.937 603.229 619.372 cv
603.229 614.806 606.929 611.105 611.495 611.105 cv
1282.49 611.105 li
1282.49 627.638 li
cp
f
2822.17 1353.94 mo
2779.65 1353.94 li
2779.81 1350.05 2779.92 1346.39 2780.01 1343.01 cv
2780.01 1343.01 li
2780.37 1327.97 2780.07 1318.53 2780.07 1318.53 cv
2780.07 1318.53 2755.28 1328.21 2721.48 1343.34 cv
2710.91 1282.13 2585.76 1074.12 2556.98 1074.12 cv
2527.85 1074.12 2477.94 1100.94 2477.94 1100.94 cv
2477.94 1100.94 2466.75 1152.28 2471.01 1189.93 cv
2472.21 1200.48 2481.75 1220.8 2494.86 1244.59 cv
2494.86 1244.59 li
2500.33 1254.5 2506.42 1265.02 2512.79 1275.68 cv
2512.79 1275.7 2512.8 1275.7 2512.81 1275.72 cv
2512.84 1275.77 2512.87 1275.82 2512.9 1275.88 cv
2512.93 1275.93 2512.97 1275.99 2513 1276.05 cv
2513.01 1276.07 2513.02 1276.08 2513.04 1276.1 cv
2529.56 1303.76 2547.9 1332.36 2562.05 1353.94 cv
2099.17 1353.94 li
2100.88 1310.46 2100.82 1266.22 2105.83 1252.27 cv
2112.26 1234.38 2115.65 1234.52 2116.65 1211.12 cv
2116.65 1211.12 2200.49 1302.37 2217.55 1302.37 cv
2236.73 1302.37 2236.73 1283.72 2236.73 1260.98 cv
2236.73 1238.25 2230.87 1233.63 2189.3 1171.28 cv
2171.93 1145.22 2153.47 1124.58 2137.88 1109.38 cv
2121.79 1093.7 2100.32 1085.3 2078.32 1085.3 cv
2075.95 1085.3 2073.58 1085.4 2071.2 1085.59 cv
2067.98 1064.75 2068.34 1042.06 2068.34 1042.06 cv
2025.44 997.35 li
2018.93 1098.24 li
1989.86 1111.79 1970.07 1140.77 1969.23 1173.98 cv
1964.68 1353.94 li
758.567 1353.94 li
757.214 1346.73 755.747 1339.55 754.205 1332.46 cv
1096.18 1320.42 li
1254.46 1314.84 1475.68 1187.49 1645.74 1071.49 cv
1678.08 1144.49 1753.18 1248.72 1753.18 1248.72 cv
1784.03 1238.77 li
1784.03 1238.77 1782.01 1234.34 1778.66 1226.82 cv
1793.07 1219.91 li
1793.07 1219.91 1741.51 1128.62 1717.42 1072.07 cv
1712.68 1055.46 1711.19 1044.11 1715.36 1042.72 cv
1733.28 1036.75 1876.58 1015.85 1888.52 1003.91 cv
1896.57 995.853 1911.38 973.69 1914.1 954.023 cv
1914.1 954.021 1914.1 954.022 1914.1 954.02 cv
1914.11 953.91 1914.13 953.804 1914.14 953.694 cv
1914.14 953.691 1914.14 953.686 1914.14 953.683 cv
1914.15 953.658 1914.15 953.633 1914.15 953.608 cv
1914.15 953.607 li
1914.16 953.581 1914.16 953.554 1914.16 953.527 cv
1914.16 953.524 1914.16 953.521 1914.16 953.519 cv
1914.17 953.494 1914.17 953.472 1914.17 953.447 cv
1914.17 953.44 1914.17 953.434 1914.17 953.427 cv
1914.18 953.408 1914.18 953.385 1914.18 953.366 cv
1914.18 953.356 1914.18 953.346 1914.19 953.336 cv
1914.19 953.319 1914.19 953.299 1914.19 953.281 cv
1914.19 953.274 1914.19 953.265 1914.2 953.259 cv
1914.2 953.237 1914.2 953.219 1914.2 953.198 cv
1914.2 953.19 1914.21 953.179 1914.21 953.171 cv
1914.21 953.153 1914.21 953.133 1914.21 953.115 cv
1914.21 953.104 1914.22 953.093 1914.22 953.081 cv
1914.22 953.066 1914.22 953.049 1914.22 953.033 cv
1914.22 953.021 1914.23 953.008 1914.23 952.996 cv
1914.24 952.92 1914.24 952.844 1914.25 952.768 cv
1914.33 952.037 1914.4 951.308 1914.45 950.586 cv
1920.83 947.817 1926.55 943.794 1931.31 938.224 cv
1937.2 931.337 1935.37 908.962 1927.52 881.265 cv
2627.96 863.111 li
2822.17 863.111 li
2822.17 1353.94 li
669.959 1353.94 mo
499.548 1353.94 li
499.512 1352.19 498.046 1350.77 496.242 1350.77 cv
356.49 1350.77 li
356.715 1349.63 357.042 1348.18 357.469 1346.44 cv
663.912 1335.64 li
666.184 1341.91 668.22 1348.03 669.959 1353.94 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC
^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]
`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-cq7afC^;Ti]`;.-c
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q7afC^W$#``qdEjqSL;L_T;SkaniruqSgYS`m";"bkfE+qT7%Zb0Tq-d/(u6qomLccI;[:e,.J@qp<mj
dan<DfDO+Mr7'Ete_0lOg\f[Xr7Kg&g"lS[hYc-cr7p6.gu/+diVhZnrSQZ6i8jjqjo+3#rT!)>jQHL'
kl'Z.rTEJEkj/33m/?5:rp/tNm-jr@n,D_DrpTCVn+-JIo)A1Orpo^\oC`+TpAXaZs7Z6fp\Fjaq>^9e
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j_qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp<hr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVlfqrr<#us8W-!s8W-!
~>
<~]tM+m]tM+n^:q=q^:q=r^V@P!^qmk'_83t)_SX1-_o'C1`5KU5`Pog9`l?$=a2c6AaN2HEaiVZIb0%lM
bKJ)PbKJ)Qbg"DXcHa_\cHa_]cd0tbdF$@hdF$CjdaHUne'lgreC<%!e^`7%f%/I)f@S[-f\"m1g"G*5
g=k<9gY:K;gY:N=gt^`AhVR,GhVR/Ihr!AMi8ESQiSieUio9"Yj5]4]jQ5LbjlY^fk3(pjkNM-nkiq?r
l0@R!lKdd%lg4!)m-O**m-X3.mdBN2mdKW5n*oi9nF?&=nac8Ao(2JEoCV\Io_%nMp%J+Qp@n=Up\=OY
~>
<~_o'C0_o'C1`5KU5`Pog9`l?$<`l?$=a2c6AaN2HEaiVZIb0%lMbKJ)PbKJ)Qbg"DWc-=MYcHa_]cd0qa
d*U.edF$@idaHRldaHRme'ldqeC<%!e^`7%f%/I)f@S[-f\"j/f\"m1g=k97g=k<9gY:N=gt^`Ah;-rE
hVR/Ihr!>Khr!AMi8ESQiSieUio9"Yj5]4]jQ,C_jQ,Fak2tggk2tjikNM-nkiq?rl0@R!lKdd%lg4!)
m-O**m-X3.mdBN2mdKW5n*oi9nF?&=naZ/>nac8BoCMSFoCV\Io_%nMp%J+Qp@n=Up\=OYq"XXZq"aa]
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
2822.17 863.111 mo
2822.17 863.111 li
2627.96 863.111 li
2822.17 858.077 li
2822.17 863.111 li
.717647 .54902 .482353 rgb
f
283.019 1353.94 mo
144.336 1353.94 li
283.655 1349.04 li
283.176 1351.49 283.012 1352.98 283.019 1353.94 cv
350.025 1350.77 mo
289.806 1350.77 li
289.919 1350.19 290.059 1349.54 290.224 1348.8 cv
350.834 1346.67 li
350.465 1348.34 350.203 1349.68 350.025 1350.77 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
499.548 1353.94 mo
283.019 1353.94 li
283.019 1353.94 li
283.019 1353.94 li
283.012 1352.98 283.176 1351.49 283.655 1349.04 cv
290.224 1348.8 li
290.059 1349.54 289.919 1350.19 289.806 1350.77 cv
350.025 1350.77 li
350.203 1349.68 350.465 1348.34 350.834 1346.67 cv
357.469 1346.44 li
357.042 1348.18 356.715 1349.63 356.49 1350.77 cv
496.242 1350.77 li
498.046 1350.77 499.512 1352.19 499.548 1353.94 cv
499.548 1353.94 li
499.548 1353.94 li
.560784 .541176 .623529 rgb
f
1302.38 789.746 mo
1610.09 789.746 li
1610.09 134.535 li
1302.38 134.535 li
1302.38 789.746 li
.996078 .933333 .945098 rgb
f
1651.58 134.535 mo
1651.58 789.746 li
2184.51 789.746 li
2184.51 134.535 li
1651.58 134.535 li
f
1302.38 789.746 mo
1610.09 789.746 li
1610.09 134.535 li
1302.38 134.535 li
1302.38 789.746 li
f
1651.58 134.535 mo
1651.58 789.746 li
2184.51 789.746 li
2184.51 134.535 li
1651.58 134.535 li
.894118 1 .980392 rgb
f
1610.09 181.538 mo
1610.09 134.535 li
1302.38 134.535 li
1302.38 614.682 li
1610.09 181.538 li
cp
f
1302.38 789.746 mo
1433.43 789.746 li
1610.09 541.068 li
1610.09 181.538 li
1302.38 614.682 li
1302.38 789.746 li
.996078 .933333 .945098 rgb
f
1610.09 789.746 mo
1490.06 789.746 li
1610.09 620.787 li
1610.09 789.746 li
1 1 1 rgb
f
1651.58 134.535 mo
1651.58 482.674 li
1898.91 134.535 li
1651.58 134.535 li
cp
.996078 .933333 .945098 rgb
f
1955.54 134.535 mo
1651.58 562.394 li
1651.58 742.159 li
2083.25 134.535 li
1955.54 134.535 li
cp
f
1760.73 1226.1 mo
1760.73 1226.1 1768.7 1237.58 1760.73 1253 cv
1752.77 1268.43 1739.84 1276.85 1743.32 1287.8 cv
1746.8 1298.74 1810 1246.99 1810 1246.99 cv
1778.94 1212.22 li
1760.73 1226.1 li
cp
.909804 .317647 .0862745 rgb
f
1803.24 929.14 mo
1803.24 929.14 1624.8 951.161 1613.86 987.983 cv
1602.91 1024.8 1763 1234.32 1763 1234.32 cv
1793.07 1219.91 li
1793.07 1219.91 1701.43 1057.65 1705.41 1031.77 cv
1709.39 1005.9 1868.12 1001.42 1877.58 991.964 cv
1887.03 982.509 1803.24 929.14 1803.24 929.14 cv
.54902 .643137 .74902 rgb
f
1754.62 1262.77 mo
1747.63 1272.49 1740.65 1279.4 1743.32 1287.8 cv
1746.8 1298.74 1810 1246.99 1810 1246.99 cv
1795.02 1230.23 li
1788.66 1237.46 1767.83 1260.17 1754.62 1262.77 cv
cp
0 .0156863 .309804 rgb
f
1946.52 1375.55 mo
1806.77 1375.55 li
1812.02 1348.21 1874.17 1149.13 1916.6 1015.9 cv
1917.16 1014.16 1916.2 1012.3 1914.46 1011.75 cv
1912.71 1011.19 1910.85 1012.15 1910.3 1013.9 cv
1910.02 1014.79 1881.43 1104.56 1853.69 1193.84 cv
1812.13 1327.59 1802.07 1364.5 1800.3 1375.55 cv
1740.08 1375.55 li
1745.34 1348.21 1807.48 1149.13 1849.92 1015.9 cv
1850.47 1014.16 1849.51 1012.3 1847.77 1011.75 cv
1846.03 1011.19 1844.17 1012.15 1843.62 1013.9 cv
1843.33 1014.79 1814.75 1104.56 1787.01 1193.84 cv
1730.4 1376.03 1732.24 1378.53 1733.85 1380.75 cv
1734.95 1382.16 li
1946.52 1382.16 li
1948.35 1382.16 1949.83 1380.68 1949.83 1378.85 cv
1949.83 1377.03 1948.35 1375.55 1946.52 1375.55 cv
cp
.227451 .196078 .337255 rgb
f
1953.6 1301.63 mo
1758.4 1301.63 li
1758.4 1292.79 li
1953.6 1292.79 li
1956.04 1292.79 1958.02 1294.77 1958.02 1297.21 cv
1958.02 1299.65 1956.04 1301.63 1953.6 1301.63 cv
cp
f
1348.04 1320.28 mo
1348.04 1320.28 1341.06 1356.83 1344.19 1359.85 cv
1347.32 1362.88 1423.83 1360.57 1423.83 1357.78 cv
1423.83 1354.99 1397.3 1347.28 1389.28 1344.49 cv
1381.26 1341.69 1376.92 1318.42 1376.92 1318.42 cv
1348.04 1320.28 li
cp
1 .568627 .423529 rgb
f
1266.95 1350.64 mo
1127.19 1350.64 li
1132.45 1323.3 1194.59 1124.21 1237.03 990.992 cv
1237.58 989.253 1236.62 987.393 1234.88 986.838 cv
1233.14 986.284 1231.28 987.244 1230.73 988.985 cv
1230.44 989.881 1201.86 1079.65 1174.12 1168.93 cv
1132.56 1302.68 1122.5 1339.59 1120.73 1350.64 cv
1060.51 1350.64 li
1065.76 1323.3 1127.91 1124.21 1170.35 990.992 cv
1170.9 989.253 1169.94 987.393 1168.2 986.838 cv
1166.46 986.284 1164.6 987.244 1164.04 988.985 cv
1163.76 989.881 1135.17 1079.65 1107.43 1168.93 cv
1050.83 1351.12 1052.66 1353.62 1054.28 1355.83 cv
1055.38 1357.25 li
1266.95 1357.25 li
1268.77 1357.25 1270.25 1355.77 1270.25 1353.95 cv
1270.25 1352.12 1268.77 1350.64 1266.95 1350.64 cv
cp
.227451 .196078 .337255 rgb
f
1156.47 978.09 mo
1156.47 978.09 1272.93 1088.89 1284.01 1107.52 cv
1295.1 1126.14 1342.27 1324.47 1342.27 1324.47 cv
1388.48 1324.47 li
1388.48 1324.47 1361.52 1125.21 1342.27 1094.48 cv
1323.01 1063.75 1252.57 978.09 1252.57 978.09 cv
1156.47 978.09 li
cp
0 .0156863 .309804 rgb
f
1257.1 1011.88 mo
1125.58 1011.88 li
1125.58 999.791 1135.38 989.989 1147.47 989.989 cv
1235.2 989.989 li
1247.29 989.989 1257.1 999.791 1257.1 1011.88 cv
cp
.733333 .298039 .282353 rgb
f
1294.89 619.748 mo
1294.89 619.748 1296.69 640.01 1291.74 668.377 cv
1286.78 696.744 1275.98 716.519 1269.67 716.519 cv
1263.37 716.519 1232.75 679.634 1228.25 659.822 cv
1223.75 640.01 1226.9 599.936 1249.41 605.339 cv
1271.93 610.742 1294.89 619.748 1294.89 619.748 cv
cp
1 .407843 .168627 rgb
f
1236.8 742.672 mo
1254.36 697.645 li
1227.51 655.973 li
1203.28 707.649 li
1203.28 707.649 1221.72 727.588 1236.8 742.672 cv
cp
f
1254.36 697.645 mo
1227.51 655.973 li
1224.01 663.44 li
1230.84 673.564 1241.96 691.299 1241.96 699.322 cv
1241.96 710.895 1236.8 742.672 1236.8 742.672 cv
1254.36 697.645 li
cp
.890196 .360784 .14902 rgb
f
1241.31 599.035 mo
1241.31 599.035 1247.07 588.229 1260.85 590.93 cv
1274.63 593.632 1291.29 605.789 1309.75 615.245 cv
1328.21 624.701 1317.85 634.156 1303.9 630.104 cv
1289.94 626.051 1278.23 617.946 1263.82 623.8 cv
1249.41 629.653 1247.16 648.115 1247.16 648.115 cv
1217.3 677.764 li
1217.3 677.764 1207.32 622.973 1217.3 612.993 cv
1227.27 603.014 1241.31 599.035 1241.31 599.035 cv
cp
0 .0156863 .266667 rgb
f
1250.76 646.614 mo
1250.76 646.614 1250.88 646.252 1251.06 645.626 cv
1252.27 641.467 1256.29 625.647 1247.16 626.952 cv
1236.65 628.453 1233.8 648.715 1239.66 652.917 cv
1245.51 657.12 1250.76 646.614 1250.76 646.614 cv
cp
1 .407843 .168627 rgb
f
1209.42 708.398 mo
1196.69 702.017 1179.87 707.404 1160.32 737.258 cv
1135.31 775.465 1093.71 904.349 1117.96 934.302 cv
1134.32 954.503 1211.34 930.072 1221.93 930.072 cv
1232.52 930.072 1262.37 788.012 1253.7 759.152 cv
1245.04 730.292 1224.47 715.946 1209.42 708.398 cv
cp
1 1 1 rgb
f
1253.7 759.152 mo
1245.04 730.292 1225.84 714.582 1224.01 715.963 cv
1224.01 715.963 1203.33 717.529 1196.46 736.79 cv
1192.5 747.874 1203.07 775.06 1210.36 782.355 cv
1230.34 802.329 1234.17 826.076 1226.49 870.165 cv
1220.39 905.227 1215.68 920.266 1219.37 930.315 cv
1220.44 930.158 1221.31 930.072 1221.93 930.072 cv
1232.52 930.072 1262.37 788.012 1253.7 759.152 cv
cp
.701961 .796078 1 rgb
f
1274.03 1276.72 mo
1078.83 1276.72 li
1078.83 1267.88 li
1274.03 1267.88 li
1276.47 1267.88 1278.45 1269.86 1278.45 1272.3 cv
1278.45 1274.75 1276.47 1276.72 1274.03 1276.72 cv
cp
.227451 .196078 .337255 rgb
f
1284.51 1206.98 mo
1284.51 1206.98 1262.85 1241.31 1259.24 1247.03 cv
1255.63 1252.76 1246.24 1266.44 1259.24 1274.15 cv
1272.23 1281.87 1314.73 1311.41 1317.74 1308.29 cv
1320.75 1305.19 1306.5 1269.56 1301.21 1257.87 cv
1295.91 1246.18 1308.57 1222.4 1308.57 1222.4 cv
1284.51 1206.98 li
cp
1 .568627 .423529 rgb
f
1128.55 921.365 mo
1128.55 921.365 1129.04 974.606 1142.99 989.037 cv
1156.95 1003.47 1337.67 1027.53 1337.67 1056.39 cv
1337.67 1085.25 1277.77 1211.95 1277.77 1211.95 cv
1318.2 1244.79 li
1318.2 1244.79 1426.39 1030.3 1415.41 1010.93 cv
1389.52 965.24 1212.31 928.331 1212.31 928.331 cv
1128.55 921.365 li
cp
0 .0352941 .580392 rgb
f
1265.61 1235.6 mo
1264.26 1234.08 1261.83 1234.34 1260.81 1236.1 cv
1255.84 1244.7 1236.45 1256.22 1245.82 1267.88 cv
1247.97 1270.56 1317.6 1318.9 1321.6 1314.91 cv
1325.59 1310.91 1307.39 1269.46 1307.39 1264.49 cv
1307.39 1259.52 1298.73 1265.63 1288.25 1257.75 cv
1280.52 1251.94 1270.38 1240.95 1265.61 1235.6 cv
cp
.254902 .486275 .996078 rgb
f
1244.7 1255.81 mo
1242.78 1259.74 1242.54 1263.8 1245.82 1267.88 cv
1247.97 1270.56 1317.6 1318.9 1321.6 1314.91 cv
1322.61 1313.9 1322.2 1310.48 1321.02 1305.87 cv
1306.91 1303.75 1259.42 1267.32 1244.7 1255.81 cv
cp
.956863 .823529 .635294 rgb
f
1344.87 1334.54 mo
1342.88 1334.13 1341.09 1335.79 1341.32 1337.81 cv
1342.48 1347.67 1333.81 1368.49 1348.29 1372.25 cv
1351.62 1373.11 1436.34 1370.28 1437.15 1364.68 cv
1437.97 1359.09 1394.05 1334.12 1389.28 1332.74 cv
1379.99 1330.08 1382.55 1339.91 1369.45 1339.85 cv
1359.78 1339.81 1351.89 1335.98 1344.87 1334.54 cv
cp
.254902 .486275 .996078 rgb
f
1340.18 1363.24 mo
1340.99 1367.53 1343.22 1370.94 1348.29 1372.25 cv
1351.62 1373.11 1436.34 1370.28 1437.15 1364.68 cv
1437.36 1363.27 1434.99 1360.78 1431.29 1357.78 cv
1418.71 1364.51 1358.86 1363.68 1340.18 1363.24 cv
cp
.956863 .823529 .635294 rgb
f
1754.67 1243.36 mo
1754.67 1243.36 1762.63 1254.84 1754.67 1270.27 cv
1746.71 1285.69 1733.77 1294.11 1737.26 1305.06 cv
1740.74 1316.01 1803.93 1264.26 1803.93 1264.26 cv
1772.88 1229.49 li
1754.67 1243.36 li
cp
1 .568627 .423529 rgb
f
1796.47 596.383 mo
1796.47 596.383 1778.06 585.437 1756.66 593.397 cv
1735.27 601.36 1733.27 621.262 1733.27 637.185 cv
1733.27 653.108 1748.2 665.05 1745.72 689.929 cv
1743.23 714.808 1731.78 726.751 1746.71 733.219 cv
1761.64 739.688 1790 740.185 1823.34 720.282 cv
1856.68 700.379 1876.58 709.942 1876.58 709.942 cv
1876.58 709.942 1833.29 585.934 1796.47 596.383 cv
.00392157 0 .196078 rgb
f
1442.23 1284.07 mo
1439.51 1283.2 1436.34 1281.79 1433.28 1279.53 cv
1428.23 1268 1421.2 1249.04 1419.08 1239.58 cv
1416.09 1226.27 1478.79 1067.76 1478.79 1067.76 cv
1478.79 1067.76 1436 1045.77 1421.07 1072.38 cv
1406.14 1099 1401.41 1224.25 1395.69 1230.9 cv
1389.97 1237.55 1381.76 1241.89 1381.76 1251.15 cv
1381.76 1260.41 1407.63 1291.47 1407.63 1291.47 cv
1407.63 1291.47 1430.13 1294.59 1442.19 1291.27 cv
1445.77 1290.28 1445.77 1285.2 1442.23 1284.07 cv
cp
1 .407843 .168627 rgb
f
1421.07 1072.38 mo
1417.21 1079.26 1414.04 1092.71 1411.35 1109 cv
1414.54 1107.7 1419.16 1107.36 1425.11 1110.88 cv
1432.42 1115.21 1446.34 1120.01 1457.59 1122.62 cv
1469.14 1092.16 1478.79 1067.76 1478.79 1067.76 cv
1478.79 1067.76 1436 1045.77 1421.07 1072.38 cv
cp
.909804 .317647 .0862745 rgb
f
1590.4 1203.58 mo
1590.4 1203.58 1557.61 1219.57 1556.64 1224.66 cv
1556.24 1226.81 1556.86 1229.01 1558.27 1231.14 cv
1560.51 1234.52 1567.13 1236.16 1575.66 1231.14 cv
1590.4 1222.46 1642.81 1187.36 1644 1184.98 cv
1644.96 1183.06 1642.23 1179.54 1642.23 1179.54 cv
1636.86 1180.22 1590.4 1203.58 1590.4 1203.58 cv
cp
.0627451 .121569 .25098 rgb
f
1588.19 1200.97 mo
1588.19 1200.97 1557.61 1219.57 1556.64 1224.66 cv
1555.68 1229.76 1558.71 1237.2 1573.45 1228.52 cv
1588.19 1219.84 1639.72 1186.57 1641.79 1182.37 cv
1642.96 1179.99 1643.17 1178.37 1637.79 1179.06 cv
1632.42 1179.75 1588.19 1200.97 1588.19 1200.97 cv
cp
.956863 .823529 .635294 rgb
f
1523.37 1133.11 mo
1541.34 1156.89 1553.49 1201.74 1553.49 1211.46 cv
1553.49 1221.19 1564.37 1219.91 1568.29 1218.49 cv
1571.48 1217.33 1646.49 1182.83 1642.26 1178.5 cv
1638.04 1174.18 1596.82 1183.91 1584.67 1176.34 cv
1572.51 1168.78 1542.4 1046.66 1542.4 1046.66 cv
1501.18 1072.6 li
1501.18 1072.6 1505.41 1109.34 1523.37 1133.11 cv
cp
1 .407843 .168627 rgb
f
1542.4 1046.66 mo
1501.18 1072.6 li
1501.18 1072.6 1503.95 1096.69 1514.55 1118.48 cv
1519.06 1117.78 1524.55 1115.68 1530.74 1110.88 cv
1542.7 1101.62 1547.07 1093.61 1553.28 1088.31 cv
1546.97 1065.22 1542.4 1046.66 1542.4 1046.66 cv
cp
.909804 .317647 .0862745 rgb
f
1600.54 1179.32 mo
1597.25 1184.04 1601.38 1204.14 1601.38 1204.14 cv
1631.23 1189.04 li
1631.23 1189.04 1630.19 1177.59 1627.74 1176.01 cv
1621.98 1172.3 1604.46 1173.7 1600.54 1179.32 cv
cp
.254902 .486275 .996078 rgb
f
1332 929.727 mo
1332 929.727 1322.3 985.705 1332 995.408 cv
1341.7 1005.11 1358.37 1013.82 1362.85 1039.2 cv
1367.33 1064.57 1358.87 1092.94 1358.87 1092.94 cv
1358.87 1092.94 1386.74 1110.35 1405.15 1102.39 cv
1423.56 1094.43 1457.39 1114.33 1473.32 1110.35 cv
1489.24 1106.37 1515.61 1072.53 1530.54 1080.99 cv
1545.47 1089.45 1564.37 1069.05 1564.37 1069.05 cv
1564.37 1069.05 1527.06 950.368 1509.64 942.904 cv
1492.22 935.44 1460.43 942.222 1447 936.251 cv
1433.56 930.28 1433.59 923.13 1433.59 923.13 cv
1332 929.727 li
cp
.733333 .858824 1 rgb
f
1424.03 1255.81 mo
1436.32 1276.72 li
1430.27 1282.31 li
1413.04 1263.45 li
1424.03 1255.81 li
cp
.254902 .486275 .996078 rgb
f
1381.76 1262.72 mo
1381.76 1262.72 1379.27 1253.46 1386.74 1250.57 cv
1394.2 1247.68 1402.91 1251.44 1417.59 1268.51 cv
1432.27 1285.57 1440.48 1291.6 1440.48 1291.6 cv
1408.13 1296.27 li
1381.76 1262.72 li
cp
0 0 0 rgb
f
1508.04 764.772 mo
1550.08 823.098 li
1574.1 805.646 li
1551.27 740.556 li
1508.04 764.772 li
cp
.831373 0 .301961 rgb
f
1475.55 811.053 mo
1475.55 811.053 1484.88 884.944 1491.79 884.944 cv
1498.69 884.944 1532.94 822.51 1536.76 818.691 cv
1540.58 814.872 1519.84 796.872 1523.32 793.389 cv
1526.81 789.905 1527.8 797.963 1541.24 797.963 cv
1554.67 797.963 1561.76 766.644 1564.37 769.256 cv
1566.99 771.868 1573.33 779.456 1577.06 793.389 cv
1580.79 807.321 1503.17 936.251 1482.27 936.251 cv
1461.37 936.251 1438.89 818.691 1438.89 818.691 cv
1475.55 811.053 li
cp
1 .407843 .168627 rgb
f
1445.54 849.359 mo
1452.4 843.39 1467.36 831.204 1477.97 828.468 cv
1476.48 818.403 1475.55 811.053 1475.55 811.053 cv
1438.89 818.691 li
1438.89 818.691 1441.41 831.848 1445.54 849.359 cv
cp
.909804 .317647 .0862745 rgb
f
1551.27 740.556 mo
1552.98 743.518 1544.75 751.475 1532.88 758.327 cv
1521.01 765.179 1510 768.333 1508.29 765.371 cv
1506.58 762.409 1514.82 754.453 1526.69 747.6 cv
1538.56 740.748 1549.56 737.594 1551.27 740.556 cv
cp
.866667 .0588235 .352941 rgb
f
1511.27 765.382 mo
1510.21 765.382 1509.45 765.171 1509.25 764.82 cv
1508.36 763.281 1513.76 756.338 1527.24 748.556 cv
1535.67 743.689 1543.93 740.545 1548.29 740.545 cv
1549.36 740.545 1550.12 740.755 1550.32 741.106 cv
1551.21 742.646 1545.81 749.588 1532.33 757.372 cv
1523.9 762.238 1515.64 765.382 1511.27 765.382 cv
cp
1 1 1 rgb
f
1815.88 925.287 mo
1815.88 925.287 1662.62 970.07 1634.75 1007.89 cv
1606.89 1045.7 1753.18 1248.72 1753.18 1248.72 cv
1784.03 1238.77 li
1784.03 1238.77 1697.45 1048.69 1715.36 1042.72 cv
1733.28 1036.75 1876.58 1015.85 1888.52 1003.91 cv
1900.46 991.964 1927.27 948.98 1907.43 929.14 cv
1887.59 909.301 1814.88 919.316 1814.88 919.316 cv
1815.88 925.287 li
.733333 .858824 1 rgb
f
1867.09 907.194 mo
1867.04 907.193 li
1866.43 907.168 1865.96 906.654 1865.99 906.046 cv
1866.31 898.337 li
1866.34 897.744 1866.83 897.281 1867.42 897.281 cv
1867.46 897.282 li
1868.07 897.308 1868.54 897.821 1868.52 898.43 cv
1868.19 906.139 li
1868.16 906.731 1867.67 907.194 1867.09 907.194 cv
cp
1 1 1 rgb
f
1865.8 937.421 mo
1865.75 937.419 li
1865.15 937.393 1864.67 936.879 1864.7 936.271 cv
1865.34 921.158 li
1865.37 920.55 1865.78 920.024 1866.49 920.104 cv
1867.1 920.13 1867.57 920.643 1867.55 921.252 cv
1866.9 936.365 li
1866.88 936.958 1866.39 937.421 1865.8 937.421 cv
1862.49 967.261 mo
1862.32 967.261 1862.14 967.221 1861.98 967.136 cv
1861.44 966.855 1861.23 966.19 1861.51 965.649 cv
1862.91 962.958 1863.69 960.053 1863.82 957.011 cv
1864.05 951.385 li
1864.08 950.777 1864.49 950.292 1865.2 950.331 cv
1865.81 950.356 1866.28 950.87 1866.26 951.478 cv
1866.02 957.103 li
1865.88 960.471 1865.02 963.689 1863.47 966.668 cv
1863.27 967.044 1862.89 967.261 1862.49 967.261 cv
1837.01 981.421 mo
1836.52 981.421 1836.08 981.099 1835.94 980.608 cv
1835.78 980.021 1836.13 979.414 1836.72 979.255 cv
1848.62 976.025 li
1849.48 975.791 1850.33 975.501 1851.15 975.163 cv
1851.71 974.934 1852.36 975.195 1852.59 975.759 cv
1852.82 976.321 1852.56 976.966 1851.99 977.199 cv
1851.09 977.572 1850.15 977.894 1849.2 978.152 cv
1837.3 981.382 li
1837.2 981.409 1837.1 981.421 1837.01 981.421 cv
1807.78 989.433 mo
1807.3 989.433 1806.86 989.114 1806.72 988.625 cv
1806.56 988.038 1806.91 987.431 1807.49 987.268 cv
1812.56 985.869 1817.45 984.525 1822.1 983.249 cv
1822.69 983.095 1823.29 983.436 1823.45 984.022 cv
1823.61 984.61 1823.27 985.215 1822.68 985.376 cv
1818.04 986.649 1813.14 987.994 1808.08 989.394 cv
1807.98 989.421 1807.88 989.433 1807.78 989.433 cv
1778.6 997.562 mo
1778.12 997.562 1777.68 997.245 1777.54 996.758 cv
1777.38 996.173 1777.72 995.564 1778.31 995.398 cv
1783.21 994.019 1788.09 992.654 1792.89 991.318 cv
1793.48 991.146 1794.08 991.497 1794.25 992.083 cv
1794.41 992.67 1794.07 993.278 1793.48 993.441 cv
1788.69 994.777 1783.81 996.141 1778.9 997.521 cv
1778.8 997.55 1778.7 997.562 1778.6 997.562 cv
1749.47 1005.86 mo
1748.99 1005.86 1748.55 1005.54 1748.41 1005.06 cv
1748.25 1004.47 1748.58 1003.86 1749.17 1003.69 cv
1753.96 1002.31 1758.83 1000.92 1763.73 999.522 cv
1764.32 999.351 1764.93 999.695 1765.09 1000.28 cv
1765.26 1000.87 1764.92 1001.48 1764.33 1001.64 cv
1759.44 1003.04 1754.57 1004.43 1749.78 1005.81 cv
1749.68 1005.84 1749.57 1005.86 1749.47 1005.86 cv
1720.41 1014.42 mo
1719.94 1014.42 1719.5 1014.11 1719.36 1013.63 cv
1719.18 1013.05 1719.51 1012.43 1720.09 1012.26 cv
1724.72 1010.86 1729.58 1009.41 1734.62 1007.93 cv
1735.2 1007.76 1735.82 1008.09 1735.99 1008.68 cv
1736.16 1009.26 1735.83 1009.88 1735.24 1010.05 cv
1730.21 1011.53 1725.35 1012.97 1720.73 1014.37 cv
1720.62 1014.4 1720.52 1014.42 1720.41 1014.42 cv
1691.53 1023.61 mo
1691.08 1023.61 1690.65 1023.33 1690.49 1022.87 cv
1690.29 1022.3 1690.59 1021.67 1691.17 1021.47 cv
1695.08 1020.11 1699.94 1018.51 1705.6 1016.73 cv
1706.18 1016.54 1706.8 1016.87 1706.98 1017.45 cv
1707.17 1018.03 1706.85 1018.64 1706.26 1018.83 cv
1700.62 1020.61 1695.79 1022.2 1691.89 1023.55 cv
1691.77 1023.59 1691.65 1023.61 1691.53 1023.61 cv
1678.92 1046.56 mo
1678.38 1046.56 1677.9 1046.16 1677.83 1045.61 cv
1677.46 1042.87 1677.27 1040.35 1677.27 1038.11 cv
1677.28 1034.92 1677.66 1032.22 1678.42 1030.1 cv
1678.62 1029.53 1679.25 1029.22 1679.83 1029.43 cv
1680.4 1029.63 1680.7 1030.26 1680.5 1030.84 cv
1679.82 1032.73 1679.48 1035.18 1679.48 1038.11 cv
1679.48 1040.25 1679.66 1042.67 1680.01 1045.32 cv
1680.1 1045.92 1679.67 1046.47 1679.07 1046.55 cv
1678.92 1046.56 li
1686.37 1075.89 mo
1685.91 1075.89 1685.48 1075.59 1685.32 1075.13 cv
1683.59 1069.9 1682.11 1065 1680.94 1060.56 cv
1680.78 1059.98 1681.14 1059.37 1681.72 1059.22 cv
1682.32 1059.05 1682.92 1059.41 1683.07 1060 cv
1684.23 1064.39 1685.7 1069.25 1687.42 1074.44 cv
1687.61 1075.01 1687.3 1075.64 1686.72 1075.83 cv
1686.6 1075.87 1686.48 1075.89 1686.37 1075.89 cv
1696.94 1104.27 mo
1696.5 1104.27 1696.09 1104.01 1695.92 1103.58 cv
1693.93 1098.7 1692.08 1093.94 1690.39 1089.45 cv
1690.18 1088.88 1690.47 1088.24 1691.04 1088.03 cv
1691.61 1087.82 1692.25 1088.1 1692.46 1088.68 cv
1694.13 1093.15 1695.98 1097.89 1697.95 1102.76 cv
1698.19 1103.32 1697.91 1103.96 1697.35 1104.19 cv
1697.21 1104.25 1697.07 1104.27 1696.94 1104.27 cv
1708.85 1132.12 mo
1708.43 1132.12 1708.03 1131.88 1707.85 1131.47 cv
1705.77 1126.84 1703.73 1122.19 1701.75 1117.58 cv
1701.52 1117.02 1701.77 1116.37 1702.33 1116.13 cv
1702.89 1115.9 1703.54 1116.15 1703.78 1116.71 cv
1705.76 1121.31 1707.78 1125.95 1709.86 1130.57 cv
1710.11 1131.12 1709.86 1131.78 1709.3 1132.02 cv
1709.15 1132.09 1709 1132.12 1708.85 1132.12 cv
1721.58 1159.61 mo
1721.17 1159.61 1720.77 1159.38 1720.58 1158.98 cv
1718.44 1154.48 1716.28 1149.9 1714.13 1145.27 cv
1713.88 1144.72 1714.12 1144.06 1714.67 1143.8 cv
1715.22 1143.55 1715.88 1143.79 1716.13 1144.34 cv
1718.28 1148.96 1720.43 1153.54 1722.57 1158.04 cv
1722.84 1158.59 1722.6 1159.24 1722.05 1159.5 cv
1721.9 1159.58 1721.74 1159.61 1721.58 1159.61 cv
1734.88 1186.83 mo
1734.48 1186.83 1734.09 1186.6 1733.89 1186.22 cv
1731.72 1181.87 1729.47 1177.32 1727.17 1172.63 cv
1726.91 1172.09 1727.13 1171.42 1727.68 1171.16 cv
1728.22 1170.9 1728.89 1171.11 1729.16 1171.66 cv
1731.45 1176.35 1733.7 1180.89 1735.87 1185.23 cv
1736.14 1185.78 1735.92 1186.44 1735.37 1186.71 cv
1735.21 1186.79 1735.05 1186.83 1734.88 1186.83 cv
1748.66 1213.82 mo
1748.26 1213.82 1747.88 1213.6 1747.68 1213.22 cv
1745.59 1209.2 1743.25 1204.68 1740.73 1199.75 cv
1740.45 1199.21 1740.67 1198.54 1741.21 1198.27 cv
1741.76 1197.99 1742.42 1198.2 1742.7 1198.75 cv
1745.21 1203.67 1747.55 1208.19 1749.64 1212.21 cv
1749.92 1212.75 1749.71 1213.41 1749.17 1213.69 cv
1749.01 1213.78 1748.83 1213.82 1748.66 1213.82 cv
f
1759.15 1233.62 mo
1758.76 1233.62 1758.38 1233.41 1758.18 1233.04 cv
1758.18 1233.04 1756.85 1230.6 1754.53 1226.24 cv
1754.25 1225.7 1754.45 1225.04 1754.99 1224.75 cv
1755.52 1224.46 1756.19 1224.66 1756.48 1225.2 cv
1758.79 1229.55 1760.12 1231.98 1760.12 1231.99 cv
1760.41 1232.52 1760.21 1233.19 1759.68 1233.48 cv
1759.51 1233.57 1759.33 1233.62 1759.15 1233.62 cv
cp
f
1914.1 954.023 mo
1914.1 954.02 li
1914.1 954.022 1914.1 954.021 1914.1 954.023 cv
1914.14 953.694 mo
1914.14 953.691 1914.14 953.687 1914.14 953.683 cv
1914.14 953.686 1914.14 953.691 1914.14 953.694 cv
1914.15 953.608 mo
1914.15 953.607 li
1914.15 953.608 li
1914.16 953.527 mo
1914.16 953.525 1914.16 953.521 1914.16 953.519 cv
1914.16 953.521 1914.16 953.524 1914.16 953.527 cv
1914.17 953.447 mo
1914.17 953.44 1914.17 953.434 1914.17 953.427 cv
1914.17 953.434 1914.17 953.44 1914.17 953.447 cv
1914.18 953.366 mo
1914.18 953.355 1914.18 953.347 1914.19 953.336 cv
1914.18 953.346 1914.18 953.356 1914.18 953.366 cv
1914.19 953.281 mo
1914.19 953.274 1914.19 953.266 1914.2 953.259 cv
1914.19 953.265 1914.19 953.274 1914.19 953.281 cv
1914.2 953.198 mo
1914.2 953.189 1914.21 953.18 1914.21 953.171 cv
1914.21 953.179 1914.2 953.19 1914.2 953.198 cv
1914.21 953.115 mo
1914.21 953.103 1914.22 953.094 1914.22 953.081 cv
1914.22 953.093 1914.21 953.104 1914.21 953.115 cv
1914.22 953.033 mo
1914.22 953.021 1914.23 953.008 1914.23 952.996 cv
1914.23 953.008 1914.22 953.021 1914.22 953.033 cv
1914.25 952.768 mo
1914.33 952.037 1914.4 951.308 1914.45 950.586 cv
1914.45 950.586 li
1914.4 951.308 1914.33 952.037 1914.25 952.768 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmN
UVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:
`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[\"gmNUVsX:`4)M[
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\"gmNUrBg=`j_eb\#79UVoZ?Fag\4k\#IQ[Wm%rQbdX\!\#mrbXj=JZd'p4+\?F>jZ.$4ge$u^5\?j_q
[+;aof=A<A\[L2%\(S=%gUXlL\[pS,]%sp/hRU;V\\6q3^#6H8iOZha]"m@;^uW)Cjgr=j]#3^B`94_N
kdndu]#O$Ha6U=Xm(1=+]#sEObO<$dn%-a4]$9cVc18Hko"*0>]$U)\dIk*!p:A]H]@6PeeG6`,q7G5S
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWR\$riU\$riU\$riU\$riU\$riU\$riU\$rlW\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y
\@B&Y\@B&Y\@B&Y\@B)[\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]
\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[oA`]"5Ja]"5Ja]"5Ja
~>
<~U8"BVU8"BWUSFTZUSFT[Unjf_V5C,eVP^5fVP^5gVl-GkW2QYoWMuksWiE)"X/i;&XK8M)XK8M*Xf\_.
Y-+q1Y-+q2YHY79Z*CR=Z*CR>ZEggCZa7!EZa7$G['[6K[C*HO[^NZS\$rlW\@B)[\[f8]\[f;_]"5Mc
]=Y_g]Y(ni]Y(qk]tM.o^V@Ou^V@Ou^V@S"^qde&_84"*_SX4._o'F2`5T^7`Pog8`Q#p;`lH-?a2l?C
aN;QGai_cKb0.uObKJ)PbKS2Sbfn;Tbg"DWc-FV[cHjh_cd:%cd*^7gdF$@hdF-IkdaQ[oe'umseCE+"
~>
<~_o'C0_o'C1`5KU5`Pog9`l?$<`l?$=a2c6AaN2HEaiVZIb0%lMbKJ)PbKJ)Qbg"DWc-=MYcHa_]cd0qa
d*U.edF$@idaHRldaHRme'ldqeC<%!e^`7%f%/I)f@S[-f\"j/f\"m1g=k97g=k<9gY:N=gt^`Ah;-rE
hVR/Ihr!>Khr!AMi8ESQiSieUio9"Yj5]4]jQ,C_jQ,Fak2tggk2tjikNM-nkiq?rl0@R!lKdd%lg4!)
m-O**m-X3.mdBN2mdKW5n*oi9nF?&=naZ/>nac8BoCMSFoCV\Io_%nMp%J+Qp@n=Up\=OYq"XXZq"aa]
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
1871.34 972.96 mo
1850.68 972.959 1830.73 969.307 1820.07 962.498 cv
1808.07 954.833 1800.03 942.273 1795.01 931.744 cv
1796.18 931.368 1797.32 931.007 1798.41 930.66 cv
1812.2 937.406 1837.87 948.671 1863.97 953.438 cv
1863.82 957.011 li
1863.69 960.053 1862.91 962.958 1861.51 965.649 cv
1861.23 966.19 1861.44 966.855 1861.98 967.136 cv
1862.14 967.221 1862.32 967.261 1862.49 967.261 cv
1862.89 967.261 1863.27 967.044 1863.47 966.668 cv
1865.02 963.689 1865.88 960.471 1866.02 957.103 cv
1866.16 953.823 li
1873.09 954.99 1880.04 955.676 1886.78 955.677 cv
1896.67 955.677 1906.12 954.199 1914.45 950.586 cv
1914.4 951.308 1914.33 952.037 1914.25 952.768 cv
1914.24 952.845 1914.24 952.919 1914.23 952.996 cv
1914.23 953.008 1914.22 953.021 1914.22 953.033 cv
1914.22 953.049 1914.22 953.065 1914.22 953.081 cv
1914.22 953.094 1914.21 953.103 1914.21 953.115 cv
1914.21 953.134 1914.21 953.152 1914.21 953.171 cv
1914.21 953.18 1914.2 953.189 1914.2 953.198 cv
1914.2 953.219 1914.2 953.238 1914.2 953.259 cv
1914.19 953.266 1914.19 953.274 1914.19 953.281 cv
1914.19 953.3 1914.19 953.317 1914.19 953.336 cv
1914.18 953.347 1914.18 953.355 1914.18 953.366 cv
1914.18 953.386 1914.18 953.406 1914.17 953.427 cv
1914.17 953.434 1914.17 953.44 1914.17 953.447 cv
1914.17 953.471 1914.17 953.495 1914.16 953.519 cv
1914.16 953.521 1914.16 953.525 1914.16 953.527 cv
1914.16 953.554 1914.16 953.581 1914.15 953.607 cv
1914.15 953.608 li
1914.15 953.633 1914.15 953.658 1914.14 953.683 cv
1914.14 953.687 1914.14 953.691 1914.14 953.694 cv
1914.13 953.803 1914.11 953.911 1914.1 954.02 cv
1914.1 954.023 li
1913.46 958.663 1912.14 963.442 1910.4 968.142 cv
1898.66 971.4 1884.85 972.96 1871.34 972.96 cv
.537255 .737255 1 rgb
f
1862.49 967.261 mo
1862.32 967.261 1862.14 967.221 1861.98 967.136 cv
1861.44 966.855 1861.23 966.19 1861.51 965.649 cv
1862.91 962.958 1863.69 960.053 1863.82 957.011 cv
1863.97 953.438 li
1864.7 953.571 1865.43 953.699 1866.16 953.823 cv
1866.02 957.103 li
1865.88 960.471 1865.02 963.689 1863.47 966.668 cv
1863.27 967.044 1862.89 967.261 1862.49 967.261 cv
.733333 .858823 1 rgb
f
1745.86 803.973 mo
1745.86 803.973 1721.33 843.442 1705.41 843.442 cv
1689.49 843.442 1652.71 787.1 1640.73 775.11 cv
1628.74 763.122 1599.92 753.123 1591.96 761.084 cv
1584 769.045 1585 803.973 1599.92 803.973 cv
1614.85 803.973 1634.75 799.87 1654.66 833.221 cv
1674.56 866.572 1690.48 900.408 1704.42 900.408 cv
1718.35 900.408 1781.04 824.701 1781.04 824.701 cv
1745.86 803.973 li
cp
1 .407843 .168627 rgb
f
1759.15 683.461 mo
1759.15 683.461 1770.94 701.237 1770.94 722.701 cv
1770.94 744.166 1768.6 760.354 1777.06 758.231 cv
1785.52 756.108 1805.92 701.374 1805.92 701.374 cv
1800.81 648.63 li
1759.15 683.461 li
.909804 .317647 .0862745 rgb
f
1962.78 1023.19 mo
1826.82 1023.19 li
1826.82 1012.24 li
1826.82 1012.24 1882.17 1010.06 1890.94 1001.29 cv
1892.22 1000.02 1920.16 1000.34 1940.81 1000.76 cv
1953.02 1001.01 1962.78 1010.98 1962.78 1023.19 cv
cp
.733333 .298039 .282353 rgb
f
1420.57 610.775 mo
1420.57 610.775 1438.48 613.263 1444.95 636.649 cv
1451.42 660.036 1449.93 708.301 1436.49 714.771 cv
1423.06 721.239 1411.62 720.741 1405.64 714.771 cv
1399.67 708.799 1420.57 610.775 1420.57 610.775 cv
cp
1 .407843 .168627 rgb
f
1393.2 745.122 mo
1393.2 745.122 1437.49 745.621 1456.4 764.529 cv
1475.31 783.437 1482.27 811.053 1482.27 811.053 cv
1441.16 830.754 li
1441.16 830.754 1437.74 906.838 1437.74 919.278 cv
1437.74 931.717 1332 929.726 1332 929.726 cv
1332 929.726 1320.56 808.316 1323.05 787.418 cv
1325.53 766.519 1373.35 743.296 1393.2 745.122 cv
0 .0313726 .52549 rgb
f
1328.94 895.305 mo
1328.94 895.298 1328.94 895.294 1328.94 895.287 cv
1328.94 895.294 1328.94 895.298 1328.94 895.305 cv
1328.92 895.075 mo
1328.92 895.072 li
1328.92 895.075 li
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.682353 .392157 .498039 ]
/C1 [.682353 .392157 .498039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.682353 .392157 .498039 ]
/C1 [.709804 .682353 .764706 ]
/N 1 
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Xf\_-Xf\_.Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q2YHP.5YHP.5YHP.5YHP.5YHP.5
YHP.5YHP.5YHP.5YHP.6Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9YctC;Z*CR=Z*CR=Z*CR=
Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CU?ZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEpmDZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa@*H['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I
~>
<~@q0"Y@q0"ZA7T4^AS#IcAnG[gB4tslBk_9qC2.L!CMRa&Ci!s*D/O6/Df9Q4E,]c9EH,u=EcQ5BF*)MG
FEM_KG'8%QGB\7UG^+LZH$Xd_H@(!cI!g<hI=6NmIXZcrIt*!!J:W9&JqAT+K7ef0KS5&5KnY89L51P>
LPUbBM2@(HMMd:LMi3OQN/`gVNK0$ZO,o?_OH>QdOcbfiP*2#mPE_;rQ'IW"QBmi'Q^=),R$a;0R@9S5
R[]e9S=H+?SXl=CSt;RHT:hjMTV8'QU8"BWUSFT[Unji`V5:&dVPg>iW2QYnWMuksWiE,#X/i>'XKAV,
~>
<~IXZ`pIXZ`qIt)ruJ:N0$JUrE)JqAW-K7ei1KS>,6Knb>:L51P>LkpkCM2@(GMMd:LMi3LPN/W^TNK&sY
NfK0]O,oBaOHGZfOckljP*;)nPa%DsQ'IW"QBmi'Q^=&+R$a8/R@0M4R[T_8S"#q<S=Q4ASXuFEStDXI
TV.sNTqS0RU8"BWUSFT[Unjf_V5:&dVP^8hVl-JlW2ZbqWN)tuWiN2$XK8M)Xf\_-Y-+q2YHP.6Yct@:
Z*CU?ZEggCZa7$G['d<L[C3NP[^W`T\@B&Y\[f8]]"5Jb]=Y\f]Y(nj]tM.o^:q@s^V@S"^qmk'_8=(+
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
1322.94 788.517 mo
1322.94 788.515 li
1322.94 788.517 1322.94 788.515 1322.94 788.517 cv
1322.94 788.431 mo
1322.94 788.427 1322.94 788.424 1322.94 788.42 cv
1322.94 788.423 1322.94 788.428 1322.94 788.431 cv
1322.95 788.378 mo
1322.95 788.375 1322.95 788.373 1322.95 788.37 cv
1322.95 788.373 1322.95 788.375 1322.95 788.378 cv
1322.95 788.292 mo
1322.96 788.288 1322.96 788.286 1322.96 788.283 cv
1322.96 788.285 1322.96 788.289 1322.95 788.292 cv
1322.96 788.245 mo
1322.96 788.237 1322.96 788.23 1322.96 788.222 cv
1322.96 788.23 1322.96 788.238 1322.96 788.245 cv
1322.97 788.162 mo
1322.97 788.155 1322.97 788.15 1322.97 788.143 cv
1322.97 788.149 1322.97 788.156 1322.97 788.162 cv
1322.98 788.015 mo
1322.98 788.014 1322.98 788.014 1322.98 788.013 cv
1322.98 788.015 1322.98 788.014 1322.98 788.015 cv
1322.98 787.976 mo
1322.99 787.967 1322.99 787.958 1322.99 787.949 cv
1322.99 787.958 1322.99 787.967 1322.98 787.976 cv
1322.99 787.905 mo
1322.99 787.894 1322.99 787.885 1323 787.874 cv
1322.99 787.885 1322.99 787.894 1322.99 787.905 cv
1323 787.844 mo
1323 787.834 1323 787.825 1323 787.815 cv
1323 787.824 1323 787.835 1323 787.844 cv
1323.01 787.777 mo
1323.01 787.767 1323.01 787.757 1323.01 787.747 cv
1323.01 787.756 1323.01 787.768 1323.01 787.777 cv
1323.01 787.718 mo
1323.01 787.705 1323.01 787.691 1323.02 787.678 cv
1323.01 787.691 1323.01 787.705 1323.01 787.718 cv
1323.02 787.658 mo
1323.02 787.643 1323.02 787.63 1323.02 787.615 cv
1323.02 787.629 1323.02 787.643 1323.02 787.658 cv
1323.03 787.593 mo
1323.03 787.578 1323.03 787.565 1323.03 787.55 cv
1323.03 787.564 1323.03 787.579 1323.03 787.593 cv
1323.03 787.534 mo
1323.03 787.519 1323.04 787.503 1323.04 787.488 cv
1323.04 787.503 1323.03 787.519 1323.03 787.534 cv
1323.04 787.472 mo
1323.04 787.454 1323.04 787.436 1323.05 787.418 cv
1323.04 787.436 1323.04 787.454 1323.04 787.472 cv
1323.05 787.418 mo
1323.07 787.248 1323.09 787.079 1323.12 786.909 cv
1323.09 787.079 1323.07 787.248 1323.05 787.418 cv
1323.13 786.836 mo
1325.05 774.693 1342 761.854 1359.66 753.657 cv
1342 761.854 1325.05 774.693 1323.13 786.836 cv
1359.86 753.563 mo
1359.9 753.544 1359.94 753.525 1359.99 753.506 cv
1359.94 753.525 1359.9 753.544 1359.86 753.563 cv
1393.33 745.124 mo
1393.33 745.124 1393.33 745.124 1393.32 745.124 cv
1393.33 745.124 1393.33 745.124 1393.33 745.124 cv
1393.27 745.123 mo
1393.27 745.123 1393.27 745.123 1393.27 745.123 cv
1393.27 745.123 1393.27 745.123 1393.27 745.123 cv
1393.26 745.123 mo
1393.24 745.123 1393.23 745.123 1393.22 745.122 cv
1393.23 745.123 1393.24 745.123 1393.26 745.123 cv
1393.2 745.122 mo
1393.18 745.12 1393.15 745.117 1393.12 745.115 cv
1393.15 745.117 1393.18 745.12 1393.2 745.122 cv
1390.88 745.021 mo
1390.88 745.021 li
1390.88 745.021 li
1390.88 745.021 li
.705882 .666667 .74902 rgb
f
1344.89 900.408 mo
1339.87 900.408 1334.56 899.459 1329.12 897.408 cv
1329.06 896.714 1329 896.013 1328.94 895.305 cv
1328.94 895.298 1328.94 895.294 1328.94 895.287 cv
1328.93 895.217 1328.93 895.145 1328.92 895.075 cv
1328.92 895.072 li
1325.81 858.436 1321.64 803.858 1322.94 788.517 cv
1322.94 788.515 1322.94 788.517 1322.94 788.515 cv
1322.94 788.487 1322.94 788.459 1322.94 788.431 cv
1322.94 788.428 1322.94 788.423 1322.94 788.42 cv
1322.94 788.406 1322.95 788.391 1322.95 788.378 cv
1322.95 788.375 1322.95 788.373 1322.95 788.37 cv
1322.95 788.344 1322.95 788.317 1322.95 788.292 cv
1322.96 788.289 1322.96 788.285 1322.96 788.283 cv
1322.96 788.27 1322.96 788.257 1322.96 788.245 cv
1322.96 788.238 1322.96 788.23 1322.96 788.222 cv
1322.96 788.203 1322.97 788.181 1322.97 788.162 cv
1322.97 788.156 1322.97 788.149 1322.97 788.143 cv
1322.97 788.101 1322.98 788.057 1322.98 788.015 cv
1322.98 788.014 1322.98 788.015 1322.98 788.013 cv
1322.98 788 1322.98 787.988 1322.98 787.976 cv
1322.99 787.967 1322.99 787.958 1322.99 787.949 cv
1322.99 787.935 1322.99 787.92 1322.99 787.905 cv
1322.99 787.894 1322.99 787.885 1323 787.874 cv
1323 787.864 1323 787.854 1323 787.844 cv
1323 787.835 1323 787.824 1323 787.815 cv
1323 787.802 1323 787.79 1323.01 787.777 cv
1323.01 787.768 1323.01 787.756 1323.01 787.747 cv
1323.01 787.737 1323.01 787.728 1323.01 787.718 cv
1323.01 787.705 1323.01 787.691 1323.02 787.678 cv
1323.02 787.672 1323.02 787.664 1323.02 787.658 cv
1323.02 787.643 1323.02 787.629 1323.02 787.615 cv
1323.02 787.608 1323.02 787.6 1323.03 787.593 cv
1323.03 787.579 1323.03 787.564 1323.03 787.55 cv
1323.03 787.545 1323.03 787.539 1323.03 787.534 cv
1323.03 787.519 1323.04 787.503 1323.04 787.488 cv
1323.04 787.483 1323.04 787.477 1323.04 787.472 cv
1323.04 787.454 1323.04 787.436 1323.05 787.418 cv
1323.05 787.418 li
1323.05 787.418 li
1323.07 787.248 1323.09 787.079 1323.12 786.909 cv
1323.12 786.885 1323.12 786.86 1323.13 786.836 cv
1325.05 774.693 1342 761.854 1359.66 753.657 cv
1359.73 753.625 1359.79 753.594 1359.86 753.563 cv
1359.9 753.544 1359.94 753.525 1359.99 753.506 cv
1371.26 748.312 1382.8 745.02 1390.88 745.021 cv
1390.88 745.021 li
1391.66 745.021 1392.41 745.052 1393.12 745.115 cv
1393.15 745.117 1393.18 745.12 1393.2 745.122 cv
1393.2 745.122 li
1393.2 745.122 1393.21 745.122 1393.22 745.122 cv
1393.23 745.123 1393.24 745.123 1393.26 745.123 cv
1393.26 745.123 1393.26 745.123 1393.27 745.123 cv
1393.27 745.123 1393.27 745.123 1393.27 745.123 cv
1393.29 745.124 1393.3 745.124 1393.32 745.124 cv
1393.33 745.124 1393.33 745.124 1393.33 745.124 cv
1395.05 745.155 1414.17 745.622 1432.2 751.277 cv
1430.67 768.046 1424.67 783.276 1409.87 792.516 cv
1378.53 812.096 1381.76 832.492 1381.76 861.86 cv
1381.76 883.888 1365.83 900.409 1344.89 900.408 cv
0 .027451 .45098 rgb
f
1446.03 641.128 mo
1446.03 641.128 1420.15 659.52 1426.62 687.9 cv
1433.08 716.281 1441.22 758.807 1409.87 776.72 cv
1378.53 794.632 1381.76 813.292 1381.76 840.162 cv
1381.76 867.031 1353.44 884.944 1322.69 870.017 cv
1291.95 855.089 1282.49 830.46 1282.49 798.521 cv
1282.49 766.581 1297.87 725.37 1318.07 705.167 cv
1338.27 684.965 1330.76 675.212 1347.18 652.074 cv
1363.6 628.937 1388.6 606.918 1411.74 606.918 cv
1434.88 606.918 1451.21 626.077 1446.03 641.128 cv
cp
0 .0117647 .262745 rgb
f
1805.92 701.374 mo
1805.92 701.374 1788.91 704.642 1768.11 725.446 cv
1747.3 746.251 1722.33 811.838 1722.33 811.838 cv
1770.1 858.685 li
1770.1 858.685 1777.06 836.764 1784.03 836.764 cv
1791 836.764 1806.92 869.558 1800.95 890.954 cv
1794.98 912.35 1788.01 925.287 1788.01 925.287 cv
1788.01 925.287 1892.2 983.986 1931.31 938.224 cv
1945.73 921.365 1913.9 811.66 1860.66 758.418 cv
1807.42 705.177 1805.92 701.374 1805.92 701.374 cv
.254902 .486275 .996078 rgb
f
1861.11 758.871 mo
1860.96 758.721 1860.81 758.568 1860.66 758.418 cv
1843.19 740.952 1831.29 728.806 1823.19 720.37 cv
1823.19 720.37 li
1831.29 728.806 1843.19 740.951 1860.66 758.418 cv
1860.81 758.568 1860.96 758.72 1861.11 758.871 cv
.603922 .772549 .980392 rgb
f
1823.19 720.37 mo
1808.84 705.426 1806.4 702.123 1806 701.503 cv
1806.4 702.123 1808.84 705.426 1823.19 720.37 cv
1823.19 720.37 li
.00392157 0 .196078 rgb
f
1805.72 701.417 mo
1805.73 701.416 1805.73 701.415 1805.74 701.414 cv
1805.73 701.415 1805.73 701.416 1805.72 701.417 cv
1805.87 701.385 mo
1805.87 701.385 1805.88 701.384 1805.88 701.383 cv
1805.88 701.384 1805.87 701.385 1805.87 701.385 cv
1805.88 701.382 mo
1805.88 701.382 1805.89 701.382 1805.89 701.382 cv
1805.89 701.382 1805.88 701.382 1805.88 701.382 cv
1805.9 701.379 mo
1805.9 701.378 1805.91 701.378 1805.91 701.378 cv
1805.91 701.378 1805.9 701.378 1805.9 701.379 cv
1805.91 701.377 mo
1805.91 701.377 1805.91 701.376 1805.91 701.376 cv
1805.91 701.376 1805.91 701.377 1805.91 701.377 cv
1805.91 701.376 mo
1805.92 701.376 1805.92 701.376 1805.92 701.376 cv
1805.92 701.376 1805.92 701.376 1805.91 701.376 cv
1805.92 701.375 mo
1805.92 701.375 1805.92 701.375 1805.92 701.375 cv
1805.92 701.375 1805.92 701.375 1805.92 701.375 cv
.611765 .247059 .0862745 rgb
f
1857.3 810.483 mo
1841.01 810.483 1830.27 803.217 1826.82 779.416 cv
1824.14 760.927 1788.32 735.175 1785.76 730.205 cv
1782.99 724.83 1782.04 718.716 1783.02 712.749 cv
1795.32 704.002 1804.29 701.738 1805.72 701.417 cv
1805.73 701.416 1805.73 701.415 1805.74 701.414 cv
1805.79 701.401 1805.84 701.392 1805.87 701.385 cv
1805.87 701.385 1805.88 701.384 1805.88 701.383 cv
1805.88 701.383 1805.88 701.383 1805.88 701.382 cv
1805.88 701.382 1805.89 701.382 1805.89 701.382 cv
1805.89 701.381 1805.9 701.38 1805.9 701.379 cv
1805.9 701.378 1805.91 701.378 1805.91 701.378 cv
1805.91 701.377 1805.91 701.377 1805.91 701.377 cv
1805.91 701.377 1805.91 701.376 1805.91 701.376 cv
1805.91 701.376 1805.91 701.376 1805.91 701.376 cv
1805.92 701.376 1805.92 701.376 1805.92 701.376 cv
1805.92 701.376 1805.92 701.376 1805.92 701.375 cv
1805.92 701.375 1805.92 701.375 1805.92 701.375 cv
1805.92 701.374 1805.92 701.374 1805.92 701.374 cv
1805.92 701.374 1805.94 701.406 1806 701.503 cv
1806.4 702.123 1808.84 705.426 1823.19 720.37 cv
1831.29 728.806 1843.19 740.952 1860.66 758.418 cv
1860.81 758.568 1860.96 758.721 1861.11 758.871 cv
1873.23 771.135 1883.48 787.199 1892.09 804.678 cv
1892.09 804.678 li
1878.76 807.888 1867.04 810.483 1857.3 810.483 cv
.172549 .376471 .996078 rgb
f
1759.15 602.354 mo
1759.15 602.354 1740.24 604.842 1735.27 645.644 cv
1730.29 686.446 1734.77 711.823 1747.21 709.833 cv
1759.65 707.843 1797.46 680.475 1800.45 661.069 cv
1803.44 641.664 1787.51 596.383 1759.15 602.354 cv
cp
1 .407843 .168627 rgb
f
1763.13 590.412 mo
1763.13 590.412 1757.16 601.359 1753.68 620.765 cv
1750.19 640.171 1772.46 638.378 1767.04 663.06 cv
1761.62 687.741 1790.75 728.386 1805.92 743.563 cv
1821.1 758.739 1845.66 763.732 1845.66 785.438 cv
1845.66 807.143 1911 766.788 1919.37 758.418 cv
1927.74 750.048 1959.68 709.335 1913.9 681.968 cv
1868.12 654.601 1871.11 652.61 1859.17 623.253 cv
1847.22 593.896 1780.05 573.494 1763.13 590.412 cv
cp
.00392157 0 .258824 rgb
f
1272.38 799.17 mo
1272.38 799.17 1315.07 829.319 1334.18 829.319 cv
1353.28 829.319 1424.98 771.788 1435.58 771.788 cv
1446.18 771.788 1467.18 771.788 1467.18 771.788 cv
1467.18 771.788 1454.32 739.707 1437.23 742.159 cv
1420.15 744.611 1347.14 787.707 1327.69 779.331 cv
1308.24 770.955 1290.09 751.224 1290.09 751.224 cv
1272.38 799.17 li
cp
1 .407843 .168627 rgb
f
1290.09 751.224 mo
1272.38 799.17 li
1272.38 799.17 1281.53 805.632 1293.25 812.572 cv
1297.19 796.921 1307.73 780.782 1314.25 771.837 cv
1300.63 762.678 1290.09 751.224 1290.09 751.224 cv
cp
.890196 .360784 .14902 rgb
f
1215.65 716.378 mo
1215.36 716.41 1215.06 716.445 1214.77 716.481 cv
1196.02 718.854 1191.41 739.481 1202.08 755.079 cv
1216.79 776.56 1245.08 794.537 1277.09 813.496 cv
1290.15 798.417 1307.58 775.321 1315.38 757.081 cv
1286.35 735.775 1246.12 713.028 1215.65 716.378 cv
cp
.956863 .956863 .956863 rgb
f
1478.57 1370.19 mo
1338.82 1370.19 li
1344.07 1342.85 1406.22 1143.76 1448.65 1010.54 cv
1449.21 1008.8 1448.25 1006.94 1446.51 1006.39 cv
1444.77 1005.83 1442.91 1006.79 1442.35 1008.54 cv
1442.07 1009.43 1413.48 1099.2 1385.74 1188.48 cv
1344.19 1322.23 1334.13 1359.14 1332.35 1370.19 cv
1272.13 1370.19 li
1277.39 1342.85 1339.53 1143.76 1381.97 1010.54 cv
1382.53 1008.8 1381.56 1006.94 1379.82 1006.39 cv
1378.08 1005.83 1376.22 1006.79 1375.67 1008.54 cv
1375.38 1009.43 1346.8 1099.2 1319.06 1188.48 cv
1262.45 1370.67 1264.29 1373.17 1265.9 1375.38 cv
1267 1376.8 li
1478.57 1376.8 li
1480.4 1376.8 1481.88 1375.32 1481.88 1373.49 cv
1481.88 1371.67 1480.4 1370.19 1478.57 1370.19 cv
cp
.227451 .196078 .337255 rgb
f
1485.65 1296.27 mo
1290.45 1296.27 li
1290.45 1287.43 li
1485.65 1287.43 li
1488.09 1287.43 1490.07 1289.41 1490.07 1291.85 cv
1490.07 1294.29 1488.09 1296.27 1485.65 1296.27 cv
cp
f
1472.55 1015.81 mo
1336.59 1015.81 li
1336.59 997.896 li
1336.59 997.896 1373.47 1001.3 1386.03 1001.38 cv
1400.3 1001.47 1432.66 999.442 1453.51 998.013 cv
1463.81 997.306 1472.55 1005.48 1472.55 1015.81 cv
cp
.984314 .6 0 rgb
f
1748.56 1280.04 mo
1741.57 1289.76 1734.58 1296.67 1737.26 1305.06 cv
1740.74 1316.01 1803.93 1264.26 1803.93 1264.26 cv
1788.96 1247.49 li
1782.6 1254.73 1761.77 1277.44 1748.56 1280.04 cv
cp
0 .0156863 .309804 rgb
f
2099.78 1792.6 mo
2084.86 1792.6 li
2084.86 1326.88 li
2099.78 1326.88 li
2099.78 1792.6 li
cp
.298039 .258824 .447059 rgb
f
2532.91 1640.74 mo
2532.91 1640.74 2570.31 1671.11 2576.18 1676.97 cv
2582.04 1682.83 2532.91 1729.19 2532.91 1729.19 cv
2532.91 1729.19 2537.93 1681.99 2532.91 1676.97 cv
2527.89 1671.96 2499.41 1668.45 2499.41 1668.45 cv
2532.91 1640.74 li
cp
1 .486275 .309804 rgb
f
2553.76 1650.72 mo
2553.76 1650.72 2594 1672.01 2594 1680.48 cv
2594 1688.94 2538.96 1759.15 2531.72 1763.14 cv
2521.38 1768.86 2485.69 1771.79 2479.8 1765.9 cv
2473.92 1760.01 2490.19 1747.57 2499.41 1738.34 cv
2508.64 1729.12 2516.15 1715.2 2516.15 1706.38 cv
2516.15 1697.56 2498.93 1673.7 2516.15 1673.7 cv
2533.37 1673.7 2553.76 1650.72 2553.76 1650.72 cv
cp
.956863 .784314 .52549 rgb
f
2562.12 1712.99 mo
2573.78 1736.05 li
2579.14 1746.66 2587.9 1755.18 2598.67 1760.24 cv
2571.66 1804.22 li
2571.66 1804.22 2533.49 1829.55 2519.01 1823.69 cv
2504.53 1817.83 2549.76 1796.36 2549.76 1796.36 cv
2530.62 1733.57 li
2562.12 1712.99 li
cp
1 .486275 .309804 rgb
f
2296.23 1133.09 mo
2296.23 1133.09 2289.03 1156.24 2296.23 1163.44 cv
2303.44 1170.65 2315.42 1178.05 2315.42 1186.48 cv
2315.42 1194.91 2310.11 1303.7 2334.98 1309.03 cv
2359.84 1314.36 2448.99 1222.79 2448.99 1222.79 cv
2412.75 1178.57 li
2412.75 1178.57 2355.56 1246.77 2355.56 1239.67 cv
2355.56 1232.56 2332.47 1177.85 2332.47 1177.85 cv
2343.83 1155.12 li
2343.83 1155.12 2350.94 1128.12 2337.44 1122.44 cv
2323.94 1116.75 2296.23 1133.09 2296.23 1133.09 cv
cp
1 .407843 .168627 rgb
f
2334.8 1286.92 mo
2317.25 1277.2 2317.08 1206.43 2315.41 1186.75 cv
2315.32 1196.99 2310.35 1303.75 2334.98 1309.03 cv
2359.84 1314.36 2448.99 1222.79 2448.99 1222.79 cv
2432.27 1202.39 li
2409.46 1229.64 2351.38 1296.11 2334.8 1286.92 cv
cp
1 .34902 .129412 rgb
f
2314.23 1181.77 mo
2314.65 1182.64 2314.98 1183.52 2315.18 1184.41 cv
2314.92 1182.35 2314.62 1181.38 2314.23 1181.77 cv
cp
f
2504.21 1097.88 mo
2504.21 1097.88 2496.13 1093.13 2477.94 1100.94 cv
2459.75 1108.76 2398.54 1183.54 2398.54 1183.54 cv
2451.38 1229.01 li
2451.38 1229.01 2475.99 1200.9 2500.14 1163.44 cv
2524.3 1125.99 2504.21 1097.88 2504.21 1097.88 cv
cp
.235294 .372549 .701961 rgb
f
2599.01 1377.5 mo
2584.16 1386.42 li
2584.16 1386.42 2307.25 1437.18 2296.23 1481.94 cv
2285.22 1526.7 2512.04 1676.97 2512.04 1676.97 cv
2554.85 1642.87 li
2554.85 1642.87 2410.71 1543.49 2426.96 1527.24 cv
2443.21 1510.98 2634.78 1474.48 2634.78 1474.48 cv
2599.01 1377.5 li
cp
0 .0196078 .388235 rgb
f
2235.07 1736.6 mo
2235.07 1736.6 2243.95 1810.94 2248.83 1810.94 cv
2253.71 1810.94 2349.37 1810.94 2349.37 1810.94 cv
2349.37 1810.94 2294.95 1788.84 2284.8 1778.69 cv
2274.65 1768.54 2263.94 1733.81 2263.94 1733.81 cv
2235.07 1736.6 li
cp
1 .486275 .309804 rgb
f
2241.62 1792 mo
2241.62 1792 2301.14 1800.54 2308.78 1792.91 cv
2316.41 1785.27 2353 1806.46 2353 1810.94 cv
2353 1815.43 2256.19 1819.53 2240.21 1814.33 cv
2234.83 1812.58 2241.62 1794.76 2241.62 1792 cv
cp
.760784 .172549 .0509804 rgb
f
2068.34 1042.06 mo
2068.34 1042.06 2067.66 1084.58 2076.43 1106.68 cv
2085.19 1128.79 2017.08 1127 2017.08 1127 cv
2025.44 997.35 li
2068.34 1042.06 li
1 .486275 .309804 rgb
f
2068.34 1042.06 mo
2047.49 1020.33 li
2046.56 1034.3 2046.97 1045.63 2048.98 1050.28 cv
2052.75 1058.99 2060.91 1067.04 2069.5 1071.18 cv
2068.13 1055.49 2068.34 1042.06 2068.34 1042.06 cv
cp
1 .34902 .129412 rgb
f
2112.89 1031.67 mo
2112.89 1069.48 li
2112.89 1078.17 2119.93 1085.21 2128.61 1085.21 cv
2142.09 1085.21 li
2150.77 1085.21 2157.82 1078.17 2157.82 1069.48 cv
2157.82 1026.88 li
2112.89 1026.88 li
2112.89 1031.67 li
cp
1 1 1 rgb
f
2205.56 1100.94 mo
2205.56 1100.94 2188.77 1065.24 2181.04 1057.52 cv
2173.32 1049.79 2157.6 1042.06 2157.6 1042.06 cv
2157.6 1042.06 2162.13 1055.38 2159.2 1058.32 cv
2156.27 1061.25 2151.47 1066.84 2142.68 1066.84 cv
2133.89 1066.84 2132.82 1071.9 2138.95 1078.03 cv
2145.08 1084.16 2164.53 1099.61 2172.52 1102.54 cv
2175.88 1102.54 2178.9 1104.63 2180.08 1107.78 cv
2182.11 1113.2 li
2205.56 1106.81 li
2205.56 1100.94 li
cp
1 .486275 .309804 rgb
f
2178.11 1107.87 mo
2178.11 1107.87 2184.51 1203.25 2187.71 1230.43 cv
2190.9 1257.61 2236.73 1272.01 2236.73 1272.01 cv
2236.73 1272.01 2236.73 1249.08 2236.73 1212.31 cv
2236.73 1175.54 2207.42 1100.94 2207.42 1100.94 cv
2178.11 1107.87 li
cp
.223529 .494118 1 rgb
f
2507.99 1333.81 mo
1919.69 1333.81 li
1919.69 1321.91 1929.34 1312.27 1941.23 1312.27 cv
2486.45 1312.27 li
2498.35 1312.27 2507.99 1321.91 2507.99 1333.81 cv
cp
.733333 .298039 .282353 rgb
f
2696.89 1330.35 mo
2696.89 1330.35 2760.98 1312.27 2780.07 1318.53 cv
2754.81 1393.48 li
2678.67 1380.46 li
2696.89 1330.35 li
cp
.74902 .329412 .298039 rgb
f
2083.09 930.605 mo
2083.09 930.605 2100.49 941.618 2104.4 951.565 cv
2108.31 961.512 2104.05 1034.34 2093.74 1048.55 cv
2083.44 1062.76 2056.8 1049.61 2048.98 1033.98 cv
2041.17 1018.35 2057.51 915.33 2083.09 930.605 cv
cp
1 .486275 .309804 rgb
f
2189.3 1171.28 mo
2171.93 1145.22 2153.47 1124.58 2137.88 1109.38 cv
2117.19 1089.23 2087.65 1081.1 2059.46 1087.38 cv
2052.81 1088.86 2045.7 1090.38 2038.42 1091.85 cv
1999.01 1099.79 1970.24 1133.79 1969.23 1173.98 cv
1964.22 1371.91 li
1962.91 1424.05 2008.07 1466.2 2059.79 1459.48 cv
2069.5 1458.22 2077.56 1455.49 2082.45 1450.61 cv
2105.9 1427.16 2095.89 1279.98 2105.83 1252.27 cv
2112.26 1234.38 2115.65 1234.52 2116.65 1211.12 cv
2116.65 1211.12 2200.49 1302.37 2217.55 1302.37 cv
2236.73 1302.37 2236.73 1283.72 2236.73 1260.98 cv
2236.73 1238.25 2230.87 1233.63 2189.3 1171.28 cv
.223529 .494118 1 rgb
f
2059.62 1087.34 mo
2059.64 1087.34 2059.66 1087.33 2059.68 1087.33 cv
2059.66 1087.33 2059.64 1087.34 2059.62 1087.34 cv
2059.79 1087.31 mo
2059.81 1087.3 2059.83 1087.3 2059.85 1087.29 cv
2059.83 1087.3 2059.81 1087.3 2059.79 1087.31 cv
2059.95 1087.27 mo
2059.97 1087.27 2060 1087.26 2060.02 1087.25 cv
2060 1087.26 2059.97 1087.27 2059.95 1087.27 cv
2060.11 1087.24 mo
2060.14 1087.23 2060.16 1087.22 2060.19 1087.22 cv
2060.16 1087.22 2060.14 1087.23 2060.11 1087.24 cv
2060.31 1087.19 mo
2060.35 1087.19 2060.39 1087.18 2060.43 1087.17 cv
2060.39 1087.18 2060.35 1087.19 2060.31 1087.19 cv
2060.5 1087.15 mo
2060.53 1087.15 2060.56 1087.14 2060.6 1087.13 cv
2060.56 1087.14 2060.53 1087.15 2060.5 1087.15 cv
2060.66 1087.12 mo
2060.69 1087.11 2060.72 1087.11 2060.76 1087.1 cv
2060.72 1087.11 2060.69 1087.11 2060.66 1087.12 cv
2060.82 1087.09 mo
2060.85 1087.08 2060.89 1087.07 2060.92 1087.07 cv
2060.89 1087.07 2060.86 1087.08 2060.82 1087.09 cv
2060.97 1087.06 mo
2061.09 1087.03 2061.22 1087.01 2061.34 1086.98 cv
2061.22 1087.01 2061.09 1087.03 2060.97 1087.06 cv
2061.38 1086.97 mo
2061.42 1086.97 2061.46 1086.96 2061.5 1086.95 cv
2061.46 1086.96 2061.42 1086.97 2061.38 1086.97 cv
2061.53 1086.94 mo
2061.57 1086.94 2061.61 1086.93 2061.65 1086.92 cv
2061.61 1086.93 2061.57 1086.94 2061.53 1086.94 cv
2061.68 1086.91 mo
2061.86 1086.88 2062.04 1086.84 2062.23 1086.81 cv
2062.04 1086.84 2061.86 1086.88 2061.68 1086.91 cv
2062.26 1086.8 mo
2062.3 1086.79 2062.34 1086.79 2062.38 1086.78 cv
2062.34 1086.79 2062.3 1086.79 2062.26 1086.8 cv
2062.42 1086.77 mo
2062.46 1086.77 2062.5 1086.76 2062.54 1086.75 cv
2062.5 1086.76 2062.46 1086.77 2062.42 1086.77 cv
2062.56 1086.75 mo
2062.7 1086.72 2062.83 1086.7 2062.96 1086.67 cv
2062.83 1086.7 2062.7 1086.72 2062.56 1086.75 cv
2062.99 1086.67 mo
2063.03 1086.66 2063.07 1086.66 2063.1 1086.65 cv
2063.07 1086.65 2063.03 1086.66 2062.99 1086.67 cv
2063.16 1086.64 mo
2063.19 1086.63 2063.23 1086.63 2063.26 1086.62 cv
2063.23 1086.63 2063.19 1086.63 2063.16 1086.64 cv
2063.32 1086.61 mo
2063.35 1086.6 2063.39 1086.6 2063.42 1086.59 cv
2063.39 1086.6 2063.36 1086.6 2063.32 1086.61 cv
2063.49 1086.58 mo
2063.54 1086.57 2063.59 1086.56 2063.63 1086.56 cv
2063.58 1086.56 2063.54 1086.57 2063.49 1086.58 cv
2063.74 1086.54 mo
2063.76 1086.53 2063.78 1086.53 2063.8 1086.53 cv
2063.78 1086.53 2063.76 1086.53 2063.74 1086.54 cv
2063.9 1086.51 mo
2063.92 1086.51 2063.95 1086.5 2063.97 1086.5 cv
2063.95 1086.5 2063.92 1086.51 2063.9 1086.51 cv
2064.08 1086.48 mo
2064.09 1086.48 2064.11 1086.47 2064.13 1086.47 cv
2064.11 1086.47 2064.09 1086.48 2064.08 1086.48 cv
2064.28 1086.45 mo
2064.29 1086.45 2064.29 1086.45 2064.29 1086.44 cv
2064.29 1086.45 2064.29 1086.45 2064.28 1086.45 cv
2064.65 1086.39 mo
2064.65 1086.39 li
2064.65 1086.39 li
.490196 .415686 .580392 rgb
f
1982.01 1290.32 mo
1976.8 1290.32 1971.55 1289.59 1966.34 1288.22 cv
1969.23 1173.98 li
1970.24 1133.79 1999.01 1099.79 2038.42 1091.85 cv
2045.7 1090.38 2052.81 1088.86 2059.46 1087.38 cv
2059.51 1087.37 2059.57 1087.35 2059.62 1087.34 cv
2059.64 1087.34 2059.66 1087.33 2059.68 1087.33 cv
2059.71 1087.32 2059.75 1087.31 2059.79 1087.31 cv
2059.81 1087.3 2059.83 1087.3 2059.85 1087.29 cv
2059.89 1087.28 2059.92 1087.28 2059.95 1087.27 cv
2059.97 1087.27 2060 1087.26 2060.02 1087.25 cv
2060.05 1087.25 2060.08 1087.24 2060.11 1087.24 cv
2060.14 1087.23 2060.16 1087.22 2060.19 1087.22 cv
2060.23 1087.21 2060.27 1087.2 2060.31 1087.19 cv
2060.35 1087.19 2060.39 1087.18 2060.43 1087.17 cv
2060.45 1087.16 2060.48 1087.16 2060.5 1087.15 cv
2060.53 1087.15 2060.56 1087.14 2060.6 1087.13 cv
2060.62 1087.13 2060.64 1087.12 2060.66 1087.12 cv
2060.69 1087.11 2060.72 1087.11 2060.76 1087.1 cv
2060.78 1087.1 2060.8 1087.09 2060.82 1087.09 cv
2060.86 1087.08 2060.89 1087.07 2060.92 1087.07 cv
2060.94 1087.06 2060.95 1087.06 2060.97 1087.06 cv
2061.09 1087.03 2061.22 1087.01 2061.34 1086.98 cv
2061.35 1086.98 2061.37 1086.98 2061.38 1086.97 cv
2061.42 1086.97 2061.46 1086.96 2061.5 1086.95 cv
2061.51 1086.95 2061.52 1086.95 2061.53 1086.94 cv
2061.57 1086.94 2061.61 1086.93 2061.65 1086.92 cv
2061.66 1086.92 2061.67 1086.92 2061.68 1086.91 cv
2061.86 1086.88 2062.04 1086.84 2062.23 1086.81 cv
2062.24 1086.81 2062.25 1086.8 2062.26 1086.8 cv
2062.3 1086.79 2062.34 1086.79 2062.38 1086.78 cv
2062.39 1086.78 2062.41 1086.78 2062.42 1086.77 cv
2062.46 1086.77 2062.5 1086.76 2062.54 1086.75 cv
2062.55 1086.75 2062.56 1086.75 2062.56 1086.75 cv
2062.7 1086.72 2062.83 1086.7 2062.96 1086.67 cv
2062.97 1086.67 2062.98 1086.67 2062.99 1086.67 cv
2063.03 1086.66 2063.07 1086.65 2063.1 1086.65 cv
2063.12 1086.65 2063.14 1086.64 2063.16 1086.64 cv
2063.19 1086.63 2063.23 1086.63 2063.26 1086.62 cv
2063.28 1086.62 2063.3 1086.61 2063.32 1086.61 cv
2063.36 1086.6 2063.39 1086.6 2063.42 1086.59 cv
2063.44 1086.59 2063.47 1086.58 2063.49 1086.58 cv
2063.54 1086.57 2063.58 1086.56 2063.63 1086.56 cv
2063.67 1086.55 2063.7 1086.54 2063.74 1086.54 cv
2063.76 1086.53 2063.78 1086.53 2063.8 1086.53 cv
2063.83 1086.52 2063.87 1086.52 2063.9 1086.51 cv
2063.92 1086.51 2063.95 1086.5 2063.97 1086.5 cv
2064 1086.49 2064.04 1086.49 2064.08 1086.48 cv
2064.09 1086.48 2064.11 1086.47 2064.13 1086.47 cv
2064.18 1086.46 2064.23 1086.45 2064.28 1086.45 cv
2064.29 1086.45 2064.29 1086.45 2064.29 1086.44 cv
2064.41 1086.43 2064.53 1086.41 2064.65 1086.39 cv
2064.65 1086.39 li
2066.74 1086.05 2068.84 1085.8 2070.93 1085.62 cv
2079.97 1116.75 2092.34 1153.06 2090.47 1191.19 cv
2088.11 1239.33 2037.37 1285.42 1986.99 1290.1 cv
1985.34 1290.25 1983.68 1290.32 1982.01 1290.32 cv
.188235 .419608 .847059 rgb
f
2077.4 1832.03 mo
2068.34 1832.03 li
2068.34 1559.74 li
2077.4 1559.74 li
2077.4 1832.03 li
cp
.298039 .258824 .447059 rgb
f
1942.59 1832.03 mo
1933.53 1832.03 li
1933.53 1559.74 li
1942.59 1559.74 li
1942.59 1832.03 li
cp
f
2112.84 1832.03 mo
2103.78 1832.03 li
2103.78 1559.74 li
2112.84 1559.74 li
2112.84 1832.03 li
cp
.227451 .196078 .337255 rgb
f
2432.93 1796.81 mo
2418.01 1796.81 li
2418.01 1331.08 li
2432.93 1331.08 li
2432.93 1796.81 li
cp
.298039 .258824 .447059 rgb
f
2634.78 1385.93 mo
2634.78 1385.93 2503.58 1422.89 2404.58 1460.19 cv
2305.58 1497.48 2528.21 1744.11 2528.21 1744.11 cv
2575.1 1722.8 li
2575.1 1722.8 2467.82 1534.85 2484.34 1518.33 cv
2500.85 1501.81 2663.55 1459.56 2663.55 1459.56 cv
2634.78 1385.93 li
0 .00784314 .498039 rgb
f
2300.08 1749.35 mo
2300.08 1749.35 2308.96 1823.69 2313.84 1823.69 cv
2318.72 1823.69 2414.38 1823.69 2414.38 1823.69 cv
2414.38 1823.69 2359.96 1801.59 2349.81 1791.44 cv
2339.66 1781.29 2328.95 1746.56 2328.95 1746.56 cv
2300.08 1749.35 li
cp
1 .486275 .309804 rgb
f
2232.34 1511.93 mo
2213.16 1492.75 2068.34 1415.87 2068.34 1415.87 cv
1962.3 1447.84 li
1962.3 1447.84 1967.1 1488.87 1985.75 1507.52 cv
2004.4 1526.17 2187.02 1559.74 2187.02 1559.74 cv
2187.02 1559.74 2218.59 1759.79 2218.69 1760.39 cv
2228.07 1759.67 2267.36 1751.6 2276.74 1751.38 cv
2275.33 1741.6 2251.52 1531.12 2232.34 1511.93 cv
cp
0 .0470588 .384314 rgb
f
2108.31 1399.88 mo
2108.31 1399.88 2251.88 1412.17 2287.35 1502.4 cv
2298.1 1529.75 2347.61 1763.13 2347.61 1763.13 cv
2298.36 1769.55 li
2298.36 1769.55 2229 1595.93 2224.21 1565.02 cv
2219.41 1534.12 2088.28 1519.03 2061.63 1513.7 cv
2034.99 1508.37 1987 1444.99 1987 1444.99 cv
2108.31 1399.88 li
cp
0 .00784314 .498039 rgb
f
1849.34 1294.38 mo
1849.34 1294.38 1858.07 1503.26 1933.53 1559.74 cv
2187.02 1559.74 li
2187.02 1559.74 2237.02 1535.23 2237.02 1487.27 cv
2237.02 1439.31 2213.04 1387.08 2082.6 1329.54 cv
1952.17 1272.01 1849.34 1294.38 1849.34 1294.38 cv
cp
.984314 .6 0 rgb
f
2082.6 1329.54 mo
2032.98 1307.66 1987.35 1297.33 1949.86 1292.94 cv
1976.86 1299.76 2023.31 1310.18 2054.5 1325.77 cv
2184.93 1390.99 2211.97 1438.88 2211.97 1493.24 cv
2211.97 1541.54 2186.94 1551.79 2172.39 1559.74 cv
2187.02 1559.74 li
2187.02 1559.74 2237.02 1535.23 2237.02 1487.27 cv
2237.02 1439.31 2213.04 1387.08 2082.6 1329.54 cv
cp
1 1 1 rgb
f
2186.16 1832.03 mo
2177.1 1832.03 li
2177.1 1565.12 li
2186.16 1565.12 li
2186.16 1832.03 li
cp
.298039 .258824 .447059 rgb
f
2186.16 1584.25 mo
1933.53 1584.25 li
1933.53 1559.74 li
2186.16 1559.74 li
2186.16 1584.25 li
cp
f
2484.33 1832.03 mo
2475.27 1832.03 li
2475.27 1552.52 li
2484.33 1552.52 li
2484.33 1832.03 li
cp
.227451 .196078 .337255 rgb
f
2703.26 1832.03 mo
2694.2 1832.03 li
2694.2 1554.35 li
2703.26 1554.35 li
2703.26 1832.03 li
cp
f
2703.26 1565.12 mo
2475.27 1565.12 li
2475.27 1545.89 li
2703.26 1545.89 li
2703.26 1565.12 li
f
2082.38 905.028 mo
2082.38 905.028 2063.19 890.107 2022.69 905.028 cv
1982.21 919.944 1988.59 955.451 1992.14 978.188 cv
1995.88 1002.12 1959.47 1010.28 1946.52 1023.86 cv
1901.15 1071.43 1883.52 1146.21 1894.68 1209.91 cv
1901.81 1250.63 1939.85 1276.88 1980.36 1273.11 cv
2030.74 1268.43 2065.81 1219.61 2068.17 1171.46 cv
2071.72 1098.99 2046.14 1052.81 2067.46 1016.57 cv
2088.77 980.339 2081.67 961.156 2088.77 954.052 cv
2095.88 946.947 2104.4 951.565 2104.4 951.565 cv
2104.4 951.565 2158.8 898.396 2082.38 905.028 cv
cp
0 .0313726 .243137 rgb
f
2477.94 1100.94 mo
2477.94 1100.94 2466.75 1152.28 2471.01 1189.93 cv
2474.34 1219.38 2542.68 1324.9 2572.33 1369.52 cv
2580.96 1382.51 2593.92 1392 2608.92 1396.32 cv
2708.31 1424.92 li
2726.79 1437.89 li
2726.79 1437.89 2729.63 1403.79 2721.81 1345.53 cv
2714 1287.27 2586.11 1074.12 2556.98 1074.12 cv
2527.85 1074.12 2477.94 1100.94 2477.94 1100.94 cv
.313726 .494118 .937255 rgb
f
2489.58 1127.86 mo
2489.85 1127.86 2490.12 1127.85 2490.4 1127.82 cv
2538.07 1123.75 2554.82 1080.14 2555.51 1078.29 cv
2556.61 1075.34 li
2555.9 1074.14 li
2526.63 1074.78 2477.94 1100.94 2477.94 1100.94 cv
2477.94 1100.94 2477.5 1102.99 2476.82 1106.55 cv
2477.99 1116.96 2480.24 1127.86 2489.58 1127.86 cv
cp
.733333 .858824 1 rgb
f
2513.04 1276.1 mo
2513.02 1276.08 2513.01 1276.07 2513 1276.05 cv
2513.01 1276.06 2513.02 1276.08 2513.04 1276.1 cv
2512.9 1275.88 mo
2512.87 1275.82 2512.84 1275.77 2512.81 1275.72 cv
2512.84 1275.77 2512.87 1275.82 2512.9 1275.88 cv
2512.79 1275.68 mo
2506.42 1265.02 2500.33 1254.5 2494.86 1244.59 cv
2494.86 1244.59 li
2500.33 1254.5 2506.42 1265.02 2512.79 1275.68 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~KmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUf
ICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^
]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dHKmgUfICt8^]S1dH
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~KmgUfID(>_^4h$NKn-plJA6eg^kI?UKn7*pK#<:o_hE`^KnRF!KuSh#a+]8hL5*g)LWY@-b(b_qL5F-/
MTpm5cA.;'LPsN7N6m?>dYEh1LQ9i=NmriFeVB7;LQU2DOk5ANfS>XCLQ^AHPM:kWgkV0MLR$_OQJRC_
hM7HTLR@"TRGiphieNu_Lmm@[S)oHrjbTGhLn3^bS`km$k_PhqLnEsgT^.E-m"hA&Lna9mU@*i4mYI\-
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS5#4KnY57KnY57KnY57KnY57KnY57KnY57KnY89L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
L51P>LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?
~>
<~I!g<hI!g<hI!g<hI!g<iI=6NmIXcisIt)rtIt)ruJ:N0#J:N0$JUrB'JUrB(JqAT,K7ef0KS5#3KS5#4
KnY57KnY58L5(G<LPLY?LPLY@LkpnEM2@(GM2@(GM2@+IMMd=MMi3OQN/W^SN/WaUNK&pWNK&sYNfK0]
O,oBaOH>QcOH>QcOH>TeOcbcgOcbfiP*2#mPEV5qPa%DsPa%GuQ'IW"Q'R`%QC!r)Q^F/-R$a8.R$jA1
R@0J2R@9S5R[]e9S"#n:S"-"=S=H+>S=Q4ASXl=BSXuFEStDXIT:hjMTV.sNTV8'QTqS0RTq\9UU8+KY
~>
<~]=Y\e]=Y\f]Y(nj]tM+n^:q=q^:q=q^:q=r^V@P!^qdb%_83t)_SX1,_SX1-_o0L3`5KU5`Pog9`l?$=
a2c6AaN2HEaiVZHaiVZIb0%lMbKJ,Rbfn>Vc-=PZcHab^cd0q`cd0tbdF$@hdF$CjdaHUne'lgreC<%!
e^`7%f%/F'f%/I)f@S[-f\"m1g"G*5g=k<9gY:K;gY:N=h;-oCh;-oCh;7#FhV[5Jhr*GNi8NYRiSrkV
io8tWioB([jQ,C_jQ5LbjlY^fk3(pjkND$kkNM-ol07Hsl0@R!lKdd%lg4!)m-O**m-X3-mHs<.mI'E1
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
2515.81 1280.73 mo
2514.88 1279.19 2513.96 1277.64 2513.04 1276.1 cv
2513.02 1276.08 2513.01 1276.06 2513 1276.05 cv
2512.97 1275.99 2512.93 1275.93 2512.9 1275.88 cv
2512.87 1275.82 2512.84 1275.77 2512.81 1275.72 cv
2512.8 1275.71 2512.79 1275.7 2512.79 1275.68 cv
2506.42 1265.02 2500.33 1254.5 2494.86 1244.59 cv
2514.29 1194.12 2553.76 1093.55 2553.76 1093.55 cv
2584.85 1098.63 li
2584.85 1098.63 2598.67 1109.44 2598.67 1147.51 cv
2598.67 1185.58 2558.45 1247.03 2553.76 1251.72 cv
2549.08 1256.4 2537.23 1250.61 2526.76 1261.08 cv
2522.46 1265.38 2518.73 1273.11 2515.81 1280.73 cv
.168627 .32549 .898039 rgb
f
2545.61 1196.54 mo
2545.61 1196.54 2494.85 1308.93 2475.27 1312.46 cv
2453.77 1316.35 2342.55 1312.27 2342.55 1312.27 cv
2311.85 1312.27 li
2300.76 1312.43 2291.09 1304.03 2290.43 1292.96 cv
2290.17 1288.44 2291.39 1284.93 2295.84 1284.93 cv
2308.32 1284.93 2336.78 1287.32 2343.89 1287.32 cv
2350.99 1287.32 2420.25 1280.56 2428.07 1272.74 cv
2435.88 1264.93 2497.14 1147.51 2497.14 1147.51 cv
2545.61 1196.54 li
cp
1 .486275 .309804 rgb
f
2521.46 1246.17 mo
2534.92 1220.21 2545.61 1196.54 2545.61 1196.54 cv
2497.14 1147.51 li
2497.14 1147.51 2480.79 1178.86 2463.9 1210.24 cv
2478.59 1222.86 2501.64 1240.51 2521.46 1246.17 cv
cp
1 .34902 .129412 rgb
f
2475.27 1537.36 mo
2475.27 1537.36 2500.14 1484.78 2565.51 1430.79 cv
2630.87 1376.79 2780.07 1318.53 2780.07 1318.53 cv
2780.07 1318.53 2786.47 1519.6 2704.05 1545.89 cv
2475.27 1545.89 li
2475.27 1537.36 li
.984314 .6 0 rgb
f
2704.22 1545.83 mo
2704.24 1545.83 2704.24 1545.83 2704.26 1545.82 cv
2704.24 1545.82 2704.23 1545.83 2704.22 1545.83 cv
2704.42 1545.77 mo
2704.43 1545.76 2704.44 1545.76 2704.44 1545.76 cv
2704.44 1545.76 2704.43 1545.76 2704.42 1545.77 cv
2704.6 1545.71 mo
2704.61 1545.71 2704.62 1545.7 2704.63 1545.7 cv
2704.62 1545.7 2704.61 1545.7 2704.6 1545.71 cv
2704.8 1545.64 mo
2704.8 1545.64 2704.82 1545.64 2704.82 1545.63 cv
2704.81 1545.64 2704.8 1545.64 2704.8 1545.64 cv
2704.99 1545.58 mo
2704.99 1545.58 li
2704.99 1545.58 li
2705.17 1545.52 mo
2705.18 1545.51 2705.19 1545.51 2705.19 1545.51 cv
2705.19 1545.51 2705.18 1545.51 2705.17 1545.52 cv
2705.55 1545.39 mo
2705.55 1545.39 2705.56 1545.38 2705.56 1545.38 cv
2705.56 1545.38 2705.55 1545.38 2705.55 1545.39 cv
2705.93 1545.25 mo
2705.93 1545.25 li
2705.93 1545.25 li
2761.92 1470.53 mo
2761.92 1470.52 2761.93 1470.51 2761.93 1470.51 cv
2761.92 1470.52 2761.92 1470.52 2761.92 1470.53 cv
2762.07 1470.06 mo
2762.07 1470.06 2762.07 1470.04 2762.07 1470.04 cv
2762.07 1470.05 2762.07 1470.05 2762.07 1470.06 cv
2762.21 1469.59 mo
2762.21 1469.58 2762.22 1469.57 2762.22 1469.57 cv
2762.22 1469.58 2762.21 1469.58 2762.21 1469.59 cv
2762.29 1469.35 mo
2762.29 1469.34 2762.29 1469.33 2762.29 1469.33 cv
2762.29 1469.34 2762.29 1469.34 2762.29 1469.35 cv
2762.36 1469.11 mo
2762.36 1469.1 li
2762.36 1469.11 li
2762.43 1468.89 mo
2762.43 1468.87 2762.43 1468.86 2762.44 1468.85 cv
2762.44 1468.86 2762.43 1468.87 2762.43 1468.89 cv
2762.5 1468.66 mo
2762.5 1468.64 2762.51 1468.63 2762.51 1468.61 cv
2762.51 1468.63 2762.5 1468.64 2762.5 1468.66 cv
2762.57 1468.41 mo
2762.57 1468.41 2762.58 1468.39 2762.58 1468.38 cv
2762.58 1468.39 2762.58 1468.4 2762.57 1468.41 cv
2762.65 1468.17 mo
2762.65 1468.16 2762.65 1468.14 2762.66 1468.14 cv
2762.65 1468.15 2762.65 1468.16 2762.65 1468.17 cv
2762.71 1467.94 mo
2762.72 1467.93 2762.72 1467.92 2762.72 1467.91 cv
2762.72 1467.92 2762.72 1467.93 2762.71 1467.94 cv
2762.79 1467.7 mo
2762.79 1467.68 2762.79 1467.67 2762.8 1467.65 cv
2762.8 1467.67 2762.79 1467.69 2762.79 1467.7 cv
2762.86 1467.46 mo
2762.86 1467.45 2762.86 1467.45 2762.86 1467.44 cv
2762.86 1467.45 2762.86 1467.45 2762.86 1467.46 cv
2762.93 1467.22 mo
2762.93 1467.21 2762.94 1467.2 2762.94 1467.19 cv
2762.94 1467.2 2762.93 1467.21 2762.93 1467.22 cv
2763.06 1466.77 mo
2763.07 1466.75 2763.08 1466.73 2763.08 1466.71 cv
2763.08 1466.73 2763.07 1466.75 2763.06 1466.77 cv
2763.14 1466.51 mo
2763.15 1466.49 2763.15 1466.48 2763.16 1466.46 cv
2763.15 1466.48 2763.15 1466.5 2763.14 1466.51 cv
2763.2 1466.3 mo
2763.21 1466.27 2763.21 1466.26 2763.22 1466.24 cv
2763.22 1466.26 2763.21 1466.28 2763.2 1466.3 cv
2763.28 1466.03 mo
2763.29 1466.02 2763.29 1466 2763.29 1465.99 cv
2763.29 1466.01 2763.29 1466.02 2763.28 1466.03 cv
2763.34 1465.84 mo
2763.35 1465.81 2763.35 1465.79 2763.36 1465.76 cv
2763.35 1465.79 2763.35 1465.81 2763.34 1465.84 cv
2763.41 1465.58 mo
2763.42 1465.56 2763.43 1465.53 2763.44 1465.5 cv
2763.43 1465.52 2763.42 1465.56 2763.41 1465.58 cv
2763.48 1465.36 mo
2763.49 1465.33 2763.5 1465.3 2763.51 1465.27 cv
2763.5 1465.3 2763.49 1465.33 2763.48 1465.36 cv
2763.55 1465.11 mo
2763.56 1465.08 2763.57 1465.05 2763.58 1465.02 cv
2763.57 1465.05 2763.56 1465.08 2763.55 1465.11 cv
2763.62 1464.89 mo
2763.63 1464.85 2763.64 1464.81 2763.65 1464.77 cv
2763.64 1464.81 2763.63 1464.85 2763.62 1464.89 cv
2763.69 1464.64 mo
2763.7 1464.61 2763.7 1464.59 2763.71 1464.56 cv
2763.7 1464.58 2763.69 1464.62 2763.69 1464.64 cv
2763.76 1464.4 mo
2763.77 1464.36 2763.78 1464.33 2763.79 1464.29 cv
2763.78 1464.33 2763.77 1464.37 2763.76 1464.4 cv
2763.82 1464.17 mo
2763.83 1464.14 2763.84 1464.12 2763.85 1464.08 cv
2763.84 1464.11 2763.83 1464.14 2763.82 1464.17 cv
2763.9 1463.91 mo
2763.91 1463.88 2763.91 1463.85 2763.92 1463.82 cv
2763.91 1463.85 2763.9 1463.88 2763.9 1463.91 cv
2763.96 1463.69 mo
2763.97 1463.67 2763.97 1463.65 2763.98 1463.62 cv
2763.97 1463.65 2763.97 1463.67 2763.96 1463.69 cv
2764.03 1463.45 mo
2764.04 1463.42 2764.05 1463.38 2764.06 1463.34 cv
2764.05 1463.38 2764.04 1463.41 2764.03 1463.45 cv
2764.09 1463.22 mo
2764.1 1463.18 2764.12 1463.14 2764.13 1463.1 cv
2764.12 1463.14 2764.1 1463.18 2764.09 1463.22 cv
2764.16 1462.97 mo
2764.17 1462.94 2764.18 1462.9 2764.19 1462.87 cv
2764.18 1462.91 2764.17 1462.94 2764.16 1462.97 cv
2764.23 1462.72 mo
2764.24 1462.69 2764.25 1462.65 2764.26 1462.62 cv
2764.25 1462.65 2764.24 1462.69 2764.23 1462.72 cv
2764.3 1462.49 mo
2764.3 1462.47 2764.31 1462.44 2764.32 1462.41 cv
2764.31 1462.44 2764.31 1462.46 2764.3 1462.49 cv
2764.37 1462.24 mo
2764.38 1462.2 2764.39 1462.17 2764.4 1462.13 cv
2764.39 1462.16 2764.38 1462.21 2764.37 1462.24 cv
2764.42 1462.04 mo
2764.44 1461.99 2764.46 1461.91 2764.47 1461.86 cv
2764.46 1461.92 2764.44 1461.98 2764.42 1462.04 cv
2764.5 1461.77 mo
2764.51 1461.73 2764.52 1461.69 2764.53 1461.65 cv
2764.52 1461.69 2764.51 1461.73 2764.5 1461.77 cv
2764.55 1461.59 mo
2764.57 1461.51 2764.59 1461.43 2764.61 1461.36 cv
2764.59 1461.43 2764.57 1461.51 2764.55 1461.59 cv
2764.62 1461.31 mo
2764.64 1461.27 2764.65 1461.22 2764.66 1461.18 cv
2764.65 1461.23 2764.64 1461.27 2764.62 1461.31 cv
2764.67 1461.14 mo
2764.7 1461.05 2764.72 1460.96 2764.75 1460.87 cv
2764.72 1460.96 2764.7 1461.05 2764.67 1461.14 cv
2764.75 1460.86 mo
2764.83 1460.55 2764.91 1460.25 2765 1459.95 cv
2764.91 1460.25 2764.83 1460.55 2764.75 1460.86 cv
2765 1459.93 mo
2774.98 1422.97 2778.48 1382.17 2779.65 1353.94 cv
2779.65 1353.94 li
2778.48 1382.17 2774.99 1422.97 2765 1459.93 cv
.65098 .490196 0 rgb
f
2779.65 1353.94 mo
2779.65 1353.94 li
2779.81 1350.05 2779.92 1346.39 2780.01 1343.01 cv
2780.01 1343.01 2780.01 1343.01 2780.01 1343.01 cv
2779.92 1346.39 2779.81 1350.05 2779.65 1353.94 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*
EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ
!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4ol:'*EWGcQ!;1@4
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ol:'*ErblS!;1C5p2g<.F9)#W!;:R9p3$H0G6%>\!;:X;p3?Z3Gl[Pa!;:^=pNci6HiWng!;Cj@pO*&9
IK9+k!;M$DpjW;=J,o@p!;M*FpjrM@JcPRu!;M0Hpk/YBKE1e$!;V?Lq1\nFL&h%)!;VENq1o%HM#d@.
!;VKPq257KMZER3!;VQRqMbLONWAp9!;_]UqMtXQNr]$<!;_fXqN1dSOoY?A!;_lZqih*XPQ:TG!;i#]
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o^qeJo^qeJo^qeJo^qeJo^qeKp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Op@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e7Tp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4IXq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"aa]q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>0saqYL'bqYL'bqYL'b
~>
<~EH,u<EH,u=EcQ2@EcQ2@EcQ2AF)uDDF)uDEFEDVIF`hhLF`hhMG'8%PG'8%QGB\7UG^+IXG^+IYH$O[\
H$O[\H$O[]H@(!cH[C*dH[C*eI!g?jI=6NlI=6QnIXZ`pIXZcrIt)rtIt*!!J:N3%JUrB'JUrE)JqAT+
JqAW-K7ef/K7ei1KS5&5KnY57KnY57KnY89L5(J=LPLY?LPL\ALkpkCLl$tFM2I1JMMd:KMMmCNMi3LO
Mi<URN/`gVNK&pWNK&pWNK0$ZNfK-[NfT6^O-#HbOH>QcOHGZfOcbcgOckljP*;)nPEV2oPE_;rPa%Ds
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
2704.05 1545.89 mo
2703.26 1545.89 li
2475.27 1545.89 li
2475.27 1537.36 li
2475.27 1537.36 2478.3 1530.96 2485.02 1520.34 cv
2695.99 1520.34 li
2743.33 1500.84 2767.61 1422.75 2780.01 1343.01 cv
2779.92 1346.39 2779.81 1350.05 2779.65 1353.94 cv
2779.65 1353.94 li
2778.48 1382.17 2774.98 1422.97 2765 1459.93 cv
2765 1459.94 2765 1459.94 2765 1459.95 cv
2764.91 1460.25 2764.83 1460.55 2764.75 1460.86 cv
2764.75 1460.86 2764.75 1460.87 2764.75 1460.87 cv
2764.72 1460.96 2764.7 1461.05 2764.67 1461.14 cv
2764.67 1461.15 2764.66 1461.17 2764.66 1461.18 cv
2764.65 1461.22 2764.64 1461.27 2764.62 1461.31 cv
2764.62 1461.33 2764.62 1461.34 2764.61 1461.36 cv
2764.59 1461.43 2764.57 1461.51 2764.55 1461.59 cv
2764.54 1461.61 2764.54 1461.63 2764.53 1461.65 cv
2764.52 1461.69 2764.51 1461.73 2764.5 1461.77 cv
2764.49 1461.8 2764.48 1461.83 2764.47 1461.86 cv
2764.46 1461.91 2764.44 1461.99 2764.42 1462.04 cv
2764.41 1462.07 2764.41 1462.1 2764.4 1462.13 cv
2764.39 1462.17 2764.38 1462.2 2764.37 1462.24 cv
2764.35 1462.3 2764.34 1462.35 2764.32 1462.41 cv
2764.31 1462.44 2764.3 1462.47 2764.3 1462.49 cv
2764.29 1462.53 2764.27 1462.58 2764.26 1462.62 cv
2764.25 1462.65 2764.24 1462.69 2764.23 1462.72 cv
2764.22 1462.77 2764.21 1462.82 2764.19 1462.87 cv
2764.18 1462.9 2764.17 1462.94 2764.16 1462.97 cv
2764.15 1463.01 2764.14 1463.06 2764.13 1463.1 cv
2764.12 1463.14 2764.1 1463.18 2764.09 1463.22 cv
2764.08 1463.26 2764.07 1463.3 2764.06 1463.34 cv
2764.05 1463.38 2764.04 1463.42 2764.03 1463.45 cv
2764.01 1463.51 2764 1463.56 2763.98 1463.62 cv
2763.97 1463.65 2763.97 1463.67 2763.96 1463.69 cv
2763.95 1463.73 2763.93 1463.78 2763.92 1463.82 cv
2763.91 1463.85 2763.91 1463.88 2763.9 1463.91 cv
2763.88 1463.97 2763.86 1464.03 2763.85 1464.08 cv
2763.84 1464.12 2763.83 1464.14 2763.82 1464.17 cv
2763.81 1464.21 2763.8 1464.25 2763.79 1464.29 cv
2763.78 1464.33 2763.77 1464.36 2763.76 1464.4 cv
2763.74 1464.46 2763.73 1464.5 2763.71 1464.56 cv
2763.7 1464.59 2763.7 1464.61 2763.69 1464.64 cv
2763.67 1464.69 2763.66 1464.72 2763.65 1464.77 cv
2763.64 1464.81 2763.63 1464.85 2763.62 1464.89 cv
2763.6 1464.93 2763.59 1464.98 2763.58 1465.02 cv
2763.57 1465.05 2763.56 1465.08 2763.55 1465.11 cv
2763.54 1465.16 2763.52 1465.22 2763.51 1465.27 cv
2763.5 1465.3 2763.49 1465.33 2763.48 1465.36 cv
2763.47 1465.41 2763.45 1465.46 2763.44 1465.5 cv
2763.43 1465.53 2763.42 1465.56 2763.41 1465.58 cv
2763.4 1465.64 2763.38 1465.7 2763.36 1465.76 cv
2763.35 1465.79 2763.35 1465.81 2763.34 1465.84 cv
2763.32 1465.89 2763.31 1465.94 2763.29 1465.99 cv
2763.29 1466 2763.29 1466.02 2763.28 1466.03 cv
2763.26 1466.1 2763.24 1466.17 2763.22 1466.24 cv
2763.21 1466.26 2763.21 1466.27 2763.2 1466.3 cv
2763.19 1466.36 2763.17 1466.4 2763.16 1466.46 cv
2763.15 1466.48 2763.15 1466.49 2763.14 1466.51 cv
2763.12 1466.58 2763.1 1466.64 2763.08 1466.71 cv
2763.08 1466.73 2763.07 1466.75 2763.06 1466.77 cv
2763.02 1466.91 2762.98 1467.05 2762.94 1467.19 cv
2762.94 1467.2 2762.93 1467.21 2762.93 1467.22 cv
2762.91 1467.3 2762.89 1467.37 2762.86 1467.44 cv
2762.86 1467.45 2762.86 1467.45 2762.86 1467.46 cv
2762.84 1467.52 2762.82 1467.59 2762.8 1467.65 cv
2762.79 1467.67 2762.79 1467.68 2762.79 1467.7 cv
2762.77 1467.77 2762.74 1467.84 2762.72 1467.91 cv
2762.72 1467.92 2762.72 1467.93 2762.71 1467.94 cv
2762.69 1468.01 2762.68 1468.07 2762.66 1468.14 cv
2762.65 1468.14 2762.65 1468.16 2762.65 1468.17 cv
2762.63 1468.24 2762.6 1468.31 2762.58 1468.38 cv
2762.58 1468.39 2762.57 1468.41 2762.57 1468.41 cv
2762.55 1468.48 2762.53 1468.54 2762.51 1468.61 cv
2762.51 1468.63 2762.5 1468.64 2762.5 1468.66 cv
2762.48 1468.72 2762.46 1468.79 2762.44 1468.85 cv
2762.43 1468.86 2762.43 1468.87 2762.43 1468.89 cv
2762.4 1468.96 2762.38 1469.03 2762.36 1469.1 cv
2762.36 1469.11 li
2762.34 1469.18 2762.32 1469.25 2762.29 1469.33 cv
2762.29 1469.33 2762.29 1469.34 2762.29 1469.35 cv
2762.26 1469.42 2762.24 1469.5 2762.22 1469.57 cv
2762.22 1469.57 2762.21 1469.58 2762.21 1469.59 cv
2762.17 1469.74 2762.12 1469.89 2762.07 1470.04 cv
2762.07 1470.04 2762.07 1470.06 2762.07 1470.06 cv
2762.02 1470.21 2761.97 1470.36 2761.93 1470.51 cv
2761.93 1470.51 2761.92 1470.52 2761.92 1470.53 cv
2750.99 1505.49 2733.58 1535.38 2705.93 1545.25 cv
2705.93 1545.25 li
2705.81 1545.3 2705.69 1545.34 2705.56 1545.38 cv
2705.56 1545.38 2705.55 1545.39 2705.55 1545.39 cv
2705.43 1545.43 2705.31 1545.47 2705.19 1545.51 cv
2705.19 1545.51 2705.18 1545.51 2705.17 1545.52 cv
2705.11 1545.54 2705.05 1545.56 2704.99 1545.58 cv
2704.99 1545.58 li
2704.93 1545.6 2704.88 1545.61 2704.82 1545.63 cv
2704.82 1545.64 2704.8 1545.64 2704.8 1545.64 cv
2704.74 1545.66 2704.68 1545.68 2704.63 1545.7 cv
2704.62 1545.7 2704.61 1545.71 2704.6 1545.71 cv
2704.55 1545.73 2704.49 1545.74 2704.44 1545.76 cv
2704.44 1545.76 2704.43 1545.76 2704.42 1545.77 cv
2704.37 1545.79 2704.31 1545.8 2704.26 1545.82 cv
2704.24 1545.83 2704.24 1545.83 2704.22 1545.83 cv
2704.17 1545.85 2704.11 1545.87 2704.05 1545.89 cv
2704.05 1545.89 li
.968627 .360784 0 rgb
f
2496.33 985.995 mo
2549.31 1075.99 li
2549.31 1075.99 2533.88 1117.47 2489.84 1121.24 cv
2483.12 1121.81 2483.48 1100.21 2481.93 1093.64 cv
2468.95 1038.59 li
2496.33 985.995 li
cp
1 .486275 .309804 rgb
f
2496.33 985.995 mo
2468.95 1038.59 li
2474.42 1061.77 li
2487.24 1041 2497.46 1008.38 2499.49 991.355 cv
2496.33 985.995 li
cp
1 .34902 .129412 rgb
f
2474.75 929.406 mo
2474.75 929.406 2496.33 967.326 2496.33 985.995 cv
2496.33 1004.66 2468.91 1058.92 2446.16 1051.33 cv
2423.41 1043.75 2414.66 977.244 2414.66 946.325 cv
2414.66 915.405 2460.16 908.988 2474.75 929.406 cv
cp
1 .486275 .309804 rgb
f
2473.58 897.904 mo
2473.58 897.904 2491.08 898.487 2491.08 912.488 cv
2491.08 926.49 2508.58 917.739 2512.08 934.657 cv
2515.58 951.575 2501.89 995.437 2501.89 995.437 cv
2501.89 995.437 2485.25 983.078 2473.58 971.41 cv
2461.91 959.742 2461.33 941.949 2455.5 941.949 cv
2449.66 941.949 2433.91 943.991 2414.66 963.243 cv
2395.41 982.494 2360.41 966.159 2373.24 937.574 cv
2386.07 908.988 2407.66 913.072 2432.75 910.155 cv
2457.83 907.238 2473.58 897.904 2473.58 897.904 cv
cp
0 .0156863 .266667 rgb
f
2512.04 1097.88 mo
2496.15 1121.44 2474.53 1183.36 2471.01 1189.93 cv
2462.05 1206.66 2523.09 1233.77 2534.45 1230.93 cv
2545.82 1228.09 2579.08 1158.86 2586.11 1133.09 cv
2591.16 1114.59 2586.75 1088.89 2569.07 1078.04 cv
2548.73 1065.55 2525.02 1078.65 2512.04 1097.88 cv
cp
.733333 .858824 1 rgb
f
2150.14 1066.84 mo
2142.68 1066.84 li
2142.68 1060.45 li
2150.14 1060.45 li
2153.67 1060.45 2156.53 1057.58 2156.53 1054.05 cv
2156.53 1047.66 li
2156.53 1044.13 2153.67 1041.26 2150.14 1041.26 cv
2140.55 1041.26 li
2140.55 1034.87 li
2150.14 1034.87 li
2157.19 1034.87 2162.93 1040.61 2162.93 1047.66 cv
2162.93 1054.05 li
2162.93 1061.1 2157.19 1066.84 2150.14 1066.84 cv
cp
.74902 .74902 .74902 rgb
f
2378.08 1118 mo
2378.08 1155.8 li
2378.08 1164.49 2371.04 1171.53 2362.35 1171.53 cv
2348.88 1171.53 li
2340.19 1171.53 2333.15 1164.49 2333.15 1155.8 cv
2333.15 1113.2 li
2378.08 1113.2 li
2378.08 1118 li
cp
1 1 1 rgb
f
2327.01 1153.17 mo
2334.48 1153.17 li
2334.48 1146.77 li
2327.01 1146.77 li
2323.49 1146.77 2320.62 1143.9 2320.62 1140.38 cv
2320.62 1133.98 li
2320.62 1130.46 2323.49 1127.59 2327.01 1127.59 cv
2336.61 1127.59 li
2336.61 1121.19 li
2327.01 1121.19 li
2319.96 1121.19 2314.23 1126.93 2314.23 1133.98 cv
2314.23 1140.38 li
2314.23 1147.43 2319.96 1153.17 2327.01 1153.17 cv
cp
.74902 .74902 .74902 rgb
f
2475.27 1537.36 mo
2492.74 1487.39 2538.43 1437.88 2581.9 1406.56 cv
2628.91 1372.32 2722.07 1332.76 2780.07 1318.53 cv
2647.15 1392.71 2583.95 1412.14 2505.08 1500.08 cv
2494.51 1511.85 2484.48 1524.16 2475.27 1537.36 cv
cp
1 1 1 rgb
f
2296.23 1133.09 mo
2296.23 1133.09 2332.52 1127.15 2338.46 1133.09 cv
2344.41 1139.04 2309.44 1143.88 2309.44 1143.88 cv
2296.23 1133.09 li
cp
1 .407843 .168627 rgb
f
2303.19 1153.17 mo
2303.19 1153.17 2332.47 1150.79 2333.14 1144.62 cv
2333.81 1138.45 2306.13 1142.37 2306.13 1142.37 cv
2303.19 1153.17 li
cp
f
2312.1 1130.45 mo
2312.1 1130.45 2325.26 1131.04 2333.15 1127.59 cv
2341.04 1124.13 2318.17 1123.4 2318.17 1123.4 cv
2312.1 1130.45 li
cp
f
2572.75 1733.2 mo
2572.75 1733.2 2608.04 1751.88 2608.04 1759.3 cv
2608.04 1766.73 2560.16 1829.14 2553.42 1831.81 cv
2550.71 1832.88 2501.25 1832.03 2499.41 1830.2 cv
2494.25 1825.04 2516.99 1818.14 2525.08 1810.06 cv
2533.17 1801.97 2539.76 1789.75 2539.76 1782.02 cv
2539.76 1774.29 2524.65 1753.36 2539.76 1753.36 cv
2554.86 1753.36 2572.75 1733.2 2572.75 1733.2 cv
cp
.976471 .972549 .741176 rgb
f
2306.63 1804.75 mo
2306.63 1804.75 2366.15 1813.29 2373.79 1805.66 cv
2381.42 1798.02 2418.01 1819.21 2418.01 1823.69 cv
2418.01 1828.17 2321.2 1832.28 2305.21 1827.07 cv
2299.84 1825.32 2306.63 1807.5 2306.63 1804.75 cv
cp
.886275 .203922 .0627451 rgb
f
454.682 826.866 mo
163.033 826.866 li
163.033 636.953 li
163.033 580.766 208.582 535.217 264.769 535.217 cv
352.946 535.217 li
409.134 535.217 454.682 580.766 454.682 636.953 cv
454.682 826.866 li
0 .00392157 .498039 rgb
f
454.682 826.866 mo
163.033 826.866 li
163.033 636.953 li
163.033 580.766 208.582 535.217 264.769 535.217 cv
300.018 535.217 li
336.642 588.779 392.607 664.577 454.682 727.129 cv
454.682 826.866 li
325.629 785.76 mo
325.629 785.76 li
325.629 800.417 337.721 812.263 352.624 812.263 cv
362.536 812.263 li
365.348 812.263 368.054 811.841 370.585 811.031 cv
370.585 811.031 li
370.585 811.031 li
378.775 808.537 385.277 802.315 388.054 794.336 cv
393.607 794.336 li
400.532 794.336 406.156 788.818 406.156 782.034 cv
406.156 775.25 400.532 769.697 393.607 769.697 cv
389.53 769.697 li
389.53 765.619 li
389.53 764.776 388.827 764.108 388.019 764.108 cv
327.141 764.108 li
326.297 764.108 325.629 764.776 325.629 765.619 cv
325.629 785.76 li
325.629 785.76 li
215.753 782.034 mo
215.753 782.034 li
215.753 788.818 221.378 794.336 228.301 794.336 cv
233.855 794.336 li
237.511 804.776 247.528 812.263 259.408 812.263 cv
269.285 812.263 li
272.097 812.263 274.768 811.841 277.299 811.068 cv
277.299 811.068 li
277.299 811.068 li
288.301 807.728 296.279 797.676 296.279 785.76 cv
296.279 765.619 li
296.279 764.776 295.613 764.108 294.768 764.108 cv
233.891 764.108 li
233.081 764.108 232.379 764.776 232.379 765.619 cv
232.379 769.697 li
228.301 769.697 li
221.378 769.697 215.753 775.25 215.753 782.034 cv
215.753 782.034 li
393.607 789.873 mo
389.179 789.873 li
389.39 788.537 389.53 787.165 389.53 785.76 cv
389.53 774.196 li
393.607 774.196 li
398.001 774.196 401.586 777.71 401.586 782.034 cv
401.586 786.357 398.001 789.873 393.607 789.873 cv
232.731 789.873 mo
228.301 789.873 li
223.909 789.873 220.323 786.357 220.323 782.034 cv
220.323 777.71 223.909 774.196 228.301 774.196 cv
232.379 774.196 li
232.379 785.76 li
232.379 785.76 li
232.379 787.165 232.519 788.537 232.731 789.873 cv
.0352941 .0313725 .254902 rgb
f
276.307 702.109 mo
265.083 702.109 li
265.083 657.62 li
276.307 657.62 li
276.307 702.109 li
cp
.458824 .458824 .454902 rgb
f
350.275 702.109 mo
339.052 702.109 li
339.052 657.62 li
350.275 657.62 li
350.275 702.109 li
cp
f
389.179 670.803 mo
224.695 670.803 li
224.695 651.494 li
224.695 647.597 227.854 644.437 231.752 644.437 cv
382.122 644.437 li
386.019 644.437 389.179 647.597 389.179 651.495 cv
389.179 670.803 li
cp
.341176 .341176 .698039 rgb
f
424.026 610.582 mo
343.093 610.582 li
340.861 610.582 339.052 608.772 339.052 606.54 cv
339.052 592.779 li
339.052 590.547 340.861 588.737 343.094 588.737 cv
424.026 588.737 li
426.258 588.737 428.067 590.547 428.067 592.779 cv
428.067 606.54 li
428.067 608.772 426.258 610.582 424.026 610.582 cv
cp
f
228.301 789.873 mo
223.909 789.873 220.323 786.357 220.323 782.034 cv
220.323 777.71 223.909 774.196 228.301 774.196 cv
232.379 774.196 li
232.379 785.76 li
232.379 787.165 232.519 788.537 232.731 789.873 cv
228.301 789.873 li
294.768 764.108 mo
233.891 764.108 li
233.081 764.108 232.379 764.776 232.379 765.619 cv
232.379 769.697 li
228.301 769.697 li
221.378 769.697 215.753 775.25 215.753 782.034 cv
215.753 788.818 221.378 794.336 228.301 794.336 cv
233.855 794.336 li
237.511 804.776 247.528 812.263 259.408 812.263 cv
269.285 812.263 li
272.097 812.263 274.768 811.841 277.299 811.068 cv
288.301 807.728 296.279 797.676 296.279 785.76 cv
296.279 765.619 li
296.279 764.776 295.613 764.108 294.768 764.108 cv
.976471 .929412 .92549 rgb
f
269.285 812.263 mo
259.408 812.263 li
247.528 812.263 237.511 804.776 233.855 794.336 cv
228.301 794.336 li
221.378 794.336 215.753 788.818 215.753 782.034 cv
215.753 775.25 221.378 769.697 228.301 769.697 cv
232.379 769.697 li
232.379 765.619 li
232.379 764.776 233.081 764.108 233.891 764.108 cv
244.224 764.108 li
246.931 778.66 255.191 796.761 277.299 811.068 cv
274.768 811.841 272.097 812.263 269.285 812.263 cv
220.323 782.034 mo
220.323 782.034 li
220.323 786.357 223.909 789.873 228.301 789.873 cv
232.731 789.873 li
232.731 789.873 li
232.519 788.537 232.379 787.165 232.379 785.76 cv
232.379 774.196 li
228.301 774.196 li
223.909 774.196 220.323 777.71 220.323 782.034 cv
220.323 782.034 li
.741176 .701961 .694118 rgb
f
393.607 789.873 mo
389.179 789.873 li
389.39 788.537 389.53 787.165 389.53 785.76 cv
389.53 774.196 li
393.607 774.196 li
398.001 774.196 401.586 777.71 401.586 782.034 cv
401.586 786.357 398.001 789.873 393.607 789.873 cv
393.607 769.697 mo
389.53 769.697 li
389.53 765.619 li
389.53 764.776 388.827 764.108 388.019 764.108 cv
327.141 764.108 li
326.297 764.108 325.629 764.776 325.629 765.619 cv
325.629 785.76 li
325.629 800.417 337.721 812.263 352.624 812.263 cv
362.536 812.263 li
365.348 812.263 368.054 811.841 370.585 811.031 cv
378.775 808.537 385.277 802.315 388.054 794.336 cv
393.607 794.336 li
400.532 794.336 406.156 788.818 406.156 782.034 cv
406.156 775.25 400.532 769.697 393.607 769.697 cv
.976471 .929412 .92549 rgb
f
362.536 812.263 mo
352.624 812.263 li
337.721 812.263 325.629 800.417 325.629 785.76 cv
325.629 765.619 li
325.629 764.776 326.297 764.108 327.141 764.108 cv
335.225 764.108 li
335.964 780.593 342.466 803.019 370.585 811.031 cv
368.054 811.841 365.348 812.263 362.536 812.263 cv
.741176 .701961 .694118 rgb
f
401.586 827.914 mo
226.526 827.914 li
226.526 812.263 li
401.586 812.263 li
401.586 827.914 li
cp
.733333 .858824 1 rgb
f
380.537 605.024 mo
347.838 605.024 li
347.838 597.309 li
380.537 597.309 li
380.537 605.024 li
cp
.254902 1 0 rgb
f
2357.13 735.862 mo
2322.91 735.862 li
2311.03 735.862 2301.3 726.138 2301.3 714.253 cv
2301.3 702.367 2311.03 692.642 2322.91 692.642 cv
2357.13 692.642 li
2369.01 692.642 2378.74 702.367 2378.74 714.253 cv
2378.74 726.138 2369.01 735.862 2357.13 735.862 cv
.968627 .521569 0 rgb
f
2383.42 723.616 mo
2297.52 723.616 li
2294.06 723.616 2291.22 720.781 2291.22 717.314 cv
2291.22 713.848 2294.06 711.011 2297.52 711.011 cv
2383.42 711.011 li
2386.89 711.011 2389.72 713.848 2389.72 717.314 cv
2389.72 720.781 2386.89 723.616 2383.42 723.616 cv
.498039 .215686 .184314 rgb
f
2378.74 711.011 mo
2300.94 711.011 li
2299.36 711.011 2298.06 709.714 2298.06 708.13 cv
2298.06 706.545 2299.36 705.248 2300.94 705.248 cv
2378.74 705.248 li
2380.32 705.248 2381.62 706.545 2381.62 708.13 cv
2381.62 709.714 2380.32 711.011 2378.74 711.011 cv
.992157 .368627 .352941 rgb
f
2269.96 662.039 mo
2229.16 662.039 li
2229.16 648.167 li
2269.96 648.167 li
2269.96 662.039 li
1 1 1 rgb
f
2269.96 748.469 mo
2233.14 748.469 li
2233.14 726.424 li
2269.96 726.424 li
2269.96 748.469 li
f
2565.85 828.656 mo
2182.43 828.656 li
2245.76 634.439 li
2267.72 567.11 2330.49 521.55 2401.31 521.55 cv
2565.85 521.55 li
2565.85 828.656 li
.619608 .666667 .92549 rgb
f
2254.39 658.732 mo
2207.13 658.732 li
2207.8 655.614 li
2214.73 622.823 li
2247.54 622.823 li
2254.39 658.732 li
.756863 .509804 .14902 rgb
f
2214.11 620.962 mo
2213.63 621.531 2212.84 621.38 2212.88 622.522 cv
2212.97 624.777 2216.57 625.621 2218.13 625.556 cv
2220.51 625.457 2222.59 624.103 2224.74 623.14 cv
2226.5 622.347 2228.1 624.621 2229.01 626.054 cv
2230.2 627.917 2230.81 630.215 2230.03 632.409 cv
2228.19 637.599 2230.37 641.2 2233.02 638.934 cv
2235.66 636.667 2231.38 631.875 2231.62 629.613 cv
2231.87 627.35 2231.74 623.756 2234.56 624.156 cv
2237.38 624.555 2239.1 626.817 2238.48 628.681 cv
2237.87 630.545 2239.09 635.203 2243.01 631.742 cv
2243.01 631.742 2244.6 629.879 2242.15 626.951 cv
2239.72 624.038 2243.47 623.891 2243.52 623.89 cv
2244.68 623.854 2245.27 625.37 2246.34 625.596 cv
2247.53 625.846 2248.73 624.623 2249.05 623.425 cv
2249.97 619.973 2246.39 619.336 2244.18 618.935 cv
2242.07 618.552 2239.97 618.732 2237.97 619.591 cv
2235.77 620.542 2233.07 620.047 2230.76 619.8 cv
2228.14 619.519 2225.53 619.096 2222.93 618.621 cv
2216.82 617.503 2214.12 620.949 2214.11 620.962 cv
.298039 .117647 0 rgb
f
2237.13 617.9 mo
2237.13 620.105 2235.18 621.893 2232.78 621.893 cv
2230.38 621.893 2228.44 620.105 2228.44 617.9 cv
2228.44 615.694 2230.38 613.907 2232.78 613.907 cv
2235.18 613.907 2237.13 615.694 2237.13 617.9 cv
.917647 0 .109804 rgb
f
2237.13 617.9 mo
2237.13 620.105 2235.18 621.893 2232.78 621.893 cv
2230.38 621.893 2228.44 620.105 2228.44 617.9 cv
2228.44 615.694 2230.38 613.907 2232.78 613.907 cv
2235.18 613.907 2237.13 615.694 2237.13 617.9 cv
f
2234.66 614.304 mo
2235.12 614.935 2235.38 615.69 2235.38 616.503 cv
2235.38 618.708 2233.44 620.495 2231.04 620.495 cv
2230.36 620.495 2229.73 620.35 2229.16 620.098 cv
2229.94 621.179 2231.27 621.893 2232.78 621.893 cv
2235.18 621.893 2237.13 620.105 2237.13 617.9 cv
2237.13 616.314 2236.12 614.949 2234.66 614.304 cv
.486275 0 .0823529 rgb
f
2233.26 600.484 mo
2233.9 600.756 2234.46 601.107 2234.99 601.53 cv
2235.52 601.954 2236 602.452 2236.39 603.035 cv
2236.78 603.612 2237.08 604.27 2237.24 604.968 cv
2237.4 605.664 2237.43 606.385 2237.35 607.084 cv
2237.2 608.489 2236.66 609.776 2236.01 610.954 cv
2235.84 611.247 2235.67 611.533 2235.49 611.818 cv
2234.94 612.648 li
2233.82 614.304 li
2234.86 612.59 li
2235.38 611.737 li
2235.54 611.443 2235.7 611.152 2235.85 610.855 cv
2236.43 609.661 2236.9 608.375 2236.99 607.047 cv
2237.08 605.724 2236.73 604.396 2235.95 603.4 cv
2235.21 602.396 2234.12 601.658 2233.03 601.242 cv
2233.26 600.484 li
f
2314.57 658.732 mo
2267.32 658.732 li
2267.98 655.614 li
2274.91 622.823 li
2307.72 622.823 li
2314.57 658.732 li
.756863 .509804 .14902 rgb
f
2274.29 620.962 mo
2273.81 621.531 2273.02 621.38 2273.06 622.522 cv
2273.15 624.777 2276.75 625.621 2278.31 625.556 cv
2280.69 625.457 2282.77 624.103 2284.92 623.14 cv
2286.69 622.347 2288.28 624.621 2289.19 626.054 cv
2290.38 627.917 2290.99 630.215 2290.21 632.409 cv
2288.37 637.599 2290.55 641.2 2293.2 638.934 cv
2295.84 636.667 2291.56 631.875 2291.8 629.613 cv
2292.05 627.35 2291.92 623.756 2294.74 624.156 cv
2297.56 624.555 2299.28 626.817 2298.66 628.681 cv
2298.05 630.545 2299.27 635.203 2303.19 631.742 cv
2303.19 631.742 2304.78 629.879 2302.33 626.951 cv
2299.9 624.038 2303.66 623.891 2303.7 623.89 cv
2304.86 623.854 2305.45 625.37 2306.52 625.596 cv
2307.71 625.846 2308.91 624.623 2309.23 623.425 cv
2310.15 619.973 2306.57 619.336 2304.36 618.935 cv
2302.26 618.552 2300.15 618.732 2298.15 619.591 cv
2295.95 620.542 2293.25 620.047 2290.95 619.8 cv
2288.32 619.519 2285.71 619.096 2283.11 618.621 cv
2277 617.503 2274.3 620.949 2274.29 620.962 cv
.298039 .117647 0 rgb
f
2297.31 617.9 mo
2297.31 620.105 2295.36 621.893 2292.97 621.893 cv
2290.57 621.893 2288.62 620.105 2288.62 617.9 cv
2288.62 615.694 2290.57 613.907 2292.97 613.907 cv
2295.36 613.907 2297.31 615.694 2297.31 617.9 cv
.917647 0 .109804 rgb
f
2297.31 617.9 mo
2297.31 620.105 2295.36 621.893 2292.97 621.893 cv
2290.57 621.893 2288.62 620.105 2288.62 617.9 cv
2288.62 615.694 2290.57 613.907 2292.97 613.907 cv
2295.36 613.907 2297.31 615.694 2297.31 617.9 cv
f
2294.85 614.304 mo
2295.3 614.935 2295.57 615.69 2295.57 616.503 cv
2295.57 618.708 2293.62 620.495 2291.22 620.495 cv
2290.54 620.495 2289.91 620.35 2289.34 620.098 cv
2290.12 621.179 2291.45 621.893 2292.97 621.893 cv
2295.36 621.893 2297.31 620.105 2297.31 617.9 cv
2297.31 616.314 2296.3 614.949 2294.85 614.304 cv
.486275 0 .0823529 rgb
f
2293.44 600.484 mo
2294.08 600.756 2294.64 601.107 2295.17 601.53 cv
2295.7 601.954 2296.18 602.452 2296.57 603.035 cv
2296.96 603.612 2297.26 604.27 2297.42 604.968 cv
2297.58 605.664 2297.61 606.385 2297.53 607.084 cv
2297.38 608.489 2296.83 609.776 2296.19 610.954 cv
2296.02 611.247 2295.85 611.533 2295.67 611.818 cv
2295.12 612.648 li
2294.01 614.304 li
2295.04 612.59 li
2295.56 611.737 li
2295.72 611.443 2295.88 611.152 2296.03 610.855 cv
2296.62 609.661 2297.08 608.375 2297.17 607.047 cv
2297.26 605.724 2296.91 604.396 2296.14 603.4 cv
2295.39 602.396 2294.3 601.658 2293.21 601.242 cv
2293.44 600.484 li
f
2387.1 658.732 mo
2339.84 658.732 li
2340.5 655.614 li
2347.43 622.823 li
2380.24 622.823 li
2387.1 658.732 li
.756863 .509804 .14902 rgb
f
2346.82 620.962 mo
2346.33 621.531 2345.54 621.38 2345.59 622.522 cv
2345.68 624.777 2349.27 625.621 2350.84 625.556 cv
2353.22 625.457 2355.3 624.103 2357.44 623.14 cv
2359.21 622.347 2360.8 624.621 2361.72 626.054 cv
2362.91 627.917 2363.51 630.215 2362.74 632.409 cv
2360.9 637.599 2363.08 641.2 2365.73 638.934 cv
2368.37 636.667 2364.08 631.875 2364.33 629.613 cv
2364.57 627.35 2364.45 623.756 2367.27 624.156 cv
2370.08 624.555 2371.81 626.817 2371.19 628.681 cv
2370.57 630.545 2371.8 635.203 2375.71 631.742 cv
2375.71 631.742 2377.31 629.879 2374.86 626.951 cv
2372.42 624.038 2376.18 623.891 2376.22 623.89 cv
2377.39 623.854 2377.98 625.37 2379.05 625.596 cv
2380.24 625.846 2381.43 624.623 2381.75 623.425 cv
2382.68 619.973 2379.1 619.336 2376.89 618.935 cv
2374.78 618.552 2372.67 618.732 2370.68 619.591 cv
2368.48 620.542 2365.77 620.047 2363.47 619.8 cv
2360.85 619.519 2358.24 619.096 2355.64 618.621 cv
2349.52 617.503 2346.83 620.949 2346.82 620.962 cv
.298039 .117647 0 rgb
f
2369.84 617.9 mo
2369.84 620.105 2367.89 621.893 2365.49 621.893 cv
2363.09 621.893 2361.15 620.105 2361.15 617.9 cv
2361.15 615.694 2363.09 613.907 2365.49 613.907 cv
2367.89 613.907 2369.84 615.694 2369.84 617.9 cv
.917647 0 .109804 rgb
f
2369.84 617.9 mo
2369.84 620.105 2367.89 621.893 2365.49 621.893 cv
2363.09 621.893 2361.15 620.105 2361.15 617.9 cv
2361.15 615.694 2363.09 613.907 2365.49 613.907 cv
2367.89 613.907 2369.84 615.694 2369.84 617.9 cv
f
2367.37 614.304 mo
2367.83 614.935 2368.09 615.69 2368.09 616.503 cv
2368.09 618.708 2366.15 620.495 2363.75 620.495 cv
2363.07 620.495 2362.43 620.35 2361.86 620.098 cv
2362.64 621.179 2363.98 621.893 2365.49 621.893 cv
2367.89 621.893 2369.84 620.105 2369.84 617.9 cv
2369.84 616.314 2368.83 614.949 2367.37 614.304 cv
.486275 0 .0823529 rgb
f
2365.97 600.484 mo
2366.61 600.756 2367.16 601.107 2367.7 601.53 cv
2368.23 601.954 2368.71 602.452 2369.1 603.035 cv
2369.49 603.612 2369.79 604.27 2369.95 604.968 cv
2370.11 605.664 2370.13 606.385 2370.06 607.084 cv
2369.9 608.489 2369.36 609.776 2368.72 610.954 cv
2368.55 611.247 2368.37 611.533 2368.2 611.818 cv
2367.64 612.648 li
2366.53 614.304 li
2367.57 612.59 li
2368.09 611.737 li
2368.24 611.443 2368.41 611.152 2368.56 610.855 cv
2369.14 609.661 2369.61 608.375 2369.69 607.047 cv
2369.79 605.724 2369.43 604.396 2368.66 603.4 cv
2367.92 602.396 2366.83 601.658 2365.74 601.242 cv
2365.97 600.484 li
f
2282.47 732.648 mo
2235.21 732.648 li
2235.87 729.53 li
2242.8 696.739 li
2275.61 696.739 li
2282.47 732.648 li
.756863 .509804 .14902 rgb
f
2242.19 694.877 mo
2241.7 695.447 2240.91 695.297 2240.96 696.438 cv
2241.05 698.692 2244.65 699.537 2246.21 699.472 cv
2248.58 699.373 2250.67 698.018 2252.81 697.055 cv
2254.58 696.262 2256.17 698.537 2257.09 699.969 cv
2258.28 701.833 2258.88 704.131 2258.11 706.324 cv
2256.27 711.515 2258.45 715.116 2261.09 712.849 cv
2263.74 710.583 2259.45 705.791 2259.7 703.528 cv
2259.94 701.266 2259.82 697.672 2262.64 698.071 cv
2265.45 698.47 2267.18 700.733 2266.56 702.597 cv
2265.94 704.46 2267.17 709.119 2271.08 705.658 cv
2271.08 705.658 2272.68 703.795 2270.23 700.867 cv
2267.79 697.954 2271.55 697.807 2271.59 697.806 cv
2272.76 697.77 2273.35 699.286 2274.42 699.511 cv
2275.61 699.762 2276.8 698.538 2277.12 697.341 cv
2278.05 693.889 2274.47 693.251 2272.26 692.85 cv
2270.15 692.468 2268.04 692.647 2266.05 693.507 cv
2263.85 694.457 2261.14 693.963 2258.84 693.716 cv
2256.22 693.434 2253.6 693.013 2251 692.537 cv
2244.9 691.419 2242.2 694.865 2242.19 694.877 cv
.298039 .117647 0 rgb
f
2265.21 691.815 mo
2265.21 694.021 2263.26 695.809 2260.86 695.809 cv
2258.46 695.809 2256.51 694.021 2256.51 691.815 cv
2256.51 689.611 2258.46 687.823 2260.86 687.823 cv
2263.26 687.823 2265.21 689.611 2265.21 691.815 cv
.917647 0 .109804 rgb
f
2265.21 691.815 mo
2265.21 694.021 2263.26 695.809 2260.86 695.809 cv
2258.46 695.809 2256.51 694.021 2256.51 691.815 cv
2256.51 689.611 2258.46 687.823 2260.86 687.823 cv
2263.26 687.823 2265.21 689.611 2265.21 691.815 cv
f
2262.74 688.22 mo
2263.2 688.851 2263.46 689.605 2263.46 690.419 cv
2263.46 692.624 2261.52 694.411 2259.11 694.411 cv
2258.44 694.411 2257.8 694.265 2257.23 694.014 cv
2258.01 695.095 2259.35 695.809 2260.86 695.809 cv
2263.26 695.809 2265.21 694.021 2265.21 691.815 cv
2265.21 690.23 2264.2 688.865 2262.74 688.22 cv
.486275 0 .0823529 rgb
f
2261.34 674.4 mo
2261.98 674.672 2262.53 675.024 2263.07 675.445 cv
2263.6 675.869 2264.08 676.368 2264.47 676.951 cv
2264.86 677.528 2265.16 678.186 2265.32 678.884 cv
2265.48 679.579 2265.5 680.301 2265.43 681 cv
2265.27 682.405 2264.73 683.692 2264.09 684.87 cv
2263.92 685.163 2263.74 685.448 2263.57 685.734 cv
2263.01 686.564 li
2261.9 688.22 li
2262.94 686.506 li
2263.46 685.652 li
2263.61 685.359 2263.78 685.068 2263.93 684.771 cv
2264.51 683.577 2264.98 682.291 2265.06 680.963 cv
2265.16 679.641 2264.8 678.312 2264.03 677.316 cv
2263.29 676.312 2262.2 675.573 2261.11 675.157 cv
2261.34 674.4 li
f
2397.45 665.068 mo
2173.33 665.068 li
2173.33 658.732 li
2397.45 658.732 li
2397.45 665.068 li
.619608 .666667 .92549 rgb
f
2413.61 740.019 mo
2149.08 740.019 li
2149.08 731.96 li
2413.61 731.96 li
2413.61 740.019 li
f
2182.5 828.438 mo
2090.88 828.438 li
2104.94 789.746 li
2184.51 789.746 li
2184.51 740.019 li
2211.33 740.019 li
2182.5 828.438 li
2213.96 731.96 mo
2184.51 731.96 li
2184.51 665.068 li
2235.77 665.068 li
2213.96 731.96 li
2229.16 658.732 mo
2184.51 658.732 li
2184.51 592.434 li
2217.92 548.861 2273.67 521.55 2334.78 521.55 cv
2401.31 521.55 li
2333.1 521.55 2272.35 563.813 2248.35 627.09 cv
2247.97 625.096 li
2248.48 624.67 2248.88 624.044 2249.05 623.425 cv
2249.97 619.973 2246.39 619.336 2244.18 618.935 cv
2243.49 618.809 2242.8 618.744 2242.11 618.744 cv
2240.7 618.744 2239.31 619.015 2237.97 619.591 cv
2237.49 619.799 2236.98 619.938 2236.46 620.025 cv
2236.89 619.41 2237.13 618.681 2237.13 617.9 cv
2237.13 617.9 li
2237.13 617.9 li
2237.13 617.9 li
2237.13 617.9 li
2237.13 617.9 li
2237.13 617.885 2237.13 617.869 2237.13 617.854 cv
2237.13 617.849 2237.13 617.845 2237.13 617.84 cv
2237.13 617.829 2237.13 617.817 2237.13 617.806 cv
2237.13 617.801 2237.13 617.797 2237.13 617.793 cv
2237.13 617.778 2237.13 617.764 2237.13 617.749 cv
2237.13 617.744 2237.13 617.74 2237.13 617.735 cv
2237.13 617.725 2237.13 617.715 2237.13 617.705 cv
2237.13 617.698 2237.12 617.692 2237.12 617.685 cv
2237.12 617.676 2237.12 617.667 2237.12 617.658 cv
2237.12 617.648 2237.12 617.637 2237.12 617.626 cv
2237.12 617.618 2237.12 617.61 2237.12 617.602 cv
2237.12 617.593 2237.12 617.584 2237.12 617.575 cv
2237.12 617.571 2237.12 617.567 2237.12 617.562 cv
2236.96 615.89 2235.69 614.511 2233.99 614.062 cv
2234.94 612.648 li
2235.49 611.818 li
2235.67 611.533 2235.84 611.247 2236.01 610.954 cv
2236.66 609.776 2237.2 608.489 2237.35 607.084 cv
2237.43 606.385 2237.4 605.664 2237.24 604.968 cv
2237.08 604.27 2236.78 603.612 2236.39 603.035 cv
2236 602.452 2235.52 601.954 2234.99 601.53 cv
2234.46 601.107 2233.9 600.756 2233.26 600.484 cv
2233.03 601.242 li
2234.12 601.658 2235.21 602.396 2235.95 603.4 cv
2236.73 604.396 2237.08 605.724 2236.99 607.047 cv
2236.9 608.375 2236.43 609.661 2235.85 610.855 cv
2235.7 611.152 2235.54 611.443 2235.38 611.737 cv
2234.86 612.59 li
2233.97 614.058 li
2233.6 613.96 2233.2 613.907 2232.78 613.907 cv
2230.38 613.907 2228.44 615.694 2228.44 617.9 cv
2228.44 617.9 li
2228.44 617.9 li
2228.44 618.496 2228.58 619.061 2228.83 619.569 cv
2226.86 619.308 2224.89 618.98 2222.93 618.621 cv
2222.08 618.465 2221.29 618.398 2220.57 618.398 cv
2216.12 618.398 2214.12 620.951 2214.11 620.962 cv
2213.63 621.531 2212.84 621.38 2212.88 622.522 cv
2212.92 623.436 2213.53 624.118 2214.35 624.602 cv
2207.8 655.614 li
2207.13 658.732 li
2212.21 658.732 li
2226.33 658.732 li
2229.16 658.732 li
level3{
gsave
clp
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.901961 .701961 .764706 ]
/C1 [.92549 .937255 .980392 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-163.071 -1314.17 1314.17 -163.071 1547.48 1328.35 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~jlY^fk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tghkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND'mkih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kiq?rl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07HtlK[["lK[["lK[["lK[["lK[["
lK[["lK[["lK[["lK[["lK[["lK[^$lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
~>
<~ZEpmDZa@*H['d<L[C3NP[^NZS\$rlW\@B)[\[f;_]"5Jb]=Y\f]Y(nj]tM+n^:q=q^V@Ou^qdb$_83t(
_8=(+_Sa:/_o0L3`5T^7`Poj:`l?'>a2c9BaN2KFaiVZIb0%lMbKJ)Qbfn;Uc-=MXcHa_\cd0q`d*U.d
d*^7gdF-IkdaQ[oe'umseC<%!e^`7%f%/I)f@S[-f\"j0g"G'4g=k98gY:K<gt^]?h;-oChVR,Ghr!>K
hr*GNi8NYRiSrkVioB(Zj5]4]jQ,FajlPXek2tjikND$lkih6pl07HtlK[[#lg*m&m-O**mHs<.mdBN2
~>
<~_Sa:/_o0L3`5KX6`Poj:`l?$=a2c6@aN2HDaiVZHai_cKb0%oNbKJ,Rbfn;Uc-=MXcHa_\cd0q`cd:%c
d*U1fdF$CjdaHRme'ldpeC<!te^`4#e^i=&f%/I)f@S[-f\"j0g"G'3g=k97gY:K;gYCT>gt^`Ah;-rE
hVR,Hhr!>Li8EPOiSibSiSrkVioB(Zj5]4]jQ,C`jlPUdk2tggkND$kkNM-nkiq?rl07KulK[[#lg*m'
m-O**mHs<.mI'E1mdKW5n*fc8nF5r;naZ/?o()ABoCMSFoCV\Io_%nMp%A%Pp@e4Sp\4FWq"XXZq>'j^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
2518.18 828.656 mo
2090.8 828.656 li
2090.88 828.438 li
2182.5 828.438 li
2182.43 828.656 li
2518.18 828.656 li
.92549 .960784 1 rgb
f
2184.51 789.746 mo
2104.94 789.746 li
2161.39 634.439 li
2166.92 619.234 2174.76 605.145 2184.51 592.434 cv
2184.51 658.732 li
2173.33 658.732 li
2173.33 665.068 li
2184.51 665.068 li
2184.51 731.96 li
2149.08 731.96 li
2149.08 740.019 li
2184.51 740.019 li
2184.51 789.746 li
.862745 .960784 .988235 rgb
f
2518.18 828.656 mo
2182.43 828.656 li
2182.5 828.438 li
2211.33 740.019 li
2413.61 740.019 li
2413.61 731.96 li
2282.34 731.96 li
2276.05 699.01 li
2276.56 698.584 2276.96 697.959 2277.12 697.341 cv
2278.05 693.889 2274.47 693.251 2272.26 692.85 cv
2271.57 692.724 2270.87 692.659 2270.18 692.659 cv
2268.78 692.659 2267.39 692.93 2266.05 693.507 cv
2265.57 693.715 2265.06 693.854 2264.54 693.941 cv
2264.96 693.325 2265.21 692.596 2265.21 691.815 cv
2265.21 691.815 li
2265.21 691.815 li
2265.21 691.815 li
2265.21 691.815 li
2265.21 691.815 li
2265.21 691.8 2265.21 691.784 2265.21 691.769 cv
2265.21 691.765 2265.21 691.76 2265.21 691.756 cv
2265.21 691.744 2265.21 691.732 2265.21 691.721 cv
2265.21 691.717 2265.21 691.712 2265.21 691.708 cv
2265.21 691.694 2265.21 691.679 2265.2 691.664 cv
2265.2 691.66 2265.2 691.655 2265.2 691.65 cv
2265.2 691.64 2265.2 691.63 2265.2 691.62 cv
2265.2 691.614 2265.2 691.607 2265.2 691.601 cv
2265.2 691.591 2265.2 691.582 2265.2 691.573 cv
2265.2 691.563 2265.2 691.554 2265.2 691.544 cv
2265.2 691.535 2265.2 691.526 2265.2 691.517 cv
2265.2 691.509 2265.19 691.5 2265.19 691.492 cv
2265.19 691.486 2265.19 691.482 2265.19 691.477 cv
2265.04 689.805 2263.77 688.427 2262.06 687.978 cv
2263.01 686.564 li
2263.57 685.734 li
2263.74 685.448 2263.92 685.163 2264.09 684.87 cv
2264.73 683.692 2265.27 682.405 2265.43 681 cv
2265.5 680.301 2265.48 679.579 2265.32 678.884 cv
2265.16 678.186 2264.86 677.528 2264.47 676.951 cv
2264.08 676.368 2263.6 675.869 2263.07 675.445 cv
2262.53 675.024 2261.98 674.672 2261.34 674.4 cv
2261.11 675.157 li
2262.2 675.573 2263.29 676.312 2264.03 677.316 cv
2264.8 678.312 2265.16 679.641 2265.06 680.963 cv
2264.98 682.291 2264.51 683.577 2263.93 684.771 cv
2263.78 685.068 2263.61 685.359 2263.46 685.652 cv
2262.94 686.506 li
2262.05 687.974 li
2261.67 687.875 2261.27 687.823 2260.86 687.823 cv
2258.46 687.823 2256.51 689.611 2256.51 691.815 cv
2256.51 691.815 li
2256.51 691.815 li
2256.51 692.411 2256.66 692.976 2256.91 693.484 cv
2254.94 693.224 2252.97 692.896 2251 692.537 cv
2250.15 692.381 2249.37 692.313 2248.64 692.313 cv
2244.2 692.313 2242.2 694.867 2242.19 694.877 cv
2241.7 695.447 2240.91 695.297 2240.96 696.438 cv
2241 697.352 2241.61 698.034 2242.43 698.517 cv
2235.87 729.53 li
2235.36 731.96 li
2213.96 731.96 li
2235.77 665.068 li
2397.45 665.068 li
2397.45 658.732 li
2237.84 658.732 li
2244.6 658.732 li
2254.39 658.732 li
2248.35 627.09 li
2272.35 563.813 2333.1 521.55 2401.31 521.55 cv
2518.18 521.55 li
2518.18 828.656 li
2387.1 658.732 mo
2387.1 658.732 li
2380.68 625.095 li
2381.19 624.67 2381.59 624.044 2381.75 623.425 cv
2382.68 619.973 2379.1 619.336 2376.89 618.935 cv
2376.2 618.809 2375.5 618.744 2374.81 618.744 cv
2373.41 618.744 2372.02 619.015 2370.68 619.591 cv
2370.2 619.799 2369.69 619.938 2369.17 620.025 cv
2369.59 619.41 2369.84 618.681 2369.84 617.9 cv
2369.84 617.9 li
2369.84 617.9 li
2369.84 617.9 li
2369.84 617.9 li
2369.84 617.9 li
2369.84 617.885 2369.84 617.869 2369.84 617.854 cv
2369.84 617.849 2369.84 617.845 2369.84 617.84 cv
2369.84 617.829 2369.84 617.817 2369.84 617.806 cv
2369.84 617.801 2369.84 617.797 2369.84 617.793 cv
2369.84 617.778 2369.83 617.764 2369.83 617.749 cv
2369.83 617.744 2369.83 617.74 2369.83 617.735 cv
2369.83 617.725 2369.83 617.715 2369.83 617.704 cv
2369.83 617.698 2369.83 617.692 2369.83 617.686 cv
2369.83 617.676 2369.83 617.666 2369.83 617.656 cv
2369.83 617.648 2369.83 617.64 2369.83 617.631 cv
2369.83 617.621 2369.83 617.611 2369.82 617.601 cv
2369.82 617.593 2369.82 617.585 2369.82 617.577 cv
2369.82 617.572 2369.82 617.566 2369.82 617.56 cv
2369.82 617.527 2369.81 617.494 2369.81 617.461 cv
2369.81 617.461 2369.81 617.46 2369.81 617.46 cv
2369.62 615.834 2368.36 614.502 2366.69 614.062 cv
2367.64 612.648 li
2368.2 611.818 li
2368.37 611.533 2368.55 611.247 2368.72 610.954 cv
2369.36 609.776 2369.9 608.489 2370.06 607.084 cv
2370.13 606.385 2370.11 605.664 2369.95 604.968 cv
2369.79 604.27 2369.49 603.612 2369.1 603.035 cv
2368.71 602.452 2368.23 601.954 2367.7 601.53 cv
2367.16 601.107 2366.61 600.756 2365.97 600.484 cv
2365.74 601.242 li
2366.83 601.658 2367.92 602.396 2368.66 603.4 cv
2369.43 604.396 2369.79 605.724 2369.69 607.047 cv
2369.61 608.375 2369.14 609.661 2368.56 610.855 cv
2368.41 611.152 2368.24 611.443 2368.09 611.737 cv
2367.57 612.59 li
2366.68 614.058 li
2366.3 613.96 2365.9 613.907 2365.49 613.907 cv
2363.09 613.907 2361.15 615.694 2361.15 617.9 cv
2361.15 617.9 li
2361.15 617.9 li
2361.15 618.496 2361.29 619.061 2361.54 619.569 cv
2359.57 619.308 2357.6 618.98 2355.64 618.621 cv
2354.78 618.465 2354 618.398 2353.27 618.398 cv
2348.82 618.398 2346.83 620.951 2346.82 620.962 cv
2346.33 621.531 2345.54 621.38 2345.59 622.522 cv
2345.63 623.436 2346.24 624.118 2347.06 624.602 cv
2340.5 655.614 li
2339.84 658.732 li
2344.92 658.732 li
2359.04 658.732 li
2366.53 658.732 li
2377.31 658.732 li
2387.1 658.732 li
2314.57 658.732 mo
2314.57 658.732 li
2308.15 625.095 li
2308.66 624.67 2309.06 624.044 2309.23 623.425 cv
2310.15 619.973 2306.57 619.336 2304.36 618.935 cv
2303.67 618.809 2302.98 618.744 2302.29 618.744 cv
2300.88 618.744 2299.49 619.015 2298.15 619.591 cv
2297.67 619.799 2297.17 619.938 2296.65 620.025 cv
2297.07 619.41 2297.31 618.681 2297.31 617.9 cv
2297.31 617.9 li
2297.31 617.9 li
2297.31 617.9 li
2297.31 617.9 li
2297.31 617.9 li
2297.31 617.885 2297.31 617.869 2297.31 617.854 cv
2297.31 617.849 2297.31 617.845 2297.31 617.84 cv
2297.31 617.829 2297.31 617.817 2297.31 617.806 cv
2297.31 617.801 2297.31 617.797 2297.31 617.793 cv
2297.31 617.778 2297.31 617.764 2297.31 617.749 cv
2297.31 617.744 2297.31 617.74 2297.31 617.735 cv
2297.31 617.725 2297.31 617.715 2297.31 617.705 cv
2297.31 617.698 2297.31 617.692 2297.3 617.685 cv
2297.3 617.676 2297.3 617.667 2297.3 617.658 cv
2297.3 617.648 2297.3 617.637 2297.3 617.626 cv
2297.3 617.618 2297.3 617.61 2297.3 617.602 cv
2297.3 617.593 2297.3 617.585 2297.3 617.576 cv
2297.3 617.571 2297.3 617.566 2297.3 617.562 cv
2297.14 615.89 2295.87 614.511 2294.17 614.062 cv
2295.12 612.648 li
2295.67 611.818 li
2295.85 611.533 2296.02 611.247 2296.19 610.954 cv
2296.83 609.776 2297.38 608.489 2297.53 607.084 cv
2297.61 606.385 2297.58 605.664 2297.42 604.968 cv
2297.26 604.27 2296.96 603.612 2296.57 603.035 cv
2296.18 602.452 2295.7 601.954 2295.17 601.53 cv
2294.64 601.107 2294.08 600.756 2293.44 600.484 cv
2293.21 601.242 li
2294.3 601.658 2295.39 602.396 2296.14 603.4 cv
2296.91 604.396 2297.26 605.724 2297.17 607.047 cv
2297.08 608.375 2296.62 609.661 2296.03 610.855 cv
2295.88 611.152 2295.72 611.443 2295.56 611.737 cv
2295.04 612.59 li
2294.15 614.058 li
2293.78 613.96 2293.38 613.907 2292.97 613.907 cv
2290.57 613.907 2288.62 615.694 2288.62 617.9 cv
2288.62 617.9 li
2288.62 617.9 li
2288.62 618.496 2288.76 619.061 2289.02 619.569 cv
2287.04 619.308 2285.07 618.98 2283.11 618.621 cv
2282.26 618.465 2281.47 618.398 2280.75 618.398 cv
2276.3 618.398 2274.3 620.951 2274.29 620.962 cv
2273.81 621.531 2273.02 621.38 2273.06 622.522 cv
2273.1 623.436 2273.71 624.118 2274.53 624.602 cv
2267.98 655.614 li
2267.32 658.732 li
2272.39 658.732 li
2286.51 658.732 li
2294 658.732 li
2304.78 658.732 li
2314.57 658.732 li
.694118 .756863 .952941 rgb
f
2254.39 658.732 mo
2244.6 658.732 li
2239.86 632.867 li
2240.06 632.944 2240.27 632.987 2240.5 632.987 cv
2241.17 632.987 2242 632.635 2243.01 631.742 cv
2243.01 631.742 2244.6 629.879 2242.15 626.951 cv
2239.72 624.038 2243.47 623.891 2243.52 623.89 cv
2243.53 623.889 2243.54 623.889 2243.56 623.889 cv
2244.69 623.889 2245.28 625.372 2246.34 625.596 cv
2246.45 625.618 2246.55 625.629 2246.66 625.629 cv
2247.12 625.629 2247.58 625.42 2247.97 625.096 cv
2248.35 627.09 li
2254.39 658.732 li
2233.82 658.732 mo
2229.16 658.732 li
2226.33 658.732 li
2225.17 623.005 li
2225.27 622.986 2225.38 622.977 2225.48 622.977 cv
2226.94 622.977 2228.23 624.825 2229.01 626.054 cv
2230.2 627.917 2230.81 630.215 2230.03 632.409 cv
2228.58 636.514 2229.64 639.625 2231.45 639.625 cv
2231.93 639.625 2232.47 639.407 2233.02 638.934 cv
2233.82 658.732 li
2212.21 658.732 mo
2207.13 658.732 li
2207.8 655.614 li
2214.35 624.602 li
2215.48 625.269 2217.01 625.559 2217.96 625.559 cv
2218.02 625.559 2218.07 625.558 2218.13 625.556 cv
2218.44 625.543 2218.74 625.509 2219.04 625.457 cv
2212.21 658.732 li
2232.79 633.26 mo
2232.16 631.854 2231.52 630.527 2231.62 629.613 cv
2231.77 628.199 2231.78 626.266 2232.46 625.111 cv
2232.79 633.26 li
.776471 .662745 .478431 rgb
f
2226.33 658.732 mo
2212.21 658.732 li
2219.04 625.457 li
2221.05 625.111 2222.87 623.977 2224.74 623.14 cv
2224.88 623.075 2225.02 623.031 2225.17 623.005 cv
2226.33 658.732 li
.658823 .572549 .447059 rgb
f
2244.6 658.732 mo
2233.82 658.732 li
2233.02 638.934 li
2233.02 638.934 2233.02 638.934 2233.02 638.934 cv
2234.59 637.583 2233.71 635.335 2232.79 633.26 cv
2232.46 625.111 li
2232.8 624.514 2233.33 624.125 2234.15 624.125 cv
2234.28 624.125 2234.41 624.135 2234.56 624.156 cv
2237.38 624.555 2239.1 626.817 2238.48 628.681 cv
2238.08 629.897 2238.46 632.303 2239.86 632.867 cv
2244.6 658.732 li
f
2231.45 639.625 mo
2229.64 639.625 2228.58 636.514 2230.03 632.409 cv
2230.81 630.215 2230.2 627.917 2229.01 626.054 cv
2228.23 624.825 2226.94 622.977 2225.48 622.977 cv
2225.38 622.977 2225.27 622.986 2225.17 623.005 cv
2225.02 623.031 2224.88 623.075 2224.74 623.14 cv
2222.87 623.977 2221.05 625.111 2219.04 625.457 cv
2218.74 625.509 2218.44 625.543 2218.13 625.556 cv
2218.07 625.558 2218.02 625.559 2217.96 625.559 cv
2217.01 625.559 2215.48 625.269 2214.35 624.602 cv
2213.53 624.118 2212.92 623.436 2212.88 622.522 cv
2212.84 621.38 2213.63 621.531 2214.11 620.962 cv
2214.12 620.951 2216.12 618.398 2220.57 618.398 cv
2221.29 618.398 2222.08 618.465 2222.93 618.621 cv
2224.89 618.98 2226.86 619.308 2228.83 619.569 cv
2229.44 620.772 2230.67 621.653 2232.15 621.851 cv
2232.15 621.851 2232.16 621.852 2232.16 621.852 cv
2232.17 621.853 2232.18 621.855 2232.19 621.856 cv
2232.19 621.856 2232.2 621.857 2232.2 621.857 cv
2232.22 621.859 2232.23 621.861 2232.25 621.863 cv
2232.26 621.864 2232.26 621.864 2232.27 621.865 cv
2232.28 621.866 2232.28 621.867 2232.29 621.868 cv
2232.31 621.869 2232.32 621.87 2232.33 621.871 cv
2232.34 621.872 2232.34 621.873 2232.35 621.873 cv
2232.36 621.874 2232.37 621.875 2232.38 621.876 cv
2232.39 621.877 2232.4 621.877 2232.4 621.878 cv
2232.42 621.879 2232.43 621.88 2232.44 621.881 cv
2232.45 621.881 2232.45 621.881 2232.46 621.882 cv
2232.47 621.883 2232.49 621.884 2232.5 621.885 cv
2232.51 621.885 2232.51 621.885 2232.51 621.885 cv
2232.53 621.886 2232.54 621.887 2232.55 621.887 cv
2232.56 621.888 2232.56 621.888 2232.57 621.888 cv
2232.58 621.889 2232.6 621.889 2232.61 621.89 cv
2232.62 621.89 2232.62 621.89 2232.62 621.89 cv
2232.64 621.891 2232.65 621.891 2232.67 621.892 cv
2232.67 621.892 2232.67 621.892 2232.67 621.892 cv
2232.69 621.892 2232.71 621.892 2232.72 621.893 cv
2232.73 621.893 2232.73 621.893 2232.73 621.893 cv
2232.75 621.893 2232.77 621.893 2232.78 621.893 cv
2234.33 621.893 2235.69 621.147 2236.46 620.025 cv
2236.98 619.938 2237.49 619.799 2237.97 619.591 cv
2239.31 619.015 2240.7 618.744 2242.11 618.744 cv
2242.8 618.744 2243.49 618.809 2244.18 618.935 cv
2246.39 619.336 2249.97 619.973 2249.05 623.425 cv
2248.88 624.044 2248.48 624.67 2247.97 625.096 cv
2247.58 625.42 2247.12 625.629 2246.66 625.629 cv
2246.55 625.629 2246.45 625.618 2246.34 625.596 cv
2245.28 625.372 2244.69 623.889 2243.56 623.889 cv
2243.54 623.889 2243.53 623.889 2243.52 623.89 cv
2243.47 623.891 2239.72 624.038 2242.15 626.951 cv
2244.6 629.879 2243.01 631.742 2243.01 631.742 cv
2242 632.635 2241.17 632.987 2240.5 632.987 cv
2240.27 632.987 2240.06 632.944 2239.86 632.867 cv
2238.46 632.303 2238.08 629.897 2238.48 628.681 cv
2239.1 626.817 2237.38 624.555 2234.56 624.156 cv
2234.41 624.135 2234.28 624.125 2234.15 624.125 cv
2233.33 624.125 2232.8 624.514 2232.46 625.111 cv
2231.78 626.266 2231.77 628.199 2231.62 629.613 cv
2231.52 630.527 2232.16 631.854 2232.79 633.26 cv
2233.71 635.335 2234.59 637.583 2233.02 638.934 cv
2233.02 638.934 2233.02 638.934 2233.02 638.934 cv
2232.47 639.407 2231.93 639.625 2231.45 639.625 cv
.498039 .423529 .388235 rgb
f
2232.73 621.893 mo
2232.73 621.893 2232.73 621.893 2232.72 621.893 cv
2232.73 621.893 2232.73 621.893 2232.73 621.893 cv
2232.67 621.892 mo
2232.67 621.892 2232.67 621.892 2232.67 621.892 cv
2232.67 621.892 2232.67 621.892 2232.67 621.892 cv
2232.62 621.89 mo
2232.62 621.89 2232.62 621.89 2232.61 621.89 cv
2232.62 621.89 2232.62 621.89 2232.62 621.89 cv
2232.57 621.888 mo
2232.56 621.888 2232.56 621.888 2232.55 621.887 cv
2232.56 621.888 2232.56 621.888 2232.57 621.888 cv
2232.51 621.885 mo
2232.51 621.885 2232.51 621.885 2232.5 621.885 cv
2232.51 621.885 2232.51 621.885 2232.51 621.885 cv
2232.46 621.882 mo
2232.45 621.881 2232.45 621.881 2232.44 621.881 cv
2232.45 621.881 2232.45 621.882 2232.46 621.882 cv
2232.4 621.878 mo
2232.4 621.877 2232.39 621.877 2232.38 621.876 cv
2232.39 621.877 2232.4 621.877 2232.4 621.878 cv
2232.35 621.873 mo
2232.34 621.873 2232.34 621.872 2232.33 621.871 cv
2232.34 621.872 2232.34 621.873 2232.35 621.873 cv
2232.29 621.868 mo
2232.28 621.867 2232.28 621.866 2232.27 621.865 cv
2232.28 621.866 2232.28 621.867 2232.29 621.868 cv
2232.25 621.863 mo
2232.23 621.861 2232.22 621.859 2232.2 621.857 cv
2232.22 621.859 2232.23 621.861 2232.25 621.863 cv
2232.19 621.856 mo
2232.18 621.855 2232.17 621.853 2232.16 621.852 cv
2232.17 621.853 2232.18 621.855 2232.19 621.856 cv
2232.15 621.851 mo
2230.67 621.653 2229.44 620.772 2228.83 619.569 cv
2228.58 619.061 2228.44 618.496 2228.44 617.9 cv
2228.44 617.9 li
2228.44 615.694 2230.38 613.907 2232.78 613.907 cv
2233.2 613.907 2233.6 613.96 2233.97 614.058 cv
2233.82 614.304 li
2233.99 614.062 li
2235.69 614.511 2236.96 615.89 2237.12 617.562 cv
2236.98 616.122 2236.02 614.903 2234.66 614.304 cv
2235.12 614.935 2235.38 615.69 2235.38 616.503 cv
2235.38 618.708 2233.44 620.495 2231.04 620.495 cv
2230.36 620.495 2229.73 620.35 2229.16 620.098 cv
2229.83 621.026 2230.9 621.683 2232.15 621.851 cv
2237.13 617.854 mo
2237.13 617.849 2237.13 617.845 2237.13 617.84 cv
2237.13 617.845 2237.13 617.849 2237.13 617.854 cv
2237.13 617.806 mo
2237.13 617.801 2237.13 617.797 2237.13 617.793 cv
2237.13 617.797 2237.13 617.801 2237.13 617.806 cv
2237.13 617.749 mo
2237.13 617.744 2237.13 617.74 2237.13 617.735 cv
2237.13 617.74 2237.13 617.744 2237.13 617.749 cv
2237.13 617.705 mo
2237.13 617.698 2237.12 617.692 2237.12 617.685 cv
2237.12 617.692 2237.13 617.698 2237.13 617.705 cv
2237.12 617.658 mo
2237.12 617.648 2237.12 617.637 2237.12 617.626 cv
2237.12 617.637 2237.12 617.648 2237.12 617.658 cv
2237.12 617.602 mo
2237.12 617.593 2237.12 617.584 2237.12 617.575 cv
2237.12 617.584 2237.12 617.593 2237.12 617.602 cv
.878431 .34902 .454902 rgb
f
2232.78 621.893 mo
2232.77 621.893 2232.75 621.893 2232.73 621.893 cv
2232.73 621.893 2232.73 621.893 2232.72 621.893 cv
2232.71 621.892 2232.69 621.892 2232.67 621.892 cv
2232.67 621.892 2232.67 621.892 2232.67 621.892 cv
2232.65 621.891 2232.64 621.891 2232.62 621.89 cv
2232.62 621.89 2232.62 621.89 2232.61 621.89 cv
2232.6 621.889 2232.58 621.889 2232.57 621.888 cv
2232.56 621.888 2232.56 621.888 2232.55 621.887 cv
2232.54 621.887 2232.53 621.886 2232.51 621.885 cv
2232.51 621.885 2232.51 621.885 2232.5 621.885 cv
2232.49 621.884 2232.47 621.883 2232.46 621.882 cv
2232.45 621.882 2232.45 621.881 2232.44 621.881 cv
2232.43 621.88 2232.42 621.879 2232.4 621.878 cv
2232.4 621.877 2232.39 621.877 2232.38 621.876 cv
2232.37 621.875 2232.36 621.874 2232.35 621.873 cv
2232.34 621.873 2232.34 621.872 2232.33 621.871 cv
2232.32 621.87 2232.31 621.869 2232.29 621.868 cv
2232.28 621.867 2232.28 621.866 2232.27 621.865 cv
2232.26 621.864 2232.26 621.864 2232.25 621.863 cv
2232.23 621.861 2232.22 621.859 2232.2 621.857 cv
2232.2 621.857 2232.19 621.856 2232.19 621.856 cv
2232.18 621.855 2232.17 621.853 2232.16 621.852 cv
2232.16 621.852 2232.15 621.851 2232.15 621.851 cv
2230.9 621.683 2229.83 621.026 2229.16 620.098 cv
2229.73 620.35 2230.36 620.495 2231.04 620.495 cv
2233.44 620.495 2235.38 618.708 2235.38 616.503 cv
2235.38 615.69 2235.12 614.935 2234.66 614.304 cv
2236.02 614.903 2236.98 616.122 2237.12 617.562 cv
2237.12 617.562 li
2237.12 617.567 2237.12 617.571 2237.12 617.575 cv
2237.12 617.575 li
2237.12 617.584 2237.12 617.593 2237.12 617.602 cv
2237.12 617.602 li
2237.12 617.61 2237.12 617.618 2237.12 617.626 cv
2237.12 617.626 li
2237.12 617.637 2237.12 617.648 2237.12 617.658 cv
2237.12 617.658 li
2237.12 617.667 2237.12 617.676 2237.12 617.685 cv
2237.12 617.685 li
2237.12 617.692 2237.13 617.698 2237.13 617.705 cv
2237.13 617.705 li
2237.13 617.715 2237.13 617.725 2237.13 617.735 cv
2237.13 617.735 li
2237.13 617.74 2237.13 617.744 2237.13 617.749 cv
2237.13 617.749 li
2237.13 617.764 2237.13 617.778 2237.13 617.793 cv
2237.13 617.793 li
2237.13 617.797 2237.13 617.801 2237.13 617.806 cv
2237.13 617.806 li
2237.13 617.817 2237.13 617.829 2237.13 617.84 cv
2237.13 617.84 li
2237.13 617.845 2237.13 617.849 2237.13 617.854 cv
2237.13 617.854 li
2237.13 617.869 2237.13 617.885 2237.13 617.9 cv
2237.13 617.9 li
2237.13 617.9 li
2237.13 618.681 2236.89 619.41 2236.46 620.025 cv
2235.69 621.147 2234.33 621.893 2232.78 621.893 cv
.611765 .34902 .439216 rgb
f
2233.82 614.304 mo
2233.97 614.058 li
2234.86 612.59 li
2235.38 611.737 li
2235.54 611.443 2235.7 611.152 2235.85 610.855 cv
2236.43 609.661 2236.9 608.375 2236.99 607.047 cv
2237.08 605.724 2236.73 604.396 2235.95 603.4 cv
2235.21 602.396 2234.12 601.658 2233.03 601.242 cv
2233.26 600.484 li
2233.9 600.756 2234.46 601.107 2234.99 601.53 cv
2235.52 601.954 2236 602.452 2236.39 603.035 cv
2236.78 603.612 2237.08 604.27 2237.24 604.968 cv
2237.4 605.664 2237.43 606.385 2237.35 607.084 cv
2237.2 608.489 2236.66 609.776 2236.01 610.954 cv
2235.84 611.247 2235.67 611.533 2235.49 611.818 cv
2234.94 612.648 li
2233.99 614.062 li
2233.82 614.304 li
f
2314.57 658.732 mo
2304.78 658.732 li
2300.04 632.867 li
2300.24 632.944 2300.45 632.987 2300.68 632.987 cv
2301.35 632.987 2302.18 632.635 2303.19 631.742 cv
2303.19 631.742 2304.78 629.879 2302.33 626.951 cv
2299.9 624.038 2303.66 623.891 2303.7 623.89 cv
2303.71 623.889 2303.72 623.889 2303.74 623.889 cv
2304.87 623.889 2305.46 625.372 2306.52 625.596 cv
2306.63 625.618 2306.73 625.629 2306.84 625.629 cv
2307.3 625.629 2307.76 625.42 2308.15 625.095 cv
2314.57 658.732 li
2294 658.732 mo
2286.51 658.732 li
2285.35 623.005 li
2285.45 622.986 2285.56 622.977 2285.66 622.977 cv
2287.12 622.977 2288.41 624.825 2289.19 626.054 cv
2290.38 627.917 2290.99 630.215 2290.21 632.409 cv
2288.76 636.514 2289.82 639.625 2291.63 639.625 cv
2292.11 639.625 2292.65 639.408 2293.2 638.934 cv
2293.2 638.934 li
2294 658.732 li
2272.39 658.732 mo
2267.32 658.732 li
2267.98 655.614 li
2274.53 624.602 li
2275.66 625.27 2277.19 625.559 2278.14 625.559 cv
2278.2 625.559 2278.25 625.558 2278.31 625.556 cv
2278.62 625.543 2278.93 625.509 2279.23 625.457 cv
2272.39 658.732 li
2292.97 633.261 mo
2292.34 631.854 2291.7 630.527 2291.8 629.613 cv
2291.96 628.199 2291.96 626.266 2292.64 625.112 cv
2292.97 633.261 li
.776471 .662745 .478431 rgb
f
2286.51 658.732 mo
2272.39 658.732 li
2279.23 625.457 li
2281.23 625.11 2283.05 623.977 2284.92 623.14 cv
2285.06 623.075 2285.21 623.031 2285.35 623.005 cv
2286.51 658.732 li
.658823 .572549 .447059 rgb
f
2304.78 658.732 mo
2294 658.732 li
2293.2 638.934 li
2294.77 637.583 2293.89 635.336 2292.97 633.261 cv
2292.64 625.112 li
2292.99 624.514 2293.51 624.125 2294.33 624.125 cv
2294.46 624.125 2294.59 624.135 2294.74 624.156 cv
2297.56 624.555 2299.28 626.817 2298.66 628.681 cv
2298.26 629.897 2298.64 632.303 2300.04 632.867 cv
2304.78 658.732 li
f
2291.63 639.625 mo
2289.82 639.625 2288.76 636.514 2290.21 632.409 cv
2290.99 630.215 2290.38 627.917 2289.19 626.054 cv
2288.41 624.825 2287.12 622.977 2285.66 622.977 cv
2285.56 622.977 2285.45 622.986 2285.35 623.005 cv
2285.21 623.031 2285.06 623.075 2284.92 623.14 cv
2283.05 623.977 2281.23 625.11 2279.23 625.457 cv
2278.93 625.509 2278.62 625.543 2278.31 625.556 cv
2278.25 625.558 2278.2 625.559 2278.14 625.559 cv
2277.19 625.559 2275.66 625.27 2274.53 624.602 cv
2273.71 624.118 2273.1 623.436 2273.06 622.522 cv
2273.02 621.38 2273.81 621.531 2274.29 620.962 cv
2274.3 620.951 2276.3 618.398 2280.75 618.398 cv
2281.47 618.398 2282.26 618.465 2283.11 618.621 cv
2285.07 618.98 2287.04 619.308 2289.02 619.569 cv
2289.63 620.8 2290.91 621.693 2292.43 621.863 cv
2292.44 621.864 2292.44 621.864 2292.45 621.865 cv
2292.46 621.866 2292.48 621.868 2292.49 621.869 cv
2292.5 621.87 2292.5 621.871 2292.51 621.871 cv
2292.52 621.872 2292.53 621.873 2292.54 621.874 cv
2292.54 621.874 2292.55 621.875 2292.56 621.876 cv
2292.57 621.877 2292.58 621.877 2292.59 621.878 cv
2292.6 621.879 2292.61 621.88 2292.62 621.881 cv
2292.63 621.881 2292.63 621.882 2292.64 621.882 cv
2292.66 621.883 2292.67 621.884 2292.68 621.885 cv
2292.69 621.885 2292.69 621.885 2292.7 621.885 cv
2292.71 621.886 2292.72 621.887 2292.73 621.887 cv
2292.74 621.888 2292.74 621.888 2292.75 621.888 cv
2292.76 621.889 2292.78 621.889 2292.79 621.89 cv
2292.8 621.89 2292.8 621.89 2292.8 621.89 cv
2292.82 621.891 2292.83 621.891 2292.85 621.892 cv
2292.85 621.892 2292.85 621.892 2292.86 621.892 cv
2292.87 621.892 2292.89 621.892 2292.9 621.893 cv
2292.91 621.893 2292.91 621.893 2292.92 621.893 cv
2292.93 621.893 2292.95 621.893 2292.97 621.893 cv
2294.52 621.893 2295.88 621.147 2296.65 620.025 cv
2297.17 619.938 2297.67 619.799 2298.15 619.591 cv
2299.49 619.015 2300.88 618.744 2302.29 618.744 cv
2302.98 618.744 2303.67 618.809 2304.36 618.935 cv
2306.57 619.336 2310.15 619.973 2309.23 623.425 cv
2309.06 624.044 2308.66 624.67 2308.15 625.095 cv
2307.76 625.42 2307.3 625.629 2306.84 625.629 cv
2306.73 625.629 2306.63 625.618 2306.52 625.596 cv
2305.46 625.372 2304.87 623.889 2303.74 623.889 cv
2303.72 623.889 2303.71 623.889 2303.7 623.89 cv
2303.66 623.891 2299.9 624.038 2302.33 626.951 cv
2304.78 629.879 2303.19 631.742 2303.19 631.742 cv
2302.18 632.635 2301.35 632.987 2300.68 632.987 cv
2300.45 632.987 2300.24 632.944 2300.04 632.867 cv
2298.64 632.303 2298.26 629.897 2298.66 628.681 cv
2299.28 626.817 2297.56 624.555 2294.74 624.156 cv
2294.59 624.135 2294.46 624.125 2294.33 624.125 cv
2293.51 624.125 2292.99 624.514 2292.64 625.112 cv
2291.96 626.266 2291.96 628.199 2291.8 629.613 cv
2291.7 630.527 2292.34 631.854 2292.97 633.261 cv
2293.89 635.336 2294.77 637.583 2293.2 638.934 cv
2293.2 638.934 li
2292.65 639.408 2292.11 639.625 2291.63 639.625 cv
.498039 .423529 .388235 rgb
f
2292.92 621.893 mo
2292.91 621.893 2292.91 621.893 2292.9 621.893 cv
2292.91 621.893 2292.91 621.893 2292.92 621.893 cv
2292.86 621.892 mo
2292.85 621.892 2292.85 621.892 2292.85 621.892 cv
2292.85 621.892 2292.85 621.892 2292.86 621.892 cv
2292.8 621.89 mo
2292.8 621.89 2292.8 621.89 2292.79 621.89 cv
2292.8 621.89 2292.8 621.89 2292.8 621.89 cv
2292.75 621.888 mo
2292.74 621.888 2292.74 621.888 2292.73 621.887 cv
2292.74 621.888 2292.74 621.888 2292.75 621.888 cv
2292.7 621.885 mo
2292.69 621.885 2292.69 621.885 2292.68 621.885 cv
2292.69 621.885 2292.69 621.885 2292.7 621.885 cv
2292.64 621.882 mo
2292.63 621.882 2292.63 621.881 2292.62 621.881 cv
2292.63 621.881 2292.63 621.882 2292.64 621.882 cv
2292.59 621.878 mo
2292.58 621.877 2292.57 621.877 2292.56 621.876 cv
2292.57 621.877 2292.58 621.877 2292.59 621.878 cv
2292.54 621.874 mo
2292.53 621.873 2292.52 621.872 2292.51 621.871 cv
2292.52 621.872 2292.53 621.873 2292.54 621.874 cv
2292.49 621.869 mo
2292.48 621.868 2292.46 621.866 2292.45 621.865 cv
2292.46 621.866 2292.48 621.868 2292.49 621.869 cv
2292.43 621.863 mo
2290.91 621.693 2289.63 620.8 2289.02 619.569 cv
2288.76 619.061 2288.62 618.496 2288.62 617.9 cv
2288.62 617.9 li
2288.62 615.694 2290.57 613.907 2292.97 613.907 cv
2293.38 613.907 2293.78 613.96 2294.15 614.058 cv
2294.01 614.304 li
2294.17 614.062 li
2295.87 614.511 2297.14 615.89 2297.3 617.562 cv
2297.16 616.122 2296.2 614.903 2294.85 614.304 cv
2295.3 614.935 2295.57 615.69 2295.57 616.503 cv
2295.57 618.708 2293.62 620.495 2291.22 620.495 cv
2290.54 620.495 2289.91 620.35 2289.34 620.098 cv
2290.02 621.051 2291.14 621.718 2292.43 621.863 cv
2297.31 617.854 mo
2297.31 617.849 2297.31 617.845 2297.31 617.84 cv
2297.31 617.845 2297.31 617.849 2297.31 617.854 cv
2297.31 617.806 mo
2297.31 617.801 2297.31 617.797 2297.31 617.793 cv
2297.31 617.797 2297.31 617.801 2297.31 617.806 cv
2297.31 617.749 mo
2297.31 617.744 2297.31 617.74 2297.31 617.735 cv
2297.31 617.74 2297.31 617.744 2297.31 617.749 cv
2297.31 617.705 mo
2297.31 617.698 2297.31 617.692 2297.3 617.685 cv
2297.31 617.692 2297.31 617.698 2297.31 617.705 cv
2297.3 617.658 mo
2297.3 617.648 2297.3 617.637 2297.3 617.626 cv
2297.3 617.637 2297.3 617.648 2297.3 617.658 cv
2297.3 617.602 mo
2297.3 617.593 2297.3 617.585 2297.3 617.576 cv
2297.3 617.585 2297.3 617.593 2297.3 617.602 cv
.878431 .34902 .454902 rgb
f
2292.97 621.893 mo
2292.95 621.893 2292.93 621.893 2292.92 621.893 cv
2292.91 621.893 2292.91 621.893 2292.9 621.893 cv
2292.89 621.892 2292.87 621.892 2292.86 621.892 cv
2292.85 621.892 2292.85 621.892 2292.85 621.892 cv
2292.83 621.891 2292.82 621.891 2292.8 621.89 cv
2292.8 621.89 2292.8 621.89 2292.79 621.89 cv
2292.78 621.889 2292.76 621.889 2292.75 621.888 cv
2292.74 621.888 2292.74 621.888 2292.73 621.887 cv
2292.72 621.887 2292.71 621.886 2292.7 621.885 cv
2292.69 621.885 2292.69 621.885 2292.68 621.885 cv
2292.67 621.884 2292.66 621.883 2292.64 621.882 cv
2292.63 621.882 2292.63 621.881 2292.62 621.881 cv
2292.61 621.88 2292.6 621.879 2292.59 621.878 cv
2292.58 621.877 2292.57 621.877 2292.56 621.876 cv
2292.55 621.875 2292.54 621.874 2292.54 621.874 cv
2292.53 621.873 2292.52 621.872 2292.51 621.871 cv
2292.5 621.871 2292.5 621.87 2292.49 621.869 cv
2292.48 621.868 2292.46 621.866 2292.45 621.865 cv
2292.44 621.864 2292.44 621.864 2292.43 621.863 cv
2291.14 621.718 2290.02 621.051 2289.34 620.098 cv
2289.91 620.35 2290.54 620.495 2291.22 620.495 cv
2293.62 620.495 2295.57 618.708 2295.57 616.503 cv
2295.57 615.69 2295.3 614.935 2294.85 614.304 cv
2296.2 614.903 2297.16 616.122 2297.3 617.562 cv
2297.3 617.562 li
2297.3 617.566 2297.3 617.571 2297.3 617.576 cv
2297.3 617.576 li
2297.3 617.585 2297.3 617.593 2297.3 617.602 cv
2297.3 617.602 li
2297.3 617.61 2297.3 617.618 2297.3 617.626 cv
2297.3 617.626 li
2297.3 617.637 2297.3 617.648 2297.3 617.658 cv
2297.3 617.658 li
2297.3 617.667 2297.3 617.676 2297.3 617.685 cv
2297.3 617.685 li
2297.31 617.692 2297.31 617.698 2297.31 617.705 cv
2297.31 617.705 li
2297.31 617.715 2297.31 617.725 2297.31 617.735 cv
2297.31 617.735 li
2297.31 617.74 2297.31 617.744 2297.31 617.749 cv
2297.31 617.749 li
2297.31 617.764 2297.31 617.778 2297.31 617.793 cv
2297.31 617.793 li
2297.31 617.797 2297.31 617.801 2297.31 617.806 cv
2297.31 617.806 li
2297.31 617.817 2297.31 617.829 2297.31 617.84 cv
2297.31 617.84 li
2297.31 617.845 2297.31 617.849 2297.31 617.854 cv
2297.31 617.854 li
2297.31 617.869 2297.31 617.885 2297.31 617.9 cv
2297.31 617.9 li
2297.31 617.9 li
2297.31 618.681 2297.07 619.41 2296.65 620.025 cv
2295.88 621.147 2294.52 621.893 2292.97 621.893 cv
.611765 .34902 .439216 rgb
f
2294.01 614.304 mo
2294.15 614.058 li
2295.04 612.59 li
2295.56 611.737 li
2295.72 611.443 2295.88 611.152 2296.03 610.855 cv
2296.62 609.661 2297.08 608.375 2297.17 607.047 cv
2297.26 605.724 2296.91 604.396 2296.14 603.4 cv
2295.39 602.396 2294.3 601.658 2293.21 601.242 cv
2293.44 600.484 li
2294.08 600.756 2294.64 601.107 2295.17 601.53 cv
2295.7 601.954 2296.18 602.452 2296.57 603.035 cv
2296.96 603.612 2297.26 604.27 2297.42 604.968 cv
2297.58 605.664 2297.61 606.385 2297.53 607.084 cv
2297.38 608.489 2296.83 609.776 2296.19 610.954 cv
2296.02 611.247 2295.85 611.533 2295.67 611.818 cv
2295.12 612.648 li
2294.17 614.062 li
2294.01 614.304 li
f
2387.1 658.732 mo
2377.31 658.732 li
2372.57 632.867 li
2372.76 632.944 2372.97 632.987 2373.21 632.987 cv
2373.87 632.987 2374.7 632.635 2375.71 631.742 cv
2375.71 631.742 2377.31 629.879 2374.86 626.951 cv
2372.42 624.038 2376.18 623.891 2376.22 623.89 cv
2376.24 623.889 2376.25 623.889 2376.26 623.889 cv
2377.4 623.889 2377.99 625.372 2379.05 625.596 cv
2379.15 625.618 2379.26 625.629 2379.36 625.629 cv
2379.83 625.629 2380.29 625.42 2380.68 625.095 cv
2387.1 658.732 li
2366.53 658.732 mo
2359.04 658.732 li
2357.87 623.005 li
2357.98 622.986 2358.08 622.977 2358.18 622.977 cv
2359.65 622.977 2360.93 624.825 2361.72 626.054 cv
2362.91 627.917 2363.51 630.215 2362.74 632.409 cv
2361.28 636.514 2362.34 639.625 2364.16 639.625 cv
2364.64 639.625 2365.17 639.408 2365.72 638.935 cv
2366.53 658.732 li
2344.92 658.732 mo
2339.84 658.732 li
2340.5 655.614 li
2347.06 624.602 li
2348.19 625.269 2349.71 625.559 2350.66 625.559 cv
2350.72 625.559 2350.78 625.558 2350.84 625.556 cv
2351.15 625.543 2351.45 625.509 2351.75 625.457 cv
2344.92 658.732 li
2365.49 633.26 mo
2364.87 631.854 2364.23 630.527 2364.33 629.613 cv
2364.48 628.199 2364.49 626.265 2365.16 625.111 cv
2365.49 633.26 li
.776471 .662745 .478431 rgb
f
2359.04 658.732 mo
2344.92 658.732 li
2351.75 625.457 li
2353.76 625.111 2355.58 623.977 2357.44 623.14 cv
2357.59 623.075 2357.73 623.031 2357.87 623.005 cv
2359.04 658.732 li
.658823 .572549 .447059 rgb
f
2377.31 658.732 mo
2366.53 658.732 li
2365.72 638.935 li
2365.72 638.934 2365.72 638.934 2365.73 638.934 cv
2367.3 637.583 2366.41 635.335 2365.49 633.26 cv
2365.16 625.111 li
2365.51 624.514 2366.04 624.125 2366.85 624.125 cv
2366.98 624.125 2367.12 624.135 2367.27 624.156 cv
2370.08 624.555 2371.81 626.817 2371.19 628.681 cv
2370.79 629.897 2371.17 632.304 2372.57 632.867 cv
2377.31 658.732 li
f
2364.16 639.625 mo
2362.34 639.625 2361.28 636.514 2362.74 632.409 cv
2363.51 630.215 2362.91 627.917 2361.72 626.054 cv
2360.93 624.825 2359.65 622.977 2358.18 622.977 cv
2358.08 622.977 2357.98 622.986 2357.87 623.005 cv
2357.73 623.031 2357.59 623.075 2357.44 623.14 cv
2355.58 623.977 2353.76 625.111 2351.75 625.457 cv
2351.45 625.509 2351.15 625.543 2350.84 625.556 cv
2350.78 625.558 2350.72 625.559 2350.66 625.559 cv
2349.71 625.559 2348.19 625.269 2347.06 624.602 cv
2346.24 624.118 2345.63 623.436 2345.59 622.522 cv
2345.54 621.38 2346.33 621.531 2346.82 620.962 cv
2346.83 620.951 2348.82 618.398 2353.27 618.398 cv
2354 618.398 2354.78 618.465 2355.64 618.621 cv
2357.6 618.98 2359.57 619.308 2361.54 619.569 cv
2362.16 620.8 2363.44 621.693 2364.96 621.863 cv
2364.96 621.864 2364.97 621.864 2364.97 621.865 cv
2364.99 621.867 2365 621.868 2365.02 621.87 cv
2365.03 621.87 2365.03 621.871 2365.04 621.871 cv
2365.04 621.872 2365.05 621.873 2365.06 621.874 cv
2365.07 621.874 2365.08 621.875 2365.09 621.876 cv
2365.09 621.877 2365.1 621.877 2365.11 621.878 cv
2365.13 621.879 2365.14 621.88 2365.15 621.881 cv
2365.15 621.881 2365.16 621.882 2365.17 621.882 cv
2365.18 621.883 2365.19 621.884 2365.21 621.885 cv
2365.21 621.885 2365.22 621.885 2365.22 621.885 cv
2365.23 621.886 2365.25 621.887 2365.26 621.887 cv
2365.26 621.888 2365.27 621.888 2365.27 621.888 cv
2365.29 621.889 2365.3 621.889 2365.32 621.89 cv
2365.32 621.89 2365.33 621.89 2365.33 621.89 cv
2365.34 621.891 2365.36 621.891 2365.37 621.892 cv
2365.38 621.892 2365.38 621.892 2365.38 621.892 cv
2365.4 621.892 2365.41 621.892 2365.43 621.893 cv
2365.43 621.893 2365.44 621.893 2365.44 621.893 cv
2365.46 621.893 2365.47 621.893 2365.49 621.893 cv
2367.04 621.893 2368.4 621.147 2369.17 620.025 cv
2369.69 619.938 2370.2 619.799 2370.68 619.591 cv
2372.02 619.015 2373.41 618.744 2374.81 618.744 cv
2375.5 618.744 2376.2 618.809 2376.89 618.935 cv
2379.1 619.336 2382.68 619.973 2381.75 623.425 cv
2381.59 624.044 2381.19 624.67 2380.68 625.095 cv
2380.29 625.42 2379.83 625.629 2379.36 625.629 cv
2379.26 625.629 2379.15 625.618 2379.05 625.596 cv
2377.99 625.372 2377.4 623.889 2376.26 623.889 cv
2376.25 623.889 2376.24 623.889 2376.22 623.89 cv
2376.18 623.891 2372.42 624.038 2374.86 626.951 cv
2377.31 629.879 2375.71 631.742 2375.71 631.742 cv
2374.7 632.635 2373.87 632.987 2373.21 632.987 cv
2372.97 632.987 2372.76 632.944 2372.57 632.867 cv
2371.17 632.304 2370.79 629.897 2371.19 628.681 cv
2371.81 626.817 2370.08 624.555 2367.27 624.156 cv
2367.12 624.135 2366.98 624.125 2366.85 624.125 cv
2366.04 624.125 2365.51 624.514 2365.16 625.111 cv
2364.49 626.265 2364.48 628.199 2364.33 629.613 cv
2364.23 630.527 2364.87 631.854 2365.49 633.26 cv
2366.41 635.335 2367.3 637.583 2365.73 638.934 cv
2365.72 638.934 2365.72 638.934 2365.72 638.935 cv
2365.17 639.408 2364.64 639.625 2364.16 639.625 cv
.498039 .423529 .388235 rgb
f
2365.44 621.893 mo
2365.44 621.893 2365.43 621.893 2365.43 621.893 cv
2365.43 621.893 2365.44 621.893 2365.44 621.893 cv
2365.38 621.892 mo
2365.38 621.892 2365.38 621.892 2365.37 621.892 cv
2365.38 621.892 2365.38 621.892 2365.38 621.892 cv
2365.33 621.89 mo
2365.33 621.89 2365.32 621.89 2365.32 621.89 cv
2365.32 621.89 2365.33 621.89 2365.33 621.89 cv
2365.27 621.888 mo
2365.27 621.888 2365.26 621.888 2365.26 621.887 cv
2365.26 621.888 2365.27 621.888 2365.27 621.888 cv
2365.22 621.885 mo
2365.22 621.885 2365.21 621.885 2365.21 621.885 cv
2365.21 621.885 2365.22 621.885 2365.22 621.885 cv
2365.17 621.882 mo
2365.16 621.882 2365.15 621.881 2365.15 621.881 cv
2365.15 621.881 2365.16 621.882 2365.17 621.882 cv
2365.11 621.878 mo
2365.1 621.877 2365.09 621.877 2365.09 621.876 cv
2365.09 621.877 2365.1 621.877 2365.11 621.878 cv
2365.06 621.874 mo
2365.05 621.873 2365.04 621.872 2365.04 621.871 cv
2365.04 621.872 2365.05 621.873 2365.06 621.874 cv
2365.02 621.87 mo
2365 621.868 2364.99 621.867 2364.97 621.865 cv
2364.99 621.867 2365 621.868 2365.02 621.87 cv
2364.96 621.863 mo
2363.44 621.693 2362.16 620.8 2361.54 619.569 cv
2361.29 619.061 2361.15 618.496 2361.15 617.9 cv
2361.15 617.9 li
2361.15 615.694 2363.09 613.907 2365.49 613.907 cv
2365.9 613.907 2366.3 613.96 2366.68 614.058 cv
2366.53 614.304 li
2366.69 614.062 li
2368.36 614.502 2369.62 615.834 2369.81 617.46 cv
2369.64 616.064 2368.69 614.888 2367.37 614.304 cv
2367.83 614.935 2368.09 615.69 2368.09 616.503 cv
2368.09 618.708 2366.15 620.495 2363.75 620.495 cv
2363.07 620.495 2362.43 620.35 2361.86 620.098 cv
2362.55 621.051 2363.67 621.719 2364.96 621.863 cv
2369.84 617.854 mo
2369.84 617.849 2369.84 617.845 2369.84 617.84 cv
2369.84 617.845 2369.84 617.849 2369.84 617.854 cv
2369.84 617.806 mo
2369.84 617.801 2369.84 617.797 2369.84 617.793 cv
2369.84 617.797 2369.84 617.801 2369.84 617.806 cv
2369.83 617.749 mo
2369.83 617.745 2369.83 617.74 2369.83 617.735 cv
2369.83 617.74 2369.83 617.744 2369.83 617.749 cv
2369.83 617.704 mo
2369.83 617.698 2369.83 617.692 2369.83 617.686 cv
2369.83 617.692 2369.83 617.698 2369.83 617.704 cv
2369.83 617.656 mo
2369.83 617.648 2369.83 617.64 2369.83 617.631 cv
2369.83 617.64 2369.83 617.648 2369.83 617.656 cv
2369.82 617.601 mo
2369.82 617.593 2369.82 617.585 2369.82 617.577 cv
2369.82 617.585 2369.82 617.593 2369.82 617.601 cv
2369.82 617.56 mo
2369.82 617.527 2369.81 617.494 2369.81 617.461 cv
2369.81 617.494 2369.82 617.527 2369.82 617.56 cv
.878431 .34902 .454902 rgb
f
2365.49 621.893 mo
2365.47 621.893 2365.46 621.893 2365.44 621.893 cv
2365.44 621.893 2365.43 621.893 2365.43 621.893 cv
2365.41 621.892 2365.4 621.892 2365.38 621.892 cv
2365.38 621.892 2365.38 621.892 2365.37 621.892 cv
2365.36 621.891 2365.34 621.891 2365.33 621.89 cv
2365.33 621.89 2365.32 621.89 2365.32 621.89 cv
2365.3 621.889 2365.29 621.889 2365.27 621.888 cv
2365.27 621.888 2365.26 621.888 2365.26 621.887 cv
2365.25 621.887 2365.23 621.886 2365.22 621.885 cv
2365.22 621.885 2365.21 621.885 2365.21 621.885 cv
2365.19 621.884 2365.18 621.883 2365.17 621.882 cv
2365.16 621.882 2365.15 621.881 2365.15 621.881 cv
2365.14 621.88 2365.13 621.879 2365.11 621.878 cv
2365.1 621.877 2365.09 621.877 2365.09 621.876 cv
2365.08 621.875 2365.07 621.874 2365.06 621.874 cv
2365.05 621.873 2365.04 621.872 2365.04 621.871 cv
2365.03 621.871 2365.03 621.87 2365.02 621.87 cv
2365 621.868 2364.99 621.867 2364.97 621.865 cv
2364.97 621.864 2364.96 621.864 2364.96 621.863 cv
2363.67 621.719 2362.55 621.051 2361.86 620.098 cv
2362.43 620.35 2363.07 620.495 2363.75 620.495 cv
2366.15 620.495 2368.09 618.708 2368.09 616.503 cv
2368.09 615.69 2367.83 614.935 2367.37 614.304 cv
2368.69 614.888 2369.64 616.064 2369.81 617.46 cv
2369.81 617.46 li
2369.81 617.46 2369.81 617.461 2369.81 617.461 cv
2369.81 617.461 li
2369.81 617.494 2369.82 617.527 2369.82 617.56 cv
2369.82 617.56 li
2369.82 617.566 2369.82 617.572 2369.82 617.577 cv
2369.82 617.577 li
2369.82 617.585 2369.82 617.593 2369.82 617.601 cv
2369.82 617.601 li
2369.83 617.611 2369.83 617.621 2369.83 617.631 cv
2369.83 617.631 li
2369.83 617.64 2369.83 617.648 2369.83 617.656 cv
2369.83 617.656 li
2369.83 617.666 2369.83 617.676 2369.83 617.686 cv
2369.83 617.686 li
2369.83 617.692 2369.83 617.698 2369.83 617.704 cv
2369.83 617.704 li
2369.83 617.715 2369.83 617.725 2369.83 617.735 cv
2369.83 617.735 li
2369.83 617.74 2369.83 617.745 2369.83 617.749 cv
2369.83 617.749 li
2369.83 617.764 2369.84 617.778 2369.84 617.793 cv
2369.84 617.793 li
2369.84 617.797 2369.84 617.801 2369.84 617.806 cv
2369.84 617.806 li
2369.84 617.817 2369.84 617.829 2369.84 617.84 cv
2369.84 617.84 li
2369.84 617.845 2369.84 617.849 2369.84 617.854 cv
2369.84 617.854 li
2369.84 617.869 2369.84 617.885 2369.84 617.9 cv
2369.84 617.9 li
2369.84 617.9 li
2369.84 618.681 2369.59 619.41 2369.17 620.025 cv
2368.4 621.147 2367.04 621.893 2365.49 621.893 cv
.611765 .34902 .439216 rgb
f
2366.53 614.304 mo
2366.68 614.058 li
2367.57 612.59 li
2368.09 611.737 li
2368.24 611.443 2368.41 611.152 2368.56 610.855 cv
2369.14 609.661 2369.61 608.375 2369.69 607.047 cv
2369.79 605.724 2369.43 604.396 2368.66 603.4 cv
2367.92 602.396 2366.83 601.658 2365.74 601.242 cv
2365.97 600.484 li
2366.61 600.756 2367.16 601.107 2367.7 601.53 cv
2368.23 601.954 2368.71 602.452 2369.1 603.035 cv
2369.49 603.612 2369.79 604.27 2369.95 604.968 cv
2370.11 605.664 2370.13 606.385 2370.06 607.084 cv
2369.9 608.489 2369.36 609.776 2368.72 610.954 cv
2368.55 611.247 2368.37 611.533 2368.2 611.818 cv
2367.64 612.648 li
2366.69 614.062 li
2366.53 614.304 li
f
2282.34 731.96 mo
2272.55 731.96 li
2267.94 706.783 li
2268.13 706.86 2268.35 706.903 2268.58 706.903 cv
2269.24 706.903 2270.07 706.55 2271.08 705.658 cv
2271.08 705.658 2272.68 703.795 2270.23 700.867 cv
2267.79 697.954 2271.55 697.807 2271.59 697.806 cv
2271.61 697.805 2271.62 697.805 2271.63 697.805 cv
2272.77 697.805 2273.36 699.288 2274.42 699.511 cv
2274.52 699.533 2274.63 699.544 2274.73 699.544 cv
2275.2 699.544 2275.66 699.335 2276.05 699.01 cv
2282.34 731.96 li
2261.87 731.96 mo
2254.39 731.96 li
2253.24 696.92 li
2253.35 696.901 2253.45 696.892 2253.55 696.892 cv
2255.02 696.892 2256.3 698.74 2257.09 699.969 cv
2258.28 701.833 2258.88 704.131 2258.11 706.324 cv
2256.65 710.429 2257.71 713.54 2259.53 713.54 cv
2260.01 713.54 2260.54 713.323 2261.09 712.849 cv
2261.87 731.96 li
2240.43 731.96 mo
2235.36 731.96 li
2235.87 729.53 li
2242.43 698.517 li
2243.56 699.185 2245.08 699.475 2246.03 699.475 cv
2246.09 699.475 2246.15 699.474 2246.21 699.472 cv
2246.52 699.459 2246.82 699.425 2247.12 699.373 cv
2240.43 731.96 li
2260.86 707.176 mo
2260.24 705.77 2259.6 704.443 2259.7 703.528 cv
2259.85 702.115 2259.86 700.181 2260.53 699.026 cv
2260.86 707.176 li
.776471 .662745 .478431 rgb
f
2254.39 731.96 mo
2240.43 731.96 li
2247.12 699.373 li
2249.13 699.026 2250.94 697.893 2252.81 697.055 cv
2252.96 696.991 2253.1 696.946 2253.24 696.92 cv
2254.39 731.96 li
.658823 .572549 .447059 rgb
f
2272.55 731.96 mo
2261.87 731.96 li
2261.09 712.849 li
2261.09 712.849 2261.09 712.849 2261.09 712.849 cv
2262.67 711.498 2261.78 709.251 2260.86 707.176 cv
2260.53 699.026 li
2260.88 698.429 2261.41 698.04 2262.22 698.04 cv
2262.35 698.04 2262.49 698.05 2262.64 698.071 cv
2265.45 698.47 2267.18 700.733 2266.56 702.597 cv
2266.16 703.813 2266.54 706.219 2267.94 706.783 cv
2272.55 731.96 li
f
2259.53 713.54 mo
2257.71 713.54 2256.65 710.429 2258.11 706.324 cv
2258.88 704.131 2258.28 701.833 2257.09 699.969 cv
2256.3 698.74 2255.02 696.892 2253.55 696.892 cv
2253.45 696.892 2253.35 696.901 2253.24 696.92 cv
2253.1 696.946 2252.96 696.991 2252.81 697.055 cv
2250.94 697.893 2249.13 699.026 2247.12 699.373 cv
2246.82 699.425 2246.52 699.459 2246.21 699.472 cv
2246.15 699.474 2246.09 699.475 2246.03 699.475 cv
2245.08 699.475 2243.56 699.185 2242.43 698.517 cv
2241.61 698.034 2241 697.352 2240.96 696.438 cv
2240.91 695.297 2241.7 695.447 2242.19 694.877 cv
2242.2 694.867 2244.2 692.313 2248.64 692.313 cv
2249.37 692.313 2250.15 692.381 2251 692.537 cv
2252.97 692.896 2254.94 693.224 2256.91 693.484 cv
2257.51 694.688 2258.75 695.568 2260.23 695.767 cv
2260.23 695.767 2260.23 695.767 2260.24 695.768 cv
2260.25 695.769 2260.26 695.771 2260.27 695.772 cv
2260.27 695.772 2260.28 695.773 2260.28 695.774 cv
2260.3 695.775 2260.31 695.777 2260.33 695.779 cv
2260.33 695.78 2260.34 695.78 2260.35 695.781 cv
2260.35 695.782 2260.36 695.783 2260.37 695.784 cv
2260.38 695.785 2260.4 695.786 2260.41 695.787 cv
2260.42 695.788 2260.42 695.789 2260.43 695.789 cv
2260.44 695.79 2260.45 695.791 2260.46 695.792 cv
2260.47 695.793 2260.47 695.793 2260.48 695.794 cv
2260.49 695.795 2260.51 695.796 2260.52 695.797 cv
2260.52 695.797 2260.53 695.797 2260.54 695.798 cv
2260.55 695.799 2260.57 695.8 2260.58 695.801 cv
2260.58 695.801 2260.59 695.801 2260.59 695.801 cv
2260.6 695.802 2260.62 695.803 2260.63 695.803 cv
2260.63 695.803 2260.64 695.804 2260.64 695.804 cv
2260.66 695.805 2260.68 695.805 2260.69 695.806 cv
2260.69 695.806 2260.7 695.806 2260.7 695.806 cv
2260.72 695.807 2260.73 695.807 2260.74 695.807 cv
2260.75 695.807 2260.75 695.808 2260.75 695.808 cv
2260.77 695.808 2260.78 695.808 2260.8 695.808 cv
2260.8 695.809 2260.81 695.809 2260.81 695.809 cv
2260.83 695.809 2260.85 695.809 2260.86 695.809 cv
2262.41 695.809 2263.77 695.063 2264.54 693.941 cv
2265.06 693.854 2265.57 693.715 2266.05 693.507 cv
2267.39 692.93 2268.78 692.659 2270.18 692.659 cv
2270.87 692.659 2271.57 692.724 2272.26 692.85 cv
2274.47 693.251 2278.05 693.889 2277.12 697.341 cv
2276.96 697.959 2276.56 698.584 2276.05 699.01 cv
2275.66 699.335 2275.2 699.544 2274.73 699.544 cv
2274.63 699.544 2274.52 699.533 2274.42 699.511 cv
2273.36 699.288 2272.77 697.805 2271.63 697.805 cv
2271.62 697.805 2271.61 697.805 2271.59 697.806 cv
2271.55 697.807 2267.79 697.954 2270.23 700.867 cv
2272.68 703.795 2271.08 705.658 2271.08 705.658 cv
2270.07 706.55 2269.24 706.903 2268.58 706.903 cv
2268.35 706.903 2268.13 706.86 2267.94 706.783 cv
2266.54 706.219 2266.16 703.813 2266.56 702.597 cv
2267.18 700.733 2265.45 698.47 2262.64 698.071 cv
2262.49 698.05 2262.35 698.04 2262.22 698.04 cv
2261.41 698.04 2260.88 698.429 2260.53 699.026 cv
2259.86 700.181 2259.85 702.115 2259.7 703.528 cv
2259.6 704.443 2260.24 705.77 2260.86 707.176 cv
2261.78 709.251 2262.67 711.498 2261.09 712.849 cv
2261.09 712.849 2261.09 712.849 2261.09 712.849 cv
2260.54 713.323 2260.01 713.54 2259.53 713.54 cv
.498039 .423529 .388235 rgb
f
2260.81 695.809 mo
2260.81 695.809 2260.8 695.809 2260.8 695.808 cv
2260.8 695.809 2260.81 695.809 2260.81 695.809 cv
2260.75 695.808 mo
2260.75 695.808 2260.75 695.807 2260.74 695.807 cv
2260.75 695.807 2260.75 695.808 2260.75 695.808 cv
2260.7 695.806 mo
2260.7 695.806 2260.69 695.806 2260.69 695.806 cv
2260.69 695.806 2260.7 695.806 2260.7 695.806 cv
2260.64 695.804 mo
2260.64 695.804 2260.63 695.803 2260.63 695.803 cv
2260.63 695.803 2260.64 695.804 2260.64 695.804 cv
2260.59 695.801 mo
2260.59 695.801 2260.58 695.801 2260.58 695.801 cv
2260.58 695.801 2260.59 695.801 2260.59 695.801 cv
2260.54 695.798 mo
2260.53 695.797 2260.52 695.797 2260.52 695.797 cv
2260.52 695.797 2260.53 695.797 2260.54 695.798 cv
2260.48 695.794 mo
2260.47 695.793 2260.47 695.793 2260.46 695.792 cv
2260.47 695.793 2260.47 695.793 2260.48 695.794 cv
2260.43 695.789 mo
2260.42 695.789 2260.42 695.788 2260.41 695.787 cv
2260.42 695.788 2260.42 695.789 2260.43 695.789 cv
2260.37 695.784 mo
2260.36 695.783 2260.35 695.782 2260.35 695.781 cv
2260.35 695.782 2260.36 695.783 2260.37 695.784 cv
2260.33 695.779 mo
2260.31 695.777 2260.3 695.775 2260.28 695.774 cv
2260.3 695.775 2260.31 695.777 2260.33 695.779 cv
2260.27 695.772 mo
2260.26 695.771 2260.25 695.769 2260.24 695.768 cv
2260.25 695.769 2260.26 695.77 2260.27 695.772 cv
2260.23 695.767 mo
2258.75 695.568 2257.51 694.688 2256.91 693.484 cv
2256.66 692.976 2256.51 692.411 2256.51 691.815 cv
2256.51 691.815 li
2256.51 689.611 2258.46 687.823 2260.86 687.823 cv
2261.27 687.823 2261.67 687.875 2262.05 687.974 cv
2261.9 688.22 li
2262.06 687.978 li
2263.77 688.427 2265.04 689.805 2265.19 691.477 cv
2265.06 690.037 2264.09 688.818 2262.74 688.22 cv
2263.2 688.851 2263.46 689.605 2263.46 690.419 cv
2263.46 692.624 2261.52 694.411 2259.11 694.411 cv
2258.44 694.411 2257.8 694.265 2257.23 694.014 cv
2257.9 694.941 2258.98 695.599 2260.23 695.767 cv
2265.21 691.769 mo
2265.21 691.765 2265.21 691.76 2265.21 691.756 cv
2265.21 691.76 2265.21 691.765 2265.21 691.769 cv
2265.21 691.721 mo
2265.21 691.716 2265.21 691.712 2265.21 691.708 cv
2265.21 691.712 2265.21 691.717 2265.21 691.721 cv
2265.2 691.664 mo
2265.2 691.66 2265.2 691.655 2265.2 691.65 cv
2265.2 691.655 2265.2 691.66 2265.2 691.664 cv
2265.2 691.62 mo
2265.2 691.614 2265.2 691.607 2265.2 691.601 cv
2265.2 691.607 2265.2 691.614 2265.2 691.62 cv
2265.2 691.573 mo
2265.2 691.563 2265.2 691.554 2265.2 691.544 cv
2265.2 691.554 2265.2 691.563 2265.2 691.573 cv
2265.2 691.517 mo
2265.2 691.509 2265.19 691.5 2265.19 691.492 cv
2265.19 691.5 2265.2 691.509 2265.2 691.517 cv
.878431 .34902 .454902 rgb
f
2260.86 695.809 mo
2260.85 695.809 2260.83 695.809 2260.81 695.809 cv
2260.81 695.809 2260.8 695.809 2260.8 695.808 cv
2260.78 695.808 2260.77 695.808 2260.75 695.808 cv
2260.75 695.808 2260.75 695.807 2260.74 695.807 cv
2260.73 695.807 2260.72 695.807 2260.7 695.806 cv
2260.7 695.806 2260.69 695.806 2260.69 695.806 cv
2260.68 695.805 2260.66 695.805 2260.64 695.804 cv
2260.64 695.804 2260.63 695.803 2260.63 695.803 cv
2260.62 695.803 2260.6 695.802 2260.59 695.801 cv
2260.59 695.801 2260.58 695.801 2260.58 695.801 cv
2260.57 695.8 2260.55 695.799 2260.54 695.798 cv
2260.53 695.797 2260.52 695.797 2260.52 695.797 cv
2260.51 695.796 2260.49 695.795 2260.48 695.794 cv
2260.47 695.793 2260.47 695.793 2260.46 695.792 cv
2260.45 695.791 2260.44 695.79 2260.43 695.789 cv
2260.42 695.789 2260.42 695.788 2260.41 695.787 cv
2260.4 695.786 2260.38 695.785 2260.37 695.784 cv
2260.36 695.783 2260.35 695.782 2260.35 695.781 cv
2260.34 695.78 2260.33 695.78 2260.33 695.779 cv
2260.31 695.777 2260.3 695.775 2260.28 695.774 cv
2260.28 695.773 2260.27 695.772 2260.27 695.772 cv
2260.26 695.77 2260.25 695.769 2260.24 695.768 cv
2260.23 695.767 2260.23 695.767 2260.23 695.767 cv
2258.98 695.599 2257.9 694.941 2257.23 694.014 cv
2257.8 694.265 2258.44 694.411 2259.11 694.411 cv
2261.52 694.411 2263.46 692.624 2263.46 690.419 cv
2263.46 689.605 2263.2 688.851 2262.74 688.22 cv
2264.09 688.818 2265.06 690.037 2265.19 691.477 cv
2265.19 691.477 li
2265.19 691.482 2265.19 691.486 2265.19 691.492 cv
2265.19 691.492 li
2265.19 691.5 2265.2 691.509 2265.2 691.517 cv
2265.2 691.517 li
2265.2 691.526 2265.2 691.535 2265.2 691.544 cv
2265.2 691.544 li
2265.2 691.554 2265.2 691.563 2265.2 691.573 cv
2265.2 691.573 li
2265.2 691.582 2265.2 691.591 2265.2 691.601 cv
2265.2 691.601 li
2265.2 691.607 2265.2 691.614 2265.2 691.62 cv
2265.2 691.62 li
2265.2 691.63 2265.2 691.64 2265.2 691.65 cv
2265.2 691.65 li
2265.2 691.655 2265.2 691.66 2265.2 691.664 cv
2265.2 691.664 li
2265.21 691.679 2265.21 691.694 2265.21 691.708 cv
2265.21 691.708 li
2265.21 691.712 2265.21 691.716 2265.21 691.721 cv
2265.21 691.721 li
2265.21 691.732 2265.21 691.744 2265.21 691.756 cv
2265.21 691.756 li
2265.21 691.76 2265.21 691.765 2265.21 691.769 cv
2265.21 691.769 li
2265.21 691.784 2265.21 691.8 2265.21 691.815 cv
2265.21 691.815 li
2265.21 691.815 li
2265.21 692.596 2264.96 693.325 2264.54 693.941 cv
2263.77 695.063 2262.41 695.809 2260.86 695.809 cv
.611765 .34902 .439216 rgb
f
2261.9 688.22 mo
2262.05 687.974 li
2262.94 686.506 li
2263.46 685.652 li
2263.61 685.359 2263.78 685.068 2263.93 684.771 cv
2264.51 683.577 2264.98 682.291 2265.06 680.963 cv
2265.16 679.641 2264.8 678.312 2264.03 677.316 cv
2263.29 676.312 2262.2 675.573 2261.11 675.157 cv
2261.34 674.4 li
2261.98 674.672 2262.53 675.024 2263.07 675.445 cv
2263.6 675.869 2264.08 676.368 2264.47 676.951 cv
2264.86 677.528 2265.16 678.186 2265.32 678.884 cv
2265.48 679.579 2265.5 680.301 2265.43 681 cv
2265.27 682.405 2264.73 683.692 2264.09 684.87 cv
2263.92 685.163 2263.74 685.448 2263.57 685.734 cv
2263.01 686.564 li
2262.06 687.978 li
2261.9 688.22 li
f
2397.45 665.068 mo
2235.77 665.068 li
2184.51 665.068 li
2173.33 665.068 li
2173.33 658.732 li
2184.51 658.732 li
2229.16 658.732 li
2237.84 658.732 li
2397.45 658.732 li
2397.45 665.068 li
.694118 .756863 .952941 rgb
f
2413.61 740.019 mo
2211.33 740.019 li
2184.51 740.019 li
2149.08 740.019 li
2149.08 731.96 li
2184.51 731.96 li
2213.96 731.96 li
2235.36 731.96 li
2240.43 731.96 li
2254.39 731.96 li
2261.87 731.96 li
2272.55 731.96 li
2282.34 731.96 li
2413.61 731.96 li
2413.61 740.019 li
f
2090.8 828.655 mo
2100.43 794.77 2140.56 661.771 2158.92 619.719 cv
2179.49 572.609 2223.41 538.536 2268.72 523.75 cv
2305.28 510.695 2345.35 514.625 2365.64 514.668 cv
2416.49 515.96 2467.33 517.879 2518.18 521.55 cv
2392.83 530.599 2344.91 525.908 2303.52 532.377 cv
2259.33 539.283 2218.18 563.565 2190.89 599.025 cv
2161.57 637.132 2159.92 673.989 2090.8 828.655 cv
cp
1 1 1 rgb
f
2204.62 235.539 mo
2183.14 224.907 2169.17 210.548 2142.06 210.548 cv
2143.3 210.548 li
2143.3 204.246 2138.19 199.137 2131.88 199.137 cv
2106.76 199.137 li
2105.42 177.75 2088.18 160.672 2066.73 159.571 cv
2066.73 134.535 li
2062.32 134.535 li
2062.32 159.571 li
2040.87 160.672 2023.64 177.749 2022.29 199.137 cv
1997.17 199.137 li
1990.87 199.137 1985.76 204.246 1985.76 210.548 cv
1989.24 210.548 li
1977.9 210.548 1966.72 213.309 1956.69 218.592 cv
1924.54 235.511 li
1924.04 235.642 1923.79 235.773 1923.79 235.907 cv
1923.79 240.933 2205.26 240.935 2205.26 235.907 cv
2205.26 235.783 2205.05 235.66 2204.62 235.539 cv
cp
.996078 .282353 .301961 rgb
f
1690.17 252.071 mo
1668.69 241.44 1654.73 227.081 1627.61 227.081 cv
1628.85 227.081 li
1628.85 220.778 1623.74 215.669 1617.44 215.669 cv
1592.31 215.669 li
1590.97 194.282 1573.74 177.205 1552.28 176.104 cv
1552.28 134.535 li
1547.87 134.535 li
1547.87 176.103 li
1526.42 177.204 1509.19 194.282 1507.84 215.669 cv
1482.72 215.669 li
1476.42 215.669 1471.31 220.778 1471.31 227.081 cv
1474.79 227.081 li
1463.45 227.081 1452.27 229.841 1442.24 235.124 cv
1410.09 252.044 li
1409.59 252.174 1409.34 252.306 1409.34 252.439 cv
1409.34 257.465 1690.82 257.468 1690.82 252.439 cv
1690.82 252.315 1690.6 252.192 1690.17 252.071 cv
cp
f
804.587 911.316 mo
800.193 911.316 796.608 907.802 796.608 903.478 cv
796.608 899.155 800.193 895.639 804.587 895.639 cv
808.664 895.639 li
808.664 907.204 li
808.664 908.61 808.805 909.981 809.015 911.316 cv
804.587 911.316 li
871.054 885.551 mo
810.175 885.551 li
809.367 885.551 808.664 886.22 808.664 887.063 cv
808.664 891.141 li
804.587 891.141 li
797.662 891.141 792.039 896.695 792.039 903.478 cv
792.039 910.262 797.662 915.78 804.587 915.78 cv
810.141 915.78 li
813.796 926.22 823.813 933.707 835.694 933.707 cv
845.571 933.707 li
848.383 933.707 851.055 933.284 853.585 932.512 cv
864.587 929.172 872.566 919.119 872.566 907.204 cv
872.566 887.063 li
872.566 886.22 871.897 885.551 871.054 885.551 cv
.976471 .929412 .92549 rgb
f
845.571 933.707 mo
835.694 933.707 li
823.813 933.707 813.796 926.22 810.141 915.78 cv
804.587 915.78 li
797.662 915.78 792.039 910.262 792.039 903.478 cv
792.039 896.695 797.662 891.141 804.587 891.141 cv
808.664 891.141 li
808.664 887.063 li
808.664 886.22 809.367 885.551 810.175 885.551 cv
820.51 885.551 li
823.216 900.104 831.476 918.206 853.585 932.512 cv
851.055 933.284 848.383 933.707 845.571 933.707 cv
796.608 903.478 mo
796.608 903.478 li
796.608 907.802 800.193 911.316 804.587 911.316 cv
809.015 911.316 li
809.015 911.316 li
808.805 909.981 808.664 908.61 808.664 907.204 cv
808.664 895.639 li
804.587 895.639 li
800.193 895.639 796.608 899.155 796.608 903.478 cv
796.608 903.478 li
.741176 .701961 .694118 rgb
f
969.893 911.316 mo
965.465 911.316 li
965.676 909.981 965.816 908.61 965.816 907.204 cv
965.816 895.639 li
969.893 895.639 li
974.287 895.639 977.872 899.155 977.872 903.478 cv
977.872 907.802 974.287 911.316 969.893 911.316 cv
969.893 891.141 mo
965.816 891.141 li
965.816 887.063 li
965.816 886.22 965.113 885.551 964.305 885.551 cv
903.427 885.551 li
902.583 885.551 901.915 886.22 901.915 887.063 cv
901.915 907.204 li
901.915 921.861 914.007 933.707 928.909 933.707 cv
938.821 933.707 li
941.633 933.707 944.34 933.284 946.871 932.476 cv
955.061 929.98 961.562 923.759 964.34 915.78 cv
969.893 915.78 li
976.818 915.78 982.441 910.262 982.441 903.478 cv
982.441 896.695 976.818 891.141 969.893 891.141 cv
.976471 .929412 .92549 rgb
f
938.821 933.707 mo
928.909 933.707 li
914.007 933.707 901.915 921.861 901.915 907.204 cv
901.915 887.063 li
901.915 886.22 902.583 885.551 903.427 885.551 cv
911.51 885.551 li
912.249 902.037 918.751 924.462 946.871 932.476 cv
944.34 933.284 941.633 933.707 938.821 933.707 cv
.741176 .701961 .694118 rgb
f
724.227 858.493 mo
724.227 858.493 764.746 966.979 782.574 966.979 cv
800.402 966.979 911.152 945.73 911.152 945.73 cv
967.878 944.612 li
967.878 944.612 933.302 959.71 911.152 969.775 cv
889.002 979.841 813.442 1043.58 778.792 1047.51 cv
744.142 1051.43 683.709 964.183 683.709 964.183 cv
724.227 858.493 li
1 .407843 .168627 rgb
f
776.472 1047.63 mo
771.411 1047.63 765.867 1045.88 760.093 1042.89 cv
760.093 1042.89 li
765.87 1045.88 771.409 1047.64 776.472 1047.63 cv
776.472 1047.63 li
776.473 1047.63 mo
777.256 1047.63 778.033 1047.59 778.792 1047.51 cv
813.442 1043.58 889.002 979.841 911.152 969.775 cv
922.49 964.624 937.082 958.153 948.627 953.064 cv
948.627 953.064 li
937.082 958.153 922.49 964.624 911.152 969.775 cv
889.002 979.841 813.442 1043.58 778.792 1047.51 cv
778.031 1047.59 777.258 1047.63 776.473 1047.63 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~oi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N
<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W
6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;Eoi+9N<'p7W6M4;E
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~oi+9N<C?FZ6hOMKp/j`V=@Mpe7eU%Up01&\>tF]r8G?F^pL$Se@8$?'9D;pipgd+oAPMr2:AAErph3Iu
BMeJ<;>G!)q.in(Cf:(H;u(<0q/9:0EE2jT<r-i;qK,g8FBJB^=Sm;Fqfc6@GZsuj>Pi_Nqg2WHI9lc!
?Mo7Zr.&/PJ7/;+@/PUbrI\SXKOXn6A,V-mrJ+q^Lh6RBAc@R"rekFgN+i3MB`=$+s,UppOD=fXC]BQ6
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o^qeJo^qeJo^qeJo^qeJo^qeKp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Op@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Sp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4IXq"XXZq"XXZq"XXZq"XXZq"XXZq"X[\q>'j^q>'j^
q>'j^q>'j^q>'j^q>'m`qYL'bqYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qu$Bir;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVlfqrr<#us8W-!s8W-!
~>
<~;c?Un;c?Uo<)cgr<)cgs<E<.%='&I)='&I*=BSd1>$>*5>$>*6>?kE=?!U`A?!U`B?=.&I?smAM?smAN
@:E\U@q0"ZA7T4]A7T4^AS#FbAnPahB4kmkBP;*oC2.KuC2.O"CMRa&D/F-,D/F0.DJjB2E,]c8E,]f:
EH-#>F)uDDF)uGFFEDYJG'8%PG'8(RGB\:VH$O[\H$O^^H?spbI!g<hI!pEkI=?WpIt)rtIt3'"J:W9&
JV&K*JqJ].K7no2KS>,6Knb>:L51P>LPUbBLl$tFM2I1JMMmCNMi<URN/`gVNK0$ZNfT6^O-#HbOHGZf
~>
<~5s[e&5s[e'6:+"*6:+"+6UO4.6UO4/6psF377BX677BX77Rfj;7n6'>7n6'?84Z9B84Z9C8P2TI8kM]K
91qoO9MA,R9MA,S9he>V9he>W:/4S\:JXe`:f'tb:f("d;,L1f;,L4h;GpCj;GpFl<)cgr<)cjt<E3%!
<E3(#<`W:'='&I)='&L+=BJ^/=]nm1=]np3>$>*5>$>-7>[1N=>[1Q??!^iD?=$rE?=.&H?XI/I?XR8L
?t!JP@:<SQ@:E\T@UinX@q0"Y@q9+\A7T4]A7]=aAnGXeAnPahB4kjiB4tslBPD0pBk_9qBkhBtC27U#
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
776.472 1047.63 mo
771.409 1047.64 765.87 1045.88 760.093 1042.89 cv
814.506 1013.06 878.323 971.291 901.843 953.777 cv
902.258 953.535 902.665 953.297 903.064 953.064 cv
948.627 953.064 li
937.082 958.153 922.49 964.624 911.152 969.775 cv
889.002 979.841 813.442 1043.58 778.792 1047.51 cv
778.033 1047.59 777.256 1047.63 776.473 1047.63 cv
776.472 1047.63 li
736.322 984.365 mo
736.477 982.6 736.635 980.842 736.796 979.091 cv
738.333 980.554 739.88 981.985 741.427 983.372 cv
739.724 983.707 738.015 984.039 736.322 984.365 cv
1 .243137 .0745098 rgb
f
534.06 1630.2 mo
534.06 1630.2 463.821 1696.85 465.146 1706.69 cv
466.471 1716.54 523.186 1773.19 531.013 1780.01 cv
538.839 1786.83 520.209 1721.34 519.656 1717.24 cv
519.104 1713.14 571.215 1670.16 571.215 1670.16 cv
534.06 1630.2 li
cp
1 .486275 .309804 rgb
f
776.116 1684.16 mo
776.116 1684.16 821.434 1767.55 830.721 1766.3 cv
840.007 1765.05 931.568 1701.63 931.568 1701.63 cv
931.568 1701.63 894.739 1697.55 860.942 1711.87 cv
827.144 1726.18 814.608 1660.95 814.608 1660.95 cv
776.116 1684.16 li
cp
f
674.541 1098.58 mo
693.65 1139.33 li
722.998 1220.59 li
722.998 1220.59 794.289 1425.12 755.092 1485.14 cv
715.895 1545.16 554.954 1698.02 554.954 1698.02 cv
500.734 1639.15 li
500.734 1639.15 656.281 1464.25 674.677 1406.39 cv
693.073 1348.53 575.253 1164.76 575.253 1164.76 cv
674.541 1098.58 li
0 .0196078 .305882 rgb
f
559.323 1298.4 mo
623.872 1428.97 755.501 1691.23 779.766 1709.59 cv
843.049 1676.33 li
843.049 1676.33 665.797 1253.57 685.939 1232.72 cv
707.598 1210.3 722.999 1220.59 722.999 1220.59 cv
689.629 1153.58 li
598.89 1088.89 li
564.833 1146.66 li
537.629 1192.81 535.53 1250.27 559.323 1298.4 cv
cp
0 .00392157 .498039 rgb
f
638.868 751.126 mo
638.868 751.126 579.441 746.652 552.429 793.625 cv
552.429 793.625 498.404 1159.75 523.256 1197.57 cv
548.107 1235.4 740.338 1205.5 747.998 1197.57 cv
751.416 1194.04 732.016 1134.34 732.229 1063.6 cv
732.492 975.828 751.588 872.479 747.998 855.138 cv
741.515 823.822 728.549 783.56 705.859 783.56 cv
683.168 783.56 638.868 751.126 638.868 751.126 cv
.258824 .486275 .996078 rgb
f
706.84 791.437 mo
710.792 791.703 714.468 789.897 716.73 786.889 cv
713.384 784.753 709.766 783.56 705.859 783.56 cv
683.168 783.56 638.868 751.125 638.868 751.125 cv
638.868 751.125 638.744 751.116 638.506 751.103 cv
637.372 754.796 638.173 758.9 640.779 761.96 cv
649.262 771.921 669.059 788.889 706.84 791.437 cv
cp
0 .0352941 .580392 rgb
f
732.228 1064.06 mo
732.228 1064.03 732.228 1064.01 732.228 1063.98 cv
732.228 1064.01 732.228 1064.03 732.228 1064.06 cv
732.228 1063.85 mo
732.228 1063.77 732.229 1063.69 732.229 1063.6 cv
732.235 1061.56 732.251 1059.51 732.277 1057.45 cv
732.278 1057.45 li
732.251 1059.51 732.235 1061.56 732.229 1063.6 cv
732.229 1063.69 732.228 1063.77 732.228 1063.85 cv
level3{
gsave
clp
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~V/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2Kp
CmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7
Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMbV/2KpCmUu7Q_eMb
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~V/2KpDOI>>R\atnVK/6)F.]=OTVcn,VKS`3Gbq<`VPea=VgPJAIB08pXJ^TOVh)%LK!D5,ZDWA_VhVUW
LUX1;\YtCsW/SBfN4l0M^Sm4/W0"lqOi+/^`Mo*AWKtW)QH?+nbGgoRWLD,3SBn1*dA`_cWLq\?U"-0;
f;bY"WhnFLVVJ2Lh5[I3Wi=pVX5^.\j/T6CWitQbYir-ml)V/VX0h5o[I1*)n#NqfXL[o']C`2;orPk$
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.027027 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.22217e-005 508.374 -508.374 -2.22217e-005 1475 892.338 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Unjf^Unjf^Unjf^Unjf^Unjf_V5:#bV5:#bV5:#bV5:#bV5:#bV5:#cVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^8hVl-GjVl-GjVl-GjVl-GjVl-GjVl-JlW2QYnW2QYn
W2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2Q\pWMukrWMukrWMukrWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMukrWMukrWN)tuWiE)!WiE)!WiE)!WiE)!WiE)!WiN2$X/i;%X/i;%X/i;%
~>
<~CMR^$CMR^%Ci+$,DJj?1Df9Q5E,fl<EcQ2AF)uDEFEM_KF`hhMG'A.TG^+IYH$O[]H@(!dI!g<iI=6Nm
IXcitJ:N0$JUrB(JqJ].K7ef0KS>/8L5(J=LPL\AM2@+IMi3LOMi3OQNK&sYNfK0]O,oBaOH>TeP*2#m
PEV5qQ'IW"Q'IZ$Q^=),R$a;0R@0M4S"#q<S=H.@SXl@DSt;RHTV/!PTq\9VUSO]]UnsoaV5C,eVPg>j
W2QYnW2ZbrWiN2$X/rD(XKAV-Y-5%4YHY78Yd(I=ZEpmDZa@*H['d<M[^NWQ[^W`U\@K/]]">Sd]=beh
~>
<~QBmi&QBmi'Q^F/.R@0J3R[]e:S=H+?SXuFFT:_aKTV8'RU8"BWUSO]^V5:#cVPg>jW2QYoWN)u!X/i;&
XKAV-Y-+q2YHY79Z*CR>ZEpmE['[6K[^NZS\@B)[\[f;_]=Y_g]Y(qk^:q@s^V@S"_84"*_SX4.`5KX6
`Poj:a2c9BaN2KFb0%oNbKJ,Rc-=PZcHab^d*U1fdF$Cje'lgreC<%"f%8O+f\+s2g"P07gYCT>gtgfC
hV[5Jhr*GOiSrkVioB([jQ5LbjlY^gkNM-nkiq?slKdd%lg4!*mI'E1mdKW6nF?&=nac8BoCV\Io_%nN
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
683.713 1099.3 mo
649.675 1099.3 591.209 1062.71 556.551 1001.27 cv
559.468 999.357 562.151 997.634 564.642 996.061 cv
599.674 1046.54 649.914 1076.03 680.466 1076.03 cv
690.701 1076.03 709.571 1068.67 732.277 1057.45 cv
732.251 1059.51 732.235 1061.56 732.229 1063.6 cv
732.229 1063.69 732.228 1063.77 732.228 1063.85 cv
732.228 1063.89 732.228 1063.94 732.228 1063.98 cv
732.228 1064.01 732.228 1064.03 732.228 1064.06 cv
732.216 1070.19 732.352 1076.23 732.606 1082.16 cv
711.204 1092.57 693.505 1099.3 683.713 1099.3 cv
.172549 .376471 .996078 rgb
f
708.857 646.896 mo
638.868 751.126 li
638.868 751.126 657.679 784.775 713.732 784.775 cv
729.807 714.218 li
708.857 646.896 li
1 .407843 .168627 rgb
f
721.741 749.621 mo
714.068 740.519 702.703 725.702 702.703 717.767 cv
702.703 664.43 li
702.703 662.67 702.095 660.51 701.275 658.395 cv
708.857 646.896 li
729.807 714.218 li
721.741 749.621 li
1 .243137 .0745098 rgb
f
722.562 597.522 mo
722.562 597.522 707.598 638.718 707.598 658.67 cv
707.598 678.623 728.586 735.944 752.078 727.838 cv
775.571 719.733 784.607 648.651 784.607 615.604 cv
784.607 582.558 737.621 575.699 722.562 597.522 cv
cp
1 .568627 .423529 rgb
f
834.882 598.483 mo
821.629 567.93 792.762 565.765 766.859 562.647 cv
740.957 559.529 723.767 554.932 723.767 554.932 cv
723.767 554.932 705.695 564.476 705.695 579.44 cv
705.695 594.405 687.624 585.052 684.01 603.134 cv
680.396 621.216 699.052 661.766 699.052 661.766 cv
699.052 661.766 702.959 657.293 708.723 650.991 cv
706.791 663.162 701.59 700.85 708.104 718.486 cv
715.936 739.686 759.307 761.509 772.047 754.65 cv
784.786 747.791 772.047 699.371 772.047 699.371 cv
772.047 699.371 752.422 700.671 741.923 689.804 cv
734.516 682.136 727.776 657.276 724.449 643.3 cv
723.411 638.938 724.427 634.365 727.069 630.8 cv
734.754 620.43 737.432 610.928 742.44 610.928 cv
748.464 610.928 764.729 613.11 784.607 633.687 cv
804.485 654.263 848.134 629.035 834.882 598.483 cv
cp
0 .0156863 .266667 rgb
f
715.936 634.568 mo
715.936 634.568 716.199 633.344 716.284 631.605 cv
716.538 626.389 715.183 616.54 700.274 621.216 cv
680.396 627.452 700.768 662.138 707.204 657.87 cv
708.857 656.773 715.936 634.568 715.936 634.568 cv
cp
1 .486275 .309804 rgb
f
851.725 945.171 mo
847.133 949.924 851.185 950.763 830.656 960.828 cv
810.126 970.893 680.466 997.736 664.26 993.262 cv
655.242 990.773 641.973 956.521 632.714 920.94 cv
603.996 942.595 584.015 957.897 553.305 977.99 cv
587.963 1039.44 646.43 1076.03 680.466 1076.03 cv
722.606 1076.03 911.152 951.322 911.152 945.73 cv
911.152 940.138 856.317 940.417 851.725 945.171 cv
1 .568627 .423529 rgb
f
560.1 989.264 mo
559.253 987.945 558.416 986.613 557.591 985.269 cv
558.415 986.611 559.255 987.947 560.101 989.263 cv
560.1 989.264 560.1 989.264 560.1 989.264 cv
557.574 985.242 mo
557.51 985.137 557.445 985.032 557.381 984.926 cv
557.446 985.032 557.51 985.136 557.574 985.242 cv
557.358 984.889 mo
557.296 984.787 557.234 984.685 557.171 984.582 cv
557.233 984.684 557.296 984.788 557.358 984.889 cv
557.144 984.537 mo
557.082 984.435 557.02 984.334 556.958 984.232 cv
557.02 984.334 557.082 984.435 557.144 984.537 cv
556.931 984.188 mo
556.869 984.085 556.806 983.982 556.744 983.878 cv
556.808 983.984 556.867 984.082 556.931 984.188 cv
556.72 983.839 mo
556.656 983.732 556.592 983.626 556.528 983.519 cv
556.591 983.626 556.656 983.733 556.72 983.839 cv
556.511 983.492 mo
556.446 983.384 556.381 983.276 556.316 983.168 cv
556.38 983.274 556.447 983.386 556.511 983.492 cv
556.3 983.14 mo
556.235 983.031 556.17 982.923 556.105 982.814 cv
556.17 982.924 556.234 983.03 556.3 983.14 cv
556.09 982.789 mo
556.023 982.676 555.955 982.563 555.888 982.45 cv
555.956 982.564 556.022 982.676 556.09 982.789 cv
555.884 982.444 mo
555.396 981.623 554.913 980.797 554.433 979.967 cv
554.914 980.799 555.395 981.62 555.884 982.444 cv
554.428 979.958 mo
554.365 979.848 554.302 979.738 554.238 979.629 cv
554.303 979.74 554.364 979.846 554.428 979.958 cv
554.211 979.581 mo
554.156 979.486 554.102 979.391 554.047 979.296 cv
554.103 979.393 554.155 979.484 554.211 979.581 cv
553.991 979.198 mo
553.947 979.12 553.903 979.043 553.859 978.965 cv
553.903 979.044 553.946 979.119 553.991 979.198 cv
553.766 978.802 mo
553.735 978.748 553.703 978.693 553.672 978.639 cv
553.702 978.691 553.736 978.75 553.766 978.802 cv
553.538 978.401 mo
553.521 978.372 553.504 978.342 553.488 978.313 cv
553.505 978.343 553.521 978.371 553.538 978.401 cv
639.049 943.052 mo
636.81 935.932 634.672 928.467 632.714 920.94 cv
634.673 928.466 636.811 935.933 639.05 943.052 cv
639.05 943.052 li
.258824 .290196 .435294 rgb
f
560.101 989.263 mo
559.255 987.947 558.415 986.611 557.591 985.269 cv
557.585 985.26 557.58 985.25 557.574 985.242 cv
557.51 985.136 557.446 985.032 557.381 984.926 cv
557.374 984.914 557.366 984.902 557.358 984.889 cv
557.296 984.788 557.233 984.684 557.171 984.582 cv
557.162 984.567 557.153 984.552 557.144 984.537 cv
557.082 984.435 557.02 984.334 556.958 984.232 cv
556.949 984.217 556.94 984.203 556.931 984.188 cv
556.867 984.082 556.808 983.984 556.744 983.878 cv
556.736 983.865 556.728 983.852 556.72 983.839 cv
556.656 983.733 556.591 983.626 556.528 983.519 cv
556.522 983.511 556.517 983.501 556.511 983.492 cv
556.447 983.386 556.38 983.274 556.316 983.168 cv
556.311 983.159 556.305 983.149 556.3 983.14 cv
556.234 983.03 556.17 982.924 556.105 982.814 cv
556.1 982.806 556.095 982.797 556.09 982.789 cv
556.022 982.676 555.956 982.564 555.888 982.45 cv
555.887 982.448 555.885 982.446 555.884 982.444 cv
555.395 981.62 554.914 980.799 554.433 979.967 cv
554.432 979.964 554.43 979.961 554.428 979.958 cv
554.364 979.846 554.303 979.74 554.238 979.629 cv
554.229 979.613 554.22 979.597 554.211 979.581 cv
554.155 979.484 554.103 979.393 554.047 979.296 cv
554.029 979.263 554.01 979.23 553.991 979.198 cv
553.946 979.119 553.903 979.044 553.859 978.965 cv
553.828 978.911 553.797 978.857 553.766 978.802 cv
553.736 978.75 553.702 978.691 553.672 978.639 cv
553.627 978.56 553.583 978.48 553.538 978.401 cv
553.521 978.371 553.505 978.343 553.488 978.313 cv
553.427 978.206 553.366 978.098 553.305 977.99 cv
553.305 977.99 li
584.015 957.897 603.996 942.595 632.714 920.94 cv
632.714 920.94 li
634.672 928.467 636.81 935.932 639.049 943.052 cv
615.605 946.552 575.912 976.635 560.1 989.264 cv
1 .341176 .184314 rgb
f
1024.64 953.064 mo
803.79 953.064 li
795.255 953.064 788.336 946.145 788.336 937.611 cv
788.336 937.341 li
1040.09 937.341 li
1040.09 937.611 li
1040.09 946.145 1033.17 953.064 1024.64 953.064 cv
.0901961 .180392 .662745 rgb
f
1039.11 942.904 mo
789.316 942.904 li
788.684 941.175 788.336 939.3 788.336 937.341 cv
1040.09 937.341 li
1040.09 939.3 1039.74 941.175 1039.11 942.904 cv
.00784314 .0313725 .439216 rgb
f
1051.62 937.341 mo
779.332 937.341 li
779.332 930.072 li
1051.62 930.072 li
1051.62 937.341 li
cp
.258824 .486275 .996078 rgb
f
614.557 840.599 mo
597.81 785.796 591.919 764.767 571.337 767.342 cv
529.528 772.575 507.048 840.599 525.417 935.104 cv
528.948 953.277 535.316 969.653 543.567 984.281 cv
574.277 964.188 608.079 946.821 636.797 925.166 cv
629.415 896.801 621.986 864.908 614.557 840.599 cv
cp
.733333 .858824 1 rgb
f
811.961 1729.46 mo
804.862 1731.17 801.091 1739.23 804.171 1746.07 cv
810.766 1760.71 820.716 1781.89 823.12 1781.89 cv
826.794 1781.89 935.546 1708.51 938.485 1698.02 cv
941.424 1687.53 856.061 1695.53 845.899 1706.05 cv
836.861 1715.4 843.9 1721.75 811.961 1729.46 cv
cp
1 1 1 rgb
f
814.574 1768.2 mo
818.238 1775.19 821.905 1781.89 823.12 1781.89 cv
826.794 1781.89 936.458 1708.87 939.397 1698.73 cv
939.855 1697.15 938.606 1695.56 935.381 1694.79 cv
915.704 1712.62 841.646 1753.53 814.574 1768.2 cv
cp
.956863 .956863 .956863 rgb
f
935.381 1694.79 mo
911.763 1717.51 842.703 1755.27 815.098 1769.24 cv
892.091 1723.05 920.41 1707.11 935.381 1694.79 cv
cp
.913725 .913725 .913725 rgb
f
493.277 1675.6 mo
491.627 1668.65 483.647 1665.7 478.075 1669.94 cv
465.882 1679.23 448.918 1693.05 448.918 1698.02 cv
448.918 1705.79 479.963 1737.5 486.944 1766.32 cv
490.697 1781.81 522.123 1784.54 539.851 1781.89 cv
557.578 1779.24 564.362 1768.29 557.486 1766.32 cv
550.609 1764.34 532.135 1752.25 527.726 1738.15 cv
523.317 1724.04 536.752 1722.97 527.726 1713.63 cv
518.701 1704.29 506.808 1709.08 500.734 1698.02 cv
497.73 1692.55 495.135 1683.43 493.277 1675.6 cv
cp
1 1 1 rgb
f
494.346 1743.11 mo
494.346 1729.33 470.344 1701.4 457.233 1687.16 cv
452.349 1691.76 448.918 1695.79 448.918 1698.02 cv
448.918 1705.79 479.963 1737.5 486.944 1766.32 cv
490.697 1781.81 522.123 1784.54 539.851 1781.89 cv
553.345 1779.88 560.498 1773.05 560.111 1769.03 cv
557.486 1766.32 li
557.486 1766.32 543.157 1772.72 527.726 1772.72 cv
512.295 1772.72 494.346 1762.07 494.346 1743.11 cv
cp
.956863 .956863 .956863 rgb
f
2456.88 1004.84 mo
2456.88 1004.84 2454.4 988.929 2461.01 988.929 cv
2467.62 988.929 2474.42 1009.84 2468.65 1015.61 cv
2462.88 1021.38 2456.88 1004.84 2456.88 1004.84 cv
cp
1 .486275 .309804 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Coffee shop interior vector illustration.eps)
%%CreationDate: 2/5/2020 3:27 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6flHB3ehEEU?+&O?`q5fI5]d2T+i%J>(i\A?!<QdM@7dQ6f=LaXo&h2UWT44\Puma$P=jAtmsBe;hC*G;![L#RYN>iA*1t1S
%BkWN=N]F](aCZ[-l+"WkHR/>eguOA;\B0M\;9X]eTs,s[NIL]@AijX@N3E^-p4pQEa9"E`%u!?dfcq3_SrT2C=QR(O,7#0)aRMUP
%Pkde09kCm@ma.hXAiSlN1m(/:4TNe>KlAig%[e<WO(cpo@X^_VMIK;#appM"dnu%^j!HmG8_8ShWRYbb1^@3=hkfY$AmkfpeJV3e
%j8u-])-\[gWbDK8rNR2o!Y,ck&<Gh<oHfI86E&"/94HkQ.A)QQ9Ooo5\6oC['-dB8+)=Q2'h"W/=`40(RaJunP7c%MK^HX-i!j9T
%):B]R8JB-SrYW<:"5s1Jo'b6V5W067L*M-e!Sudo`$52"/;BWj,SKc[d1Bp\@2SDC`aU[aWC9<2?WlO;\ETNW3t/=6S)D7Hq]1J'
%OGG%MVfJgr*A[QcQk]WlZG9tU^rou<)1j4O:#q&9,\Q?P?$n+5%@Z`?,#BG#3/',GS"asTTMnMU2[8OOWZ\97QuRbjObi\L!3_P6
%_a$!iIgE7s#)("CO9pn=R)/h@)OVg?(S;$AfH+jGL*m%LZO/Ob_QuCK*61AOkV<iNPUFe`SV?L)o03P4*t';JJCbl4ckqe[0Amq4
%KgRTah[$loDujJnMTg=b(/X!a=f%:;^KcP9AB15L2hE%q^n2lKXYJ2O+kKZ\/q-@c5SMV'_O,G=H-(UBfJ.4;b9*)A]kF`5S:[5U
%SsrI^j"C)f%k#c`>)_^#Bo<rA]"DOQ[,/S/Qc]%;`3?-^N][J4i#e!%s2'S>/W>>Ji-lMqpJ(4<:dhjF/fkG;hdLIe/Ajk"T^=a'
%5Kur.>DNA:iu+&.(Ha5H"TRl+ru-0S@_0?u//ia?,+)%7Uaq$JBFCSsOc[E_pb*Zkhnd&ua<\6[*IhXTg]ZW/I5TF4Np2kl-UqdK
%%d>^mS"puf8W![6%-/B7.\3@"X@U8TG6[sG+-JZthHLbG\\rq#eBgHJ%$;!Ra9;.'oT023B43<@lBWSm[+GW'T,Dj+T,/%WOWTej
%"90=3_9Z[8UG>/=rS+9i%9[*bd=j'WW+@WE&6e9ZN[]ScRF<]G"hmSr`M=D"W(`ZP9GlVO9oC/B[>N';ONET)/W9[=k(FV:YK64n
%b#fE958F$l#0.1&?J&A!@0%Wf-jhqtJu"Z."2i2HC_<WoJ@CUHqIab$#QCRLUPe/m@#>.t14`>U8*UiS1\>Y-p3:o3BA:1e!DI'C
%B/V]Int7.[p6eWABD-QpF#rq310AC-Ub$SDc88d;\YS*pR:GGXA<(:,-T&/2MF\H=+.3uo9U5`:74TcN'qpNL0kEEtLgP7/iC942
%T=!8=Rn@LTVg4T]icq+oGM+^,bY@aZ.l)-IL2+[?RQ5R\,dR.MWAIH!_FSXk5&<3VC3W$6\-^#FFnk1lIJG+$,00!<1=+Di(.>'?
%POj)_VFMbHlm\8p(hdR<<=gQg-F37)O2io'J2mT$b9,,:1`N9cA<_niU<tA1%7`e5?keSEO^*QsA0N;?A>52W,TI+Z5UT#44GRQh
%$7BfpO5UZja$Vft!KQ/13#ea/r"75-a`&dN%HAQm#_dhQKTT(`7"r]Y///O^6Ju;Y#V1Q2F2;[S$Bd\!(^ifaBYm#6_&s)$5RttH
%)2uK>$tN"5'T6@-/;/Rf(dlXiRRJY^K+_i+NM&6L6G^0%;%u<:#_ce#o#i+(M)V:0bT)7o"]t0rJZkL#b$pV-Vr3dn!iG*^KCBON
%!Y?dpa>B!/$:osM)3sF%6#$^?P,SM)8cKoU=n"pQ1]f-=![0f^`8H-]B++eb#Ce`.$\Q2*p^;[<q%Ej[;BlfmEnBEiW]tmU?Y%Dg
%FR<EDrdbhpRQk9++1^MeZhBI&!G-eRR_S3X5LodG>o1`cV9B"XO;JnR@_l.p(67@Y81Y,=B-Kgb1,18E"XG9Wne_ra6:@3VM$O\>
%@K\uY7#%@j/0G`P;%b++?iD08A=1<W#T4pu,XIT(L8;mA+<Jd8R:%A+$"ra$,SSG@1.6l@A27+2$^a1-'^.uI$;k4=V]o*)MGXLF
%;OK1f:_]/u$m@kPY\Z!4b(d6I2Nj&3@p(!KAi!R>Rg%"Z3AcNQK"96e[hUMRo<H5jL(B+S^tXeaA;Qf#r%)ipi9/9*E("O'C!N!>
%HP)+DONH'!H.f]XS/VcCTZc70"HCDT\b+g@L%-Q4KO<fg%L0)q;Q0X^i:AYsDZ8SSU`a.Wiu!BcU')6h?r<m?!T9)21^%`O@L*2<
%/(^0N%:K/@!ZG%%n2'Gs>"EC:c=c:nW!O!;2;uAo-<rI_R*'(UP0q:9N-7ZGg/27b__\%s9F!9*>*BCh\88OY^h@@+ZOMn;#T.E#
%a_3>dl&sHFRd;\WI)'D/.qUi<1"E=:>5j3-A:,:?%<,r:VE-2pl%m>Q_ge&fR8uKd,7W`5K4`i)Ok)D:.q\WJc1@)q<m:2*dl]Qq
%5Ac:cL):=3Eli]WfG&*10ecqR:%9^pgM#2[,80BNrW'r^Rkra;K>sG^D@Xqd@Q8s*",UFu&Ek\`bm5AJ^o"p2")TSmd%^Qf2La6@
%L=R:!cnTE%`m)Q6q%u%4j5r5h0(STWZSBA2G!6@(jI>h3I#]5)E;DCFs)*^H?[(V[-.cS$mhFN2e!r8pD9K&7anaP%3!M<iZmbK]
%CFV)kbN&hW"OGQ?0^V%cm-r5$K"t'2!q7-"S+&fC#3W&&9dc%3c".736)3J3(?d83S17?bZ5p3R!sZH&"9f'-i4OE]9V5a?IF/$R
%1Vd;$_b'I&WoXrLH0\([-;DK!?r-s=.kZZFP8I'kF;*KU*nrEb'a35*1Ih"4Y8c"Sr3bE5Ho&RT[lH+rkhJ+d-r0ThFNBEqb]ZS!
%:Mgid]^_OHKPfm^4<7GU,5mc]@Q2fP4&]'B'&Lo7M\_["cb*%>D]2L,-2:b#2s0BL/%5+UY)5M2JqGSfN-(QoH<8>,iO,42Se7he
%,@5[#B[GDqd>Vt;H+VsF)V^4*MWW0Hhas`]APh-Kj<b:2M]?Z.;\l&'X_$j$cSfM^$4+$i7dAcnD_lZa]&*c`L)AY?Gfap"#q&7W
%fER)RDk]RUJ%$(&TU;l2ED5KfNgXB,\"BX)ka9L5;n7=\M-Z\WM9>=N@ti6lbS_7%#FN^Q./k3-\RR79biOkqgbG-Wk&R(XQOA5=
%>g<m:#F!>^/;IcM1;eF1mVmZ)MJ4R_p'J#F@n_:<Hq/?6;A/tEh93O03eH"XR'3Tu`SOG<X9RPs?`i9dcVkj'e=<G7K##fE;P1T"
%NggKV>K;Qqkj1"X1r=kW45SYa+ZD;Ap>1+8h6+PL)b.^GO7eCKgHgkj+cIK$-H<K9]ZZpqrObSZB>+h7e-6Yt?0Rl1,n\"Yn'Z'M
%hPQ8eU]E]KKV)]USpF8%lA_:*Zj44bm0kB_@!Xl0q$]1t7!`[&X49^``ZJZ[_<bMBDTmKa_8RW(RW*eQ$iFqTN4p5Bb4cq=NaY:[
%m!Aqq)XE>hRfi\n(o,6YA$KRG.-1>TACQm<>#O@7K+*&ih3>\[$QXRY1LN0tph.W,LGR,YD\g-=>8ZQ=&(I-NJTdkn7X38f82WN&
%HQ=dNN**-s%ZQ_c*eHk+#k!]XRV0V=L_5Wj_]G%Tr.$0JHa!2`kKA'KHP3.W2NQ/RVhDg'^@`_9hEtGp;.fSE"!r5Sd>maJp,W$1
%[o.3Njn#P4..k$l7us-FYO_M0m+BBuglUS7k.?1IYl.qM'K2V:qd.6!1lsoq3[W?p@*^krP\"T?W6G<deY=-#^;8injdD`VWL3c.
%%VAJe8:Q$&ORG$kjnMCh^=U;R\_G"YjClR,hMcjej7SnM@-oHt8)s8\MF0VEH<<Q3`qFh*)jkP(SFQQ9pWMoDJ0481fMB"3hN2@:
%qcGe]JG0%fpD\p?O1Y;`Dg-]S8G7'XNlM,ULZ3Ogr."j^[3=h_@WZt6NqXh:;6'S%BCREUB?Pg/*KIN_^s(Z]`mbF@`FSi;Gg$T^
%bYWTdY`YoQPt-#:+(8QGk2ZBA5-e[:6a=L=8@KK3o'%nm3CoJmU-Wi)k&:hTdm6[65L[bV<:b5o_pVU2&a9^CY:\bjq^;P([DVN3
%^\F2:?.udsg^IHEA0gm'^)?3oI30J!2No3CGom6j3eoNV%5@CS8,^/][][I>;I+H*1q"*7\@W4kZ=AVIY]:Ulg?gY.A-&\;FB;0+
%N"iR8kDJ\L=HWPsKW>:?Y.,Bk@j<P4gXFPl_d'm0.2D?TfJ6jaea1PB?V5-Nk>2Q$Z_1SWaAs+niOd!d'Ye4h?*P##^e2Yg+]'rD
%Y1TD&J(!3_YQ?qi8Fm%6ZOFCb&QG+[7Rhcg"L^)q1Q\SW7e1Y=a-d)oAk.RaZ1iH>n-KS:o0n]j;>)2"CO`4H-q9RaPk)e5--AF%
%B+8S+^5mC]-XRnP;O$3G!tTH)9)CEH75;['Tt$Zr?]/A9ZojGX.#*t$s4<um$Kp+A9P[La0QUKWEa4Onn*i6U[4$BflYK^Sni><r
%(p\sEn"W(q=qi4**(iVIk\F$(ou4Y+NmG9PV>Zh5U)7>$:e(DeS>A6a2)U-bncMp&Q[O/3LZ]OYiH=LD_`OCJE'!!f;R&k%51TI_
%7%m1DB>QKTEJ<TfrKiY(hsmM7SKCu-l!D+%_,Fs+G3pMt%6rQ("!T_Y[A."hg9lR;CKV]`3JM=A.pQRlV]MtodAm/OXkGL3qc(Dc
%dAe4hg-=;kWFpmQ4.+p^2j"pg_9Ylu*n1>NE>X+O(e'J&aFFPV_rs(=1cc:>9OS#2pgg7;L=Yjn@!<?FrF=^S<+Z)=L=IIGXgs'I
%O8Gft4>Yu=chf]/_ctc5LZu*Sr>0BeQ?>n=>,2QIbb0RD'l1YhSkQJ]XlHrKa)bsD%pRfDg$qn-4Z\f328[Q,<19A"N<r<eL^=NC
%:W*D8-,=`ohZUGtqE<S"G*dc-jM[C5$]R@%48o-fM=,94k8JZopq\N@2oa--E>ee:15^SXSBKc-OZ,7/p>%pA\^?'D5jDO@lIi//
%ZtI!-"IU-O#AF>M'`/)\o.fOUJ3Z1hD@H$-<tEdLJF5+52SaqWHSsHL\MD$ShJt.V&&B8uANVL:7uV-"K,gP.1`Z)T]l3h9;`Q6J
%q3qk$r"Mos&18YcfXD*l)!JKYml:>oSH%Ekq;3244Lf=@I%:4"N;;AkHV'7h^W60-j8A@cr`:c'4-]PJ.=-Y'^_i4g(eGe3I.suJ
%[-.+Fj.,RXcM'<]qdJAr<41uqO$_G`mn1^90uG1/kB>F2Cp,Jn!+-Zd]P2o.jTfrEne_XWfPYm_0H"a:@Xt]qe$/D]cCtLFVL6O1
%5rN:R/%+;^DYs.`djf\7M4B`;NfFj[H%(.BO<#i^`sULCY!-QRbY[MF/<fI"RI'_>hL-u>an\Q'a"tq!!MVt/!IP^<it>^%DTIV?
%T'7L[Sf[4CCEMkT]/XiO5W+`CJmS`J9e+edfncR-T'5Y0BI`;\Cf"W[B952-dnm-1d?^HOg?I<*8kq38MXrr$[0O_81KRV;`J;,Z
%4pVh!%74G$\*Y0fd1iGYX]%4Z5XfVaOhDf:$FSR%-6Qst&;,m2NeNg0iT40d3>Pq]KpQ<.j]Haf(1+Fq.Tg;F$SP*e7]O3C$SQjs
%JK>1P+"=khc:`SWFZt.N5cQ=@cTtWo53Y?HT4]\ALPdY'P0km6e+'XKLjGDC9c,nO@,DKa0[^L/Ib9;c*fc"Mm"dCV/*uue49!6$
%H0cq[(TTBn>Al_ea#u=oqsGGb-Sb"DF$-&4[)^J^KB^tD4%SBAj^<JrnH>`8FTU"sqXo+0ddct+?)d'Qk+&/lTC-ZJ*a_h:fllHr
%3-FMr.t;J(JqMt+DW!sG*<U40Q%4%S>"3b`o)fmPrn@,*Z1lh-lZNG$KVO*23X/=LToJl*`8a':#PaG<rLD!F^@f]_I9H7u6i1sC
%)B(qYgGSV![UX",Q3+NGItn5f0[jZn/VBJom`^+Z_m8H4I)PJK\FH8$""It0rnV#XCQ&QEM9*/9*Fg`X!W6'?31uf(i9M6-:Jf(c
%_S`X=Z+$.hToJkX*TL8BfXIG4ehN2-N!$%hr,ZmiOZ'Rum'G"oGBpbOd_e_<26nc;IVu2Kk0<@JV=lQKc*OlL_2P:e$L#.+L:/&%
%JTo'Ii\tiU98aRQ*7)8nR;ptPEjGn`/)J9N?"Cp_??oUN+b4M@G%di31se<';?gln#BS%N&S=5=ffpN7A4TRY#7^VQjZ=M?F>*q/
%)0*]PJ'QF2C`\";^"]l=%)n02Sf8Pe;\IaN3&0oC.ZlNM?ZCf&O5En.prK^+^T6kQR.@BD&6PdH/.*Fo5;A=Omr8/mTet^n9!obq
%jE3#<DV#@4q+M11$o)g.n>/a$pS*JWE.L`s?/(.Akf\bpmeN#!,:n61"^g8tYjB`6'+?F"3P[sDEid2$A0i9,YKs[mkEsF5F1L+f
%RU\7"biXr=gbLh/D!p2Qbo$f4NnN3:Yjf30\PK^tbeV%%#FNgTi9H]T*RhQ/3d49\Np5=RSbqL4>kg+OF,$&BVK;X#cJ<MGVoR7U
%SB9XNE^'+/A95bXptY]#B7"?DJ[FTb+N*WV>Su6]IitqG48<kCNosmnc]pK*F!Z"NgugCu^ZL'*h%ZW>+Jb<1GTC]3l1Q6.OtUeg
%]$6,iieGUKK(s1rUe7c)m7QgU^=W6i`fWQ9%V6L=T].!Q./J&9bo]%BB((YJ7L.-l3nU-+';Qj31S;k!*VTC$%)8R:hPL_c!ZL9.
%.GCDB6eg@NapZ%6S#hC6\`F'>`Lh]f;dLN6iPs;MfT"s8b>7J^3s4eoKIPfTgPf"+e:JbUfUlWjn7u_K`\/3ZdI&AHkQEh`NY4,N
%^C6E`<NnP@PsGN7K`98WVM:s,kE*=87rgmW30WNLKhiC5H(0u%$!H`c,XaBh-,mhFA2O&6j.9akYh,#RLYg."0[YH&@!fog#GUV9
%7s;nE!N//W2Z)*Z)`&RFE:M"(-oqQ$^G.,t`^IS3OLd3%%lu-8F=$k2[QsXU@Daf*3Yo>WZtg(0nq#Yf\@OI=clP]P"$IJ1&*WG+
%0[^J$XO^d77`u&JHH-G.GR3_t#F];EreN:N[/WF;8E0m0rV)>ED%Z?#'rs0lRmJ0eiuT/HI<U]@Gh@6'BZ.aU]5ogG_pLIc6@s4X
%%aqjS3Vpb5pPjr15sE#!E*n6hhd\_XVa#V\'aL]MTC<8]ch1?/:\h0&isE%iA9rJj&oBeEkC@'N"$`/d7"aV1*11^W2B4Rtb29dK
%o./S+Q+e.S?8KAa(g24S[.<-h@De88"1AijG+S9%Z*rP%ic@OYTCn#$hnLCRQXf7;ccGSn#[d?*O::#Z3$mVZ<LJ$I:?CB?+*O!G
%s*tWJpiL<;IRN''@#j:Mn`Sbu"?;YH4/hZu:BNfI70F^uS%Vl\eB$rt%l0_WGEd[7KSMIC%R-QbC^0d>bO@NXhdQInhg/D#>=Nr5
%+KCWmahX^2`:/c6ntQD8a4;Lp*OfehBgt:MP5-=L`:Va5/:UX*?)nk>q2H9&e&<J.M?C<j2gBX"FH*q)@1RM[e!3*\][:-UWu`>j
%4:`WrQ9/fiOn>pNZ*&;H-#^_@Gg(,U<*t\Z/:YtYbMP_(#@E'n,75jIb`4dVQQ\rP_XLIpOrIIg/(,;&534iIo[pGFcBgaJ-do],
%I'5T$K$T>HMB"kmdG\8fM<(R$hc-JnFH>BT'tsc`gih-lhp'Nc+kr4ZT*!a)\7#Ab:>>_)[f\7H?Qf\/TdAk\Ybjc0j?SbmQaCi?
%`MEMYM"FL9pZq()anH'IXMY^f"Y^uN`n[1rknb>(c:=N<1b`^k5]n]1RRgqscAj5=Ae'K].e$rVbR+:)dI9a;I/"pp"9Us$+-4A0
%BMePW?l0*^`"3Un.?E9sn:B72WOm*<<tTh,"5!MTJhWHaO3`W]o**pN_8-+jF9!c<H>ogeMq</)F7Ar(p%Ns(rq4&(rVuip?[r*:
%J,QR#s2X$sq=jpdYQ+Q?30H<0FKVX5[eG!2*\sJ2aD=g[`p%Y1f"gm/a@eC/+=5+Ih018=m>WcK<86`7jLgc'2,eB3PnksrL=>P+
%U0W6o)FQn(n0K'4+;1J7(;nKQ]G/;Z3$s%[A$HS[En6CU3,$G^@j)MRN$/Pa"46E*SKFN+Q:*t?#^CglGa2P+_HbY6)f?rEb`)t0
%)1S]5+@#mY6Q]ESl"9nKW5T3S;u`'8l7ZGn_k:s:EUDurUkf^:!bp>VJ_:2dR,Cb7$j/,\!h;-Wotpq54:`;.?-W9k/:)d$f%_+/
%fpY\5=D3/[Gp0FM-j.9S`mu?SS/O]joAE'f@`RugHeVWQ!a$Sn3[7s'1,0n(27Ri`QlU8.m;Y1;)fk<HZh6"(M38b?Y>gCO(W=>?
%f@De0f.=#g)&aA^H?\PCs)FeFs(^=?5hQ$3El_m?.Yukn&'WpL<RJ<A_]TZi:gdsqC[/ZEgsig:Gl)^6o=9U]d/A"ro_SV>\M.RK
%T>un#YqTVoe/3MAJRq2%F-_Va]Ztd5=@82;X;QAmZUBN4jj(JNc5/pdrbr]bU>%Z_\cQ07@UJms_^MsYVla/*,RV9Q#uAA!O;t`d
%T,&f+pnG]K`<srb[MQ@u@TFT)RnuGWO`E$\H5ZO-`"Kl)m0+LT7\i*gaSH(Y`."-lCIb@g(t(DZZud`Z)li]Wf:n$XAhkA6Z^%Q!
%k1os!6\ajTT`)N#+kPRgE"i2>:sG?p8rRD-DF3h$9n4tsQ!'mE/&NBgTXZG&`_a5E.`[Q<8QO-jFNEs?Yr'?bZ,1$BIk0"G?m`@t
%s3JI[lgOlOf73ht5Q:Y3rr16Ys5RJdLC%5\^]49Ti9UF@YQ+U*s31\U#@3DD2A"kAYc?b)SZu6BC,7YtL-kl9-knM;XIqsgN>XXa
%RS9/DCDG-B!k+oZfSWT57AIjE8!iUB5p1EW`R0''.K3VU;ooo9,j^r[Q_b_@B7*J<:1k_N):=6U#0Y)A#q%@Cd6i(h_BLdGgR59p
%j]Y3ceE2M`6<B"qM3s0jWC@7>_mA6gj]73>MOJ,aD&SADp4/WiVB4&X-_"OIJK*#]@fhL;<:3nCNgV6dK],W,4.6WqMmjMb"+nmW
%"AOgKA1X5W";'OLQO1pS',^dUC^7=+k9Gq>Yc)GT-4E^02%87"RCQ2J$I$gH1jCu"%-rP?C)XOtWbL)m]V#;EK@/TsFB81]d,V=:
%:g]"deT>AfB*<thb*X*k?_T"(@7@cH%U&>Vd`@c*kJ^tnoh?g2&j>YWkoO?7Eg+&2/?J$G7rgj"6tQiA6:*5l<$Q-qkTHL/7d//U
%<mhpcN<.`k("ZPfpcrC?:4Uc1Iq6P/euXK9-?$fa3fMq2>m_>3bj_,<!EYp3L+cATB%6.^QFJh9KUceMeIW1W91.2beVh_@X"le"
%H4HD:4OF#'j?9euM(7\`%h.9J#$*mK&Q<o1*FQYnfeHtLJJtTj`DrT'=Cb.A'%&L6j@!uPi`E>_)\@_YF?#e5rXGM-a;!De8;/2W
%ggD2*KiIoP-kO=;25R"@RS(e*B"6DpP#>hhG*b"[Z7Mo..U<DI9(SPTR`194eHo&K(HTGBL[&jqh?92HiM!d*`%iH_+##q6p*b.`
%`h'BTYH1cm&fpZhE,BJ`_U2I"h#L$HjG<tO]`Bsn2Q'dSdL[A9,'ZMR@0q<ImT*.!]qKC%U.;BiX!S\2!<g5t3&d_8iR9RWi[%1)
%Ae[X=VWbUaC[EgjTuX7]#KeY"c9-S-%,(u]psq?2%oe>VR"60aC^/IrV@*8/istZ^SS<0*c3GH6Z+R:MOX+b"[Mr7TAX?=3BlQ/9
%eR`InA!1LME#RH7Cd>M4QEJ_(2"ZnGA2C"FU'PM<S)nmD9eYh#aS(^d!9Xk#e:.M^hZJ%%=H_@c'>3B=I:!"U&2A_%KU*+'=U>;^
%cV.qZ!V_l<-ZH(g0JM3+SM`0S,X?Bu8@0.5AXkY?7]dC3l.TAjpDi"$LiI@SCk\1D?3/Z%]/M;4-g4A%Kf!Z/_l<l?HBsi?7Hk3+
%l?JfB"p:XeYL9K3q6c(p%0[30%uKT_g5l%S5<D%F/cG/=>r8fI6<E3[jU4i%Ns1XW*fU01,O4K)&TRu@?jN*bX["9LN&l]K:uPMQ
%DFXf*apLBj(qdMo,U-ci^hsJJYBCe_Kr]kVOW0?A=YYT!H>q+7NgT+\#opO.8Qtt#Wm!r9*nR(8q2u>/.feHf`_5&=#Q[=2_?I9%
%<e7d8*8b0cCYCNI/icdUJ*(?9_#2DSj8q1Pa^^b'Yg\^a6@X/m;?tDKo%#DWJgrm:8M5rp#oK!]1/YH$U_Yc5HtF)a=jrba("eBV
%NRfu7.&$st=G4t^YU[tL0QL>0\<1V^\SQmUYa&d`]3SO;.9ip(5["_FS%.N;%E_<JhC^K6S;tNu+G1k:>$R@2W\-Sr\V2+]Z"(n(
%.P'WjWU`C,JOM"JnA_m6'=]5%Uqt6-Xh[6PoPh<N5*s*=!BXur7L*/UG`_Lc!lIS[EArNY\`%L9J+Ygi'c'!Mc0Q=um&!Z[J:]Co
%XhqTkR8dnf2F2+Z\ZV\AEl1FBBM4.3A.%>ChiZZVW1D+GICg%qJQ!;02o&0L,Heoma2Y*GFLJV-0<\JCY3T"oh\EX1GTi0#G8<*U
%_Z'@YdP@bI[PAafrHM9P;D\'&l8H_D^prkE6&]@d<9.ZaUMr&g:T+]GX([;uYmod:nF?_0ba8G@"1G+;C4.m849u[H*E@a<O4R@/
%2!VS%4ae`<j>Jj7WRL_Rbq6i8k^Wd_'i)5?L^kZ6]s5.,MesC,/S-,AA"+)Vf4B`\q:p9p,.(Hl7'DmfQ_ChcZ-)X!pQ$)t4?X7;
%dXl?Q@=`h?*tWP^2HnOdBLP%G[GZGQcg`QBV!'Z>a(<=En>gtts$"nX*O(AU5I"'-,fDkGAfXj$B$8:m6l/NX5@`R(<ktnC3#1/2
%@Jed`@jM5ba"'$"AKVS\'C%R^*A0XE%I&]ME@?@,(msqb"$\Sr!V&XS%)E(V'RZY_945'q<Xk#tYX%A?<a6%W58IR@l6%X^pFrOL
%Z:=.OD8GN$2P;tS9t%mRpkK#JIN'91g9@dr0.b5SBO9?@JI=Ad+]Ne,"43d2YAM'iB7oN%O(`tb/5]jVH9mAg?o97r`_gq2qE)SH
%p.km]n6KqEdJ-!e@G702al'be&cfP%gABSh7.@Zf)")8+FMU1RHF.GD=pGChm4c*,U-fJ'31o`,eqPShO'^?+f.2L3(]#roZ^FP9
%Jl%C3b@b<Mha/B"gKO`;XL%kT:&N^3SOD<q0V2XCj$LXETY2(:*C.S0Woeoap$DfWT!$`J$67o7XDhL&f&i_gOPHYFal5i&_PZaf
%+?EG2q=W0g>@J/*5m[`XL'6(uNn^%f70ZYqqROJEVbD]=@>/AVf[fto4]9<t:8*t$9ndBf7q4OH_u-H>FuBElS3#q>(J"TMQtJ".
%;E=s)9$ltQ[nZ+k$Bc)">LR"@cs/L@[Q+C`(1G!`CZ*gu7SWJQJYBT^1i9ceSL.rEWY9,iD'ci^Cp1-o0uGKYGFA/F:h=kq+'hk"
%B9fGY:Np2sCSJiiAVPY:O=E%IH`@3A4TmE&,qUoTGtNuf0'Ra#RJ`EaCo[<l,tUeoZ$J$J-JLT[Ppq>rR[jj)@]ARrXer?u'A;n`
%.#>Zd/gc!ZSR!'C9Q7V9\sJ\AbZ--j<;'^-aA#(5(oOL)(:fa1,2Z;Ms!!SmHL6=hCu+*4Po5GK4?X(6m#5)ASgbAJ@>]Vo];3'4
%Z\n_/F*a<t,j7=.0kdcca>BM2p#E`j\X51"SW4+Oqh5^]qE0[?j6>lWWZ4'XQ_#2Y1d>hIE`oI`[@s:U'gVufNTteOPB>g'mnTL$
%-UM"H^]FL13`.[(1T7$=p<Kj6l-g2Bc`kMjS+?Fs]bOeKc94E0TlRSdj<60SDpMtX_<3+6>Y+p$/G;4UgcE\WTp&^OD<SJ5BW*O]
%CoqRA,SKE4DQY%QLdoC6UQ8Ca(Oo2P%W]n[\DSHS.'IKVF65PiJ4>]'m^62c;VgNj#WYQhn)@WY04t'C#?2q1=$+r%9CM,o1WQWQ
%&0P/t]_#MinBLr-'flLSl&39H&9XUf//*"nGGY@7m*4d/BA;AqB;Qbc-;FkOd-`&1]s"#L`c7Qm0N32\VJ,?Eg22-9^TjAH\($aA
%UI]oqnEe84S:)i0aJ&"FiT!'s;kd7#^I&31ksVcu"DI;Cc#]<j[iH\hZCD1g7ScT6&d\j"+MkMpW+QZ3k=rCaU2U2[(ND-kgE=q$
%Z^Ce&3Z0LsSN\\o%O9MdbenkNQHg1>Xg_GO/.=ID;h[`sRYkXc(XM>?k:r")XNseVWNco:Peu6WfI`0Z/UfR3U.UOM([b39oVPPR
%ct@-^$IG^ESD!ML6Spd8nKP@bJH.Mtb>JU;5<Pq#WUfHK2L?UbB=uo!\M`^p.f^$m6Th>Ier*C<]qj*'D=TO2H+SHdH?2h9BWjaW
%B4q8Z=e(]F]H@5t->O0M#t`acAs-n$ihdRO/;-7GDf)47]m6Poi8QmmduG(SDd?_@Sl<lJdHJ&.U3b6?'+HJu<IflfhcmoaSVQRf
%le-A4-!>LNgA3R,Zka\Yq=@aeh/cQ)T']&m"ms_j:Wf-9Q$WhG%+&OSW98mDh%b!FT'p$AioSoNWL'>fQH)9%]"K/JMnLZ7;p2aU
%oJ9@dSI:ngBG-ote=!(d.#AYUEU])\=Lk+>hVut?L1h_K7<,mgc)'8rM14%QGJ"f"CI"B_mUqAf;,(g\-Kha3>a[c^HcWXW;`D\b
%]GG"Vai'\^=X%p,Pk%5KLe9^Pl?gdl+a`1G$?$M[Yl\sL7dKN<$_m2YQ?/I30oDV?X\LLt);RrOFA5!\aW[7g>r7S"V;q`(hQS>n
%L]D)g*DD10%r;ZiF`e%N9b?R/Dn/koQf6ZVRodg0/?N$uP6bGHaWs^`JPV"8=BmVP^;h_cZ51_%HmP/iI0@Q3blsB6lq%s7MDM?I
%-XbDTi3'3CcATrmLoA'(W;rE0k2Z`XNcU_(Pdt,sVGX"-g$$s,5]c3VZ;5Ou9X8!m'$Jtup`8SnBe8![]\@'9Uk(:sAM\1QFHh<X
%9KJ!`E8jp9?.%iN'KSRC>2S]p0(/%EWNaO>cN'Eu7`8WTPhm@X`eCqi<0qR:BO!kUQYX1VI>JPDJB&'8>2e&\h3eU8J:Y`3W#g-b
%\!lKchF9R5"F5+tLA9S]-^DW&dTrU89oh(]He!\kR3>+R]!s`oj\E-jQZQ<gVWT#Dn;VJB7Lk?4+84=H@\?2bB<41Z^1d`peamej
%D7s0f6+cq<Mn)Sh12&jM9#GQrT]p,&@9W1WeEb>Kc**rD)XTmIW,rLJ,b]q985DiBnTkMRJp3F,j)YVHG`@rW,#3Qs8D$G_Yi`hK
%$UIO]Knf*d$8ojm6E&'r6S]R9:tnHc:4?sW6p^s+jA[Fo,U+?iTHQWK#')3b%*=)&C;=TkWO2mJWJtI<6))t>Q%%#3#+M]0"Y)["
%J9N;/c5+imJK]0A+NM16eQ`B&8YgDaVeU)b4dasU^P4g[W@%\7V9Y/EK(<)%/hnQ,8h6%"`7O"HeC5I\IR+*%U[?FX3lTk+/Mb`%
%[lIeNf#:ERe(1OS!Sr:AV)_ljI9G-+Kc=<C-"UDZ&N#\BEksU9Y,miQdZ=WGk$h":EB4n/>hd8dQCQ1Y=m>>eelgl]#,"S,1gQSS
%.'Ea^KgDdX15S#Je[ZQ[<E8!)-co8$f;Q2Z6u5g@8a9+UTIf8cVq,!<M7NF!rKo?4IA.#7FH/Y]ZA(kH=%2s4GJTg$#_(h&!d">V
%<#f>*(_a;pmfEW^(R$0F5r<I3`jmp`%KMs1/`-\?#s3-,`%o$3S`ZAM_jsOF<O4'"F*Bh>D8$Z`N1l+CQI@6>*)pU=2on8onB)eP
%nqP.L6?>HP%M0;b*d,r68E->-,D(Q3U6Hs;=n5,J"$dO]MF]#Yo6*LN`S#T/NJ;7)6u?2D-L,&KPkC7B:@6kG/fh8mAiWB+[7JVS
%%#)aA4&O+]<@P4NU99VJ2BY_Jd@$;%<<Nq+['+75jJc7VMS/h/>m!Lir4,'tgg7f6>+t?;2TQ7@L0%j$&l&L0roB]L(B2RX`TFg"
%$9;^t"`,b'\UJ-CW:#pI&$XSS&5m/u1NG/j`%6t=ZR+F,$(t..9++1BbfP_:*DspUDn!t"qh>=gh3"fE6=2YY`0,G+6u!_P;Wh8;
%9hL(C+$M?HJdSWep:1eHgc[;1Uo9m2FXCV.$Dq,q!*=/NqO[RXJ5%?M8q1PDV+FYk5l:Mj7CEVAR^sT@k>E)rX?eA<16c>*=*.D1
%M-eJ9:W_n9(^JU_+\Y!6l%(`O:luY80GbVB;TFuJD5LcAr]\a6=aLoOY^EC^h!UH\osBt$.%6Hm+b%,!]%<N9YhD)EF*4eZ:mBC2
%kRq@1&UQOG&+mkC,kplr[cXmUkppA(NM83D3;&jG*i"j@WCU>qdt!qbdA9_HR,6SRX3:?6NcK8S2\nI#foa?`g8Z?nMq2F$8M:l-
%Y_N8GRnWk(*;?9"c/q^7T)G<$r>4OfliDZe[C[9gEEJKO+U;,t]XT[L(a/@oBS\pGEX;pKYc*JqUi6e:?]A4qTJ"cIGiHL/SDDQ\
%1CT763cT.X!@_X<XDPU:eFT4ico4N;94+/u;Em^COE=5P"tEq\\cH[%=^ROg4WV-9-5N8"Tg9V,+krN[X`WRViE$cEYjg#&kYA0s
%7,s`M#8lGf,kmN5!clS7F'H=_l@AQ7@?0[=km]ZYD9Ra>\i#,X32e8mDB?n*L(ea1'k6H4LTu^L3/i2\Tl[C%0Ti-I&""_es6O'/
%dQfZTeS[r9N6+u(08UD:9aWOK.=\J[9?/^C#'6Ee^b**:7]@^9(%b5W3L1$--.4T33g`1)H$P)f'bos(<)PHK\&g>rr"qGoUnCr@
%KHlg,Z8)kQ!--VDXN-<E<A&*]I8HX,'C1!%*P[#8'A`7\0-.gNWLK(<\")Hu>-JJG^%eT$*^>u0=8?n@'QJ_H?>P6XHq7)XUf*@b
%%,>"n=lD5s\nI<[$iH-V@As8ihq:T0M2\(+DM*NEiiJIs:Pj%ZGg*Us6e>3MV,T6t[K3V80hXn?>i$$O;AtS9QuA8f;eMQn`MQ&2
%(3kkG0@;E9oijBA)cbB4qkms)kY9/._Nq+c>Vjb</7ZXsmj$3.4`gJuXN`;6_#Bc8dFP,V8'c+dau.Pj0MZDR]_c_E0'6?KLUKeY
%Csg8Xj[,[pIH5@#FFhjK*q3.AEh?*#@d#:_$CoU)!&P>%inV+A&kK[aBt^^%4SU<Mp>F#'(jnS*-lOCe;/6l^]^KYt?F^tHSYe;'
%/%R"NDC!t\O'qHRAYRaH^TT,C<QMDdZB1+0Cc$TqhrQY\R@CO.fSIlO:#qOU5>m2YX\+=c0la&a?`[kt9TZ<FZZoN.SNl4(,sYKl
%dLXjp!`*'k&7);KI1A^*'7U2h8Z[9dPT11Mf")7pFmnkMF^f,Q,sTY_!Y5r]=>&&<D:hYL\Ydn`#98&]Z7g-*>:Nj[MDQtu>GU![
%d)=,!i$6W_fZb>"3@i>./La+?75miE8Y5m.da=5!CG%t:K@hnaJCVIUj_]\6AO`*EfRV%$Le+VuMhPKZ&R^ejF?uR,TOBJ7nr:>B
%H.W>l[)UAD+FT]I^hG!53(E7Mg0i!Q6S+CoHcu)-ngWWR`2aONBj,NQT-Q7G_Bh`KZCH4@ib8o!a!*'r!f"TY/'&hS@Z*/(B[hEt
%F59ndio2$HW3@U%/j!$F'_?'O4904n@.Yt%hSL2S-CK5JLK-]b55-4i?dC%m7Wi4[+k:V>[TMdZ5KseXYsk[d/h%6/!B;5>^WZhP
%W/HS_J/lI8=*7k&MftZ%3)R$+HM,hq*'kg"-Z_\5`,1\l<M5,U'iQrj\q"moCXB<^WJc?3(:of$d]%Fo^!EMeYmEI?grc&@?52J2
%fC5IN#"DGY'o^2>W2e[HgZak7cq#DP17S88gQn`+'KIFZcGGBnoq*k=3N?8ckA6=nYVWa^0-);[6An./6q?1i,4:U@!f9J(RN]J]
%oCT$.mokbV6J:t7aSZ16ZGG)-AfVF+-[D8*$E[rS;p]*$+bKGSl3&emIJ<SOl6R'aFW5,N5TRfR9WTlQY$Z1L;l`V[<mptm;Rg]H
%bj4t`dL63D08uXkq5:kWru;271RP1m`DZ+AW'L2IMGL%I:+:q;dq-[/l(=u?2hcUhSD3/E6$*gHJP7:OPiaM19WWZ;bi@[$CGi<\
%>/_AF96`%H4F^A[e?42Il/nKPq3\ak-'c/iZGIPJU>D>\jb+8a/Nn,bM8#qjW:]oHI6Kb0r^K4q)a'rAM5s76W)'V%<<j3"WPXH+
%J0-"+JA`V&HS*u]qGBO)IL6HgR<#39?/OhO5U.3-!psf^483TCCY3QtZh/%L6B40OQ-Z%;ROTXE]=\7%c)T=q/@D>nJ1J9!#LdOA
%N]_O#K5eJB3Hro70n&(&G<,PB_N:H?#uVq.OK29'$"W+U!d!YQ%`u2hC76VoY!f;RFQVM/C-eG:,)5_\MO:]D]jRG*0#Hl'20!JI
%?#Zi4\@f3O[EhKN\XUBI[R[:M3#AJ:;L$EX/e*^V2]upN2r^/WX_I4r"WKa%$dRqt+4LX_A4VtEJ0SBdKFJe]!afs1Uq68V'c/OA
%A?Irb#IJ0s(N0iVLu=<3?T`HjUZ>SGS"OO:"@5A1-:/1I(IN*o!^njuLi=@9#kSJr?!;4'=f@8<o/jp]^/u/A->*Ib+lKf@'4=D'
%!dM@XYoA*24rXUWfD0]p.6dWLBa<,6cKO68GYsFE/8qHgDk6UpUB$uHT7;YTT!GI&ED,uAG':ujc&LB"Ia&nBCpK:Ca\(@i=$OL"
%bY8',oK>]De!##ZQu^nq,*'F5Yo;0<ci_G8#253g@$\nuF:6cI8Q,\iK<\e06!m%o;4l_IX!W,6K#p?[5"$<mkCFU1-)BeM.hIFp
%HrOuWP^u>A\B$tqe>IsO925,1Z)^Y>S],%LfeP%:?<P@R.gO\ZA34e2V_XeM5f9Tm=qTXL;<(9PGj=*B:aagjbbX:+Pk@5(B(.?0
%>*O+TGl_j]`'U/ohVCW#FiW"IYY1PMn!fMBa^EDLOcK(s*McXMPJE^cE`S^F3^3]Id2=Xj([n.fe%DK6>rb?P<N#V7[1`O-p=c"B
%Th^\T?e)egdG.1?4NP;O'Yeq^&sA$kfh.D%;WDh+W+e9h6Z5Y@\S$t&BNeX8<\-HQKiR5(Id3Q<&/Pk[kX#I2Ooe.^4ghpj/*F`<
%/EeZ4E_Z!sI$pIL6]EY+jN=k>]k2ThS-.'17l<]\)joQ/JpS:8E61Y)H=lWJR]5b0.>Sf)S+8lKRUl:&`5^o/,B(brO61^$aImEH
%r)D'R%BE>:`KP,Mjm>U^&oOs1jmpK%LV;SuJ_[6%7fFB!-XM1!U619h6"\gOM0Qg+'-+jL(=^I."J%q)STqjq,ND)mV4N%[(p"+p
%LZuUU2./JF*AA&X;o#^d9$QMbq9ifYeB)X;a)5k/aS,+Xn,<@2RXJ_>5OQlGZ/.&CLcpM@cB)^o2*X.[\FI)`mhBg%)bVeJCsKOf
%O>;bG+;q\,j^G^ML'IZ^C9d>*]-NH#Nl<faB<j32:8Q2M*,k\9rKHPJ.)NBJ<@ZUbc:9'9Rk`L1@M#uae!%o533)Y5+UC)4l+1U%
%m>QYmZ$2\lPpiSh2!>U%e&(ERZONKH_/ntO0IFV:koNdMluLcGDI`8J'+HLl?73CBMAjrB'<ED`V:Xe!&d5sh>E";sRVI2+ZdECg
%`^KEW8aJ5[ALj`O?pse4$,Q7HT,F+$qCC&KH>J0?k`VO,W?GLKDP@;ZF0Tn2G&3]+F=g#mK24d^:=J\kDJGUK_5#f<`,o++7j:<<
%Zq%H4'0DMP1T>KRCBB=T%?(<\-BWoi[2BW.mJEbT6X"s,)a*$gB^:asb9quMn3oTmi51kE[R2YcP;+T_J-;d#C9G/kL_WV4nGp;g
%`ih2^B%dPpDY*4*bPmE&VrVMW]Ob:9-kQPE/rpWg4>6cIHn*)2]d5Ju1,n@LI@_B4'];hP)I7PYofBPCPM*`gd.LCaHN5ld<=T:a
%[P)=]-CBjbA"u87Q0eT%<QWBeQ(]SrBm2,7H#n\*PmfV>8@pVb*P`<BA`pZ8FN?.\Ia@kM4#8eQX3ETq!5?^6B,8+W0%fuf:*8-c
%10;]q&T%#IFS/E,Y`>8/G+`2UUB$r2/d,"$>J#_-2r?I#G"]h[je^e]3M=@,,lYpU"+q(POW<0<,Y/12W-!3h!=$k%LfFadD\)$:
%?b08+(]TRt)INqT,,"tY)+,m>[b@q<;jZ5K8XMZ9]W(1c_/Q/!T>:L2TK863kD>1R&oJTuE%%h1%\*;O%h[25e*'RtXYJ'1NJ%ea
%?tlPL0JsD5!WOQ>U7pH6N.nb2"MboJAr_jo]fp;L+i0/W)XL?H!mk$lQ.4B%%TS9.TRG(YU740*`m,2I3fIl8_/ckJ>oKJ-I@@<;
%<"!78Al@[PP]#dkQ1c]J@/c6&,e*/<1NYhD-;1*nr5,rQSF=MBNDA7_dihC4A6@Hm5Ns^7iOk:4K4sj]M\\tX2hk['_K<+:Xg^lk
%3RnV^'h5YnWF)GmlKeNsZiEQ*%PmX/F*WP/cE93;334q*&SC-hm$0_JII>F&G.p[.#h"1p(:V8#86L5hmW4$Xg2?fG0#c:hXuQc'
%I_X+CCo8^94kSo>0iN-QGhT'HG(<<RcZ]q<g/)E?S$URG[7E4#pSh,R$<5;\M&^BmP@V@2[[)N%9=(&$7EkJPGqC&?Ur=1?.mJHC
%<pll6WJ^6EqffC"oh(XsDMQ2IFquZK%R+.?<k^6d#LJjC1k/Lj_3YfVrbN..kM?btZ!Dnk9/KGARCl4U]ak.\l'pj[(\m!/83aGa
%m6VEa9LqCi?o2j-Io^+<`^;ftJ$u2G7._rg!FM?4f_?m-XhJqo2cgXkKS@pg_bYNn%l]0IeFL&aAIs7\?Gaah)-1DRi(o3Z0]fM6
%"RsBc8p>=oL4=tCYMi8ap,2O2KO8E^&IXe)^Vri1AStt-2EX**!9>okkN$jb!MB"jXTi7VSPiD'+"WtnK4Mc!,oZ6(/XId>(m)5u
%3SQTO5>&8ceAX9>,"YLlB2GT3JfaCm<c]@X$GeJeSNOoSf,M*jrO[Ju_P^IM8u%V`egKBqp`HK1@2E6oPqI.h*or6Z]-f_&Nn"2B
%m:f0/iT&jB&[:Q1GQHD$ljVMZLL!knJie\?K&DH\1uq[8//ioIoV6^&rh2g23bNUk)mG&BMOa\&qhp5%%?ajUGN[88:\ZG#Lj-Mr
%pNr3*C"/m1$Ih#eZ:Y6?qZ*e0kY6,r\O$J?0A:@Yja#XF/XK;DQ6bJ3Q?&=:n7:8Pr]Mq`?C3l)OcR^9DoK5leYUlKVa!X?:FSMu
%+cKqR\iEZWJdG\(4e]s\&\VMFVjo.@kETiknP4q!HYXGikF78!`NC9@mR`0je".Tba^NiQdVN0I4i;h[\LI[9-'"p"c$^+j`O^<r
%jaD(]ASY>FIgT(a\XZjk=J\O&9?R1gCiuF8ZSg)NR4Y!$2m\p`%0>SP1M65];1t0;PR_cFT.O[,jk[Q%*KR`WAX@`[J1.2Eq$_aU
%F&"?FI)g/R6Vgm)oqLrA%k>-CDRS2ij(>?Y\hp$eSsJ%F!Me;=XMEpqAk*i_S"4308$a^MkKN@PK\u.,ZB/\ec-)+"pQU(^qcc7N
%3RD9"An4lS18@0h0aFi?M)dQ/`m%rhC!hldXY8fBg>pN+F?+#pj[/.mppKq:S7kPK7lDa^[h3[2<NMS6DN[/(HAm0oADBnI1QU+a
%3G[eRbdm"cg3de-4IHSBM:I"4RhFirD/5RncTEh$eW(Hi="T"]f*g]%q&6fU2W%3c/ET%>Rl*DePAjFIr,d-'0u$s&T?OKuYh.[A
%WR]7a]?,o?gI[[SI?#)f"$:O@*l[U*c!85[2nuh?hp%l341CRbo[I?@OCa?@[+[+WrnY!$P;tu]5/Hr-6-=;d&k'nfJAr4NM\dtm
%98CuZLl\/Z.0k998b;]FQ;#%o\)^jJ6C,K0@;%)QSQ@A-:,uja%Bmd;C[n91\OSnP:W1UhC"CO'95=Z,G7t/(_Hqj!7b5\fAQ"N)
%=`TGa\AkY:3e(VHLX,`s(YcO/qWdjd'b0"iX^QS'@uZL^_0YsHkZZHC[g+F+=fb`OlU]<)\fE&ueYfI0[IKRT=mrIFL\3YcYup6?
%c!-TBI:RcD0&?RHlaW8F>6R+940_c1\gIu+VK_$FanJSm`5UJ&fR,hCM*3`R:JquBo1=['*@L#9_KSoOgkJU>?6OT7l]:4)ScUk$
%'0:#Z4R&.bqBpns@<s[@o7!/h0nm57D"bKaP0Ge*4PA(SH>LJf_IG[@[&7^cd]M9prN!Z7I$&O(l4JO"G&Iu]CbN]B]<1\EijQ>Y
%CXk?-[RYL^LCVuXK?fb<D]_^?Tnk"'O&s_!H^Z8=SA.4Jhd"gWGD!06@J;,9%p/RmSOV7n]uPdJm:5G4DkHl2[gp#hlZ;ig^mu]l
%oB^ZHXqFM?nq%60$C,qX;12'-3Gr!_`:5VMQQ9B0hW#H<$;H:88=r1`kX[#E:4G3GkJUkTgmNPJMU$#jET\kT)sM0tlZVI?'A[hT
%MNa3E80YQB,VL]$#Ka>YJW-MlMNg^^f@c)?GNI^2_,^.=3j-)(k194JR4hf]WWCMWhM9L_gIAl'gj]-qeVudln*[ORd(k&N4CR#H
%G)gb'F3KQS25Hl""8;Q</TT*+O3?(#p0^b#kt.CL=rurDl$=tqeBi8@^>hA`7Bh'ob#,oD[+$9"NRujjP$T\@\FcBh\4:I<aKaSo
%>HiGBT;t7rq_ac6N`q'>T4QdppjBN7`tsU0#Tn'^Id=T_FueGSpaPERIC_$-#6%f`2siaNILl6Vp>bktd%B`%+<(:!NUt_N;`[)3
%dhgX!raBe/$s8D'dt"W&CB^FQCH.EDT"bCXEA8;T\1YJuJ3&Den(!a?icGg28FY=o5gI5g%Om98.rs+6DNWLM0T:qk@anFt_Kf],
%]lXG)ADPd+$T(aNYIOpn[a5G<NmFabR-gFj0J)JX?n!]i`%EeupXl%kT>rud4bCA6XH&s3WfMdWaRpIqKO:p8eHf:d50$FH_7*;q
%)RA.!i0re)5g4I>ajZ&/<4qs-6?hi20uVk>#U(@9,(r)][ht.]7P*MG-=[Ej#:clqgXeg0mp:2@GItsQ4GpkEj#Jkk`uDF4'5n>N
%6i9)jDi_E#6?jd<l:>.7nh1f'Odd%CLidme*>(?Zfp""rdF7^Y8b=2oL8#3X`+>1H8AE-FPr'8oR#>^<[,4Pd=5!Rem$0R3,<pM>
%NP!m@X*?a>0a%#iQB0oZrCNMr,Un6jEH3ep&tqu_Q_5a^OD%J:V*sLTkX^LdEdN['Xl7`Nk)DO+p=k:"3r7nuIIBA4-@KP$R:OIr
%E@!:&IQQ5q3Oq[UMW%scS%ml[8ZMHR]"Dtu;U'tP<.WPPS_289^<GLdFick?<@4R-)4g@sBDdFCV$!!1+AG7UNca)k1T*=0_1XMW
%4:d5jrQ#W)c@(b`mG2rB2[A.d*N+NK13PMqOV\[a-XXs-Q(7>\&"L9(?b1k-!\:*&F\s]%\ukl>F`KG.:m&ns5SYeu5P9EY-`G.&
%\Xj8_;f%bY\m="T-Splrh4sk;j7Z3g,m+$ImZJGmk?8TtaID4mA3T@<^>o[)98FqpChoC/miE9pNl3P*k>[]gSDX"GWUl7!fIM1c
%(T@JpEkN3j+5<4#>:e):>uU*qQt!.g@_L0=0(s4Ne:k7"-sS#>?>_A\iY;R8P8-a9.">Sr2DM]pYZ,fXmSa)InZD.Ebr=_u94l>+
%CDJG8OU:WU-dq<f&pX-?nht<t]H!J+;&+R@Q`*_6#Zc5X9YH_cm(cK;qR!Y63.%)pS)T?NAUa&BYG+&&E`IrVD#hg\f7U\Mc9N,D
%SH[mp[@:jfX>[Z&0%L,`rOSR2e6;O3MJLWo>Fms:B]JHd;2mXfNLnd>?+\iMenajH,(BJe:L@E!NPsa%r/sHdb5G<8VJFMlh7C[R
%#b\^SHJRoALT&I<bBHn<48f$PmB5Gg-LQ24Er4_bH4mcdT!)Amc];3#_+_2kLNpRUp<`<K\VF&5<I.'FK)>'^fR%o1]X1R4Y%6;b
%Pd.J(:J\)alIl+%LO7@=':87?oCZ+soZT1IOd?W=>@/lBL[GNhEF1['f@S\f_21XMmCU*qeJ0Q-?Sc26nG;]([cruBl\ReuhqZWj
%l"Zc\(91H<7'0X0h/mP7/`,<`[A0'4gt^>\$g;)i]-u#HgtR2A>dY0X1V.jR0qfd(Au`rXOr7jE[;PL3^"ogGhG(V7DE?DX@_kC7
%;R\T3"+`9&K3.)$^D[sFoS3O?B1#It"FG83Iq6Td,oE#`iRN,1Xo@B!]hNg,j</%VFp9l>&K(jm'7+nl]o!<gV^O@,gl54,oP&_1
%HGOX@Z,7H#N3a#dC"s1@8^8:FMd5d7Gg#baWRD0.<329u^%j_J4Q[hQo,`<SL#6eV["UFDr=#=l5Mts)G9eiOCu(J%g3P'i<m=pN
%NmPV(NQ2\Yf$%qX^;t6$c]1([n$Rp^#l02Kn:[FebqFQ;oa1;fof9E-'n2-ec>Hed,iC-K4D0's#esfAe#R_4IcG2B9tHGmSi&p!
%lGiCIF)*@!;dJHJ28>&pOu9mjFp63UAm`=SQdC;BAT/!np4o$ggLn@9f.I?/Vt%@O>J?lV5,=,\J`OLC_B1[K>ZW'L'?YhdC(NG,
%]V^9k1`-C1kib;n/OJ1g\@@He2]9-BPm@#j7<g2H`UlSm84Cj#DuD]a+`rq0T,nR/+a;hb-&H.OFVBnBJgPa51$5.UAH$g;"ET0H
%fba<Mc(;AY%f)"!CK\!Qfa4-RlsOLMM'NIsF/bQ8H##qn<3OPDbH*5L]\8)?%0W4M4d*GgaeC(AiDTZP4BW9s*>H;.2i'#;5W\]g
%qCr+.p?:"ib+%c+\bZCp'G`F-l2>B*>fdLB.XFmigJ%rtr3M;26W,cE!c`jJ4V&\D(3bDO:e@)j("VP`S6B<S_1<AApaS8]oru1$
%cgTl$%b=;]YL,OM*EK*?6M)&DA+r)"ZOqi_=ALMl_/[=dem[[<YPo2Jl_O5"@9*.nKc%oTB;[dmEU-1Qd>b9K)S1DbEXhSS*EI\[
%YiI-N>D4Z\f!1.oX^"F6X.rc(Q1ZDMbs/V@,/ah$o2gW^\II90U'!Lqi`<WKIZdU5<ZR3sILS.Yq4WHV%'ioWJQ3V[$/q;%^1g0M
%mom[KDhbGW]tdgQ0>>H&0%NRd>B`V?@C3((%([45<?^cBemkf`:O(JEH.QI>*3":,*EF#h#D@%<VD%afm)#p=7rg?FE\1<bXqs*t
%NNgPdX@VdT3@A7#/G(^0\CEJSQSWqiBdE.q]igCRNt;f@)7a+k3jWP5B_@rGm,%W097uEo16d0LZ"BU43=XPp;kt,tTb+8O"m\1d
%8OF8d!JhtaATg_-&$ugIg_q&PE\D`@.AZ<ZN\+[nBOo&8pNZOo^T=QV>#.,0\l^VQH4\K?qWL<39c#?$Y@mUhS@O#pE&lNZ]lB!X
%\le:s/&`2UYY&RC`-LG+@WK%$CFNr/cD==#l`j3B(1""#c+HK0@tD&S<fl(B$YhiUE[ogk\U&^2MtOV9-nJeld3sh.m_bTc%b@O+
%ngk2tl`jd19h(CM1q4<:Zf$HO>*iOO<qhu(Yhi_3=a!bLM`#hFZ^B4f^+@&<J![B+\$iM;dq5DT?u6'Q97t:X:nlbY<m6\HSniU'
%+g:;n!O6rP4AYS9*>WYA@^?(H-i%>c-uemUJlOr)/FdHZcJKpX-1B65egPiiiAtP)=T&l`0@H8B$O]u(c.L9s93>U7"dcKcTbfm%
%eo9M.$!k8;=G&!kb_6huM<"s+eefT#QJ(@+L7>/^dCa:T_f'Nm_&C)Z01jg50s;&>h_B3d?Of*5kL]DD0"q<f\pJp\Nc+LWp0gWQ
%?$CMT#_4(qloL2[I^"/S2Wa?G'3Vo)8($IXEa]Mb^,taemUj@X*C-E(Ld1.\NFM>0X8^p=rSgr7>o">r,r#3`>PIZNB7,HuhecB)
%M04#RU#FR[V;42aGs$Cj5<lgsjL\^<HYf\OCCcnZ;spBGq"!6A;*(gQ(Z:&=bi6r+GAh?#J6Dp?',=:qm]Hoaeb0V9d=(peXA7&`
%mga4hnnR":RF"EU>j=cHEPV'D,-6.#LkS`N\p)oh<kYk+BQg_qnDr06RjH3/7e^d440tS!KLV?6'3AH%naJQ%9tFtBa.8'`]:R$-
%E2MF8peOtGkBZ)Fmj?Td8;#NBE]+;jfA/T:86=;b61UmF*]$!(7Z)"%O-rH9VG>ugc1$JK%22NFHCQ_eMQqMi*ksSjLEBjGRCuQO
%"$^[Sfo)ClTt6C@b/Qn:8CtqN&`kU3,?a[gc2k>P*Ce0iKS-rtP*7&N]W"A#TH"t65c/fcPq4c5LB,Wfko?BS^a<8<@-9(DQk0!L
%VH]&1F,KXnFKjb*lh+f`W/1ZnLnP'&d)?>sdMo3E(!1SOlg(e#`XR$`m<.b^X;s1L;#Ne920qjF<EM>+]6/[)YkFKR3YhuR#s%[-
%14#I!bmu[6?2(p4JV96>3ioYa>tQ^2lirf0$r`'#*N]"]qRg!P6:`%'B\AYK$XKhf[HOg7H></W_^];7'&o'A=3+:0U5K`j.1K"d
%19h^Gl.\l85S06,k_qEPb&B#_d<I/]DLI#VhGlDP7L(d*=0taX*@0S>M=@GN=Gmdhl5XM26bjZ%VS$GPJ7.[,R>"s0).9Rdn)>QL
%EHW6m8O+bD!P,'SY1&6-g&r?c`Qh99,U--kr$)@r(nHAZKCbm877&J>;a.j*:;J%Vf/!gCEWC1&M%$,XX@WVX%.kF[2ZK^-,p#[8
%X>5R/+I]s3iRd)BN9KRWph>NJhUF\%OIQn6<VETV9\QW^j-'%s@b>:V5+lNEDPLnW/$,KP:?]c025^qW_.>:^3("%2o$1-Q;\D4d
%4=)WrJmU0Rpn?%Uifjf"16\qC?oGfooWbe7lP=2\C0NW#k8_'U3J9-W[;I'Y$+mH[KRLon.I'rZ.8<AWa(fCgRs`CrCX%[\-[^hS
%i2?5us7F$.o[)5-Ps1"k*e&&2/Qi)s08t:7'n9%d=tAZ;=J8kK!%<08CATsbUHOcg.e%0jK(e=5]1.G?Os/6chb/,F@3'C$=g.as
%Li6TB?<,j/T6>IZNVNA/.2Dm613^Jq4Qelu&a"[X2i[B?=\F1,^T^)JCHBC1*[?%e<PMg:JJFa%b%P\&T4SCAMg$Wpk(@ZqfY"f^
%JA=6=VlRHDPWj)WDpq&o_+85Rfc[l3$1p5REi)-DKpJ`/lc"f8279C9(i)i-!8X\a!1d=QqW&j]7gC/R\XRL'9e5MB7_S<OEQ3tn
%=0\J@^e?eq(V7:@lVdKY\o^gJ?<%OTXs$q+M<`YA=*(ZHZiP'_r*$s8q3J7F9rQD=+H8)7F^QLVgX%ODeSaX4Fe,*\DKH<7HIX')
%"l1:e2j@Ql:JE3h)!=cOkc'k0=g*VP:aY?u_<mD`1)s89nli*-m%u$b5_BleGQV+.=]'sO8kgI!LF,`\6RGGjesglUTg"F+/8#)9
%dDk=-5gtMKc%2JALG2pgdZ+(fk[u_=mA+0+p$o6609(0QCt_[lG/$&Zq4Q*C"FM:*>*Jtt6;q*t*td3pZa:mmY@P+OC=sYBgtG7B
%kOXaFM`!Ye7c*g_7MDEe_c&\(r4:iYhS#Nu8>h`3T]T*G%'L8i)1#.8.\LqF^a15d]uBu7!_Nc?:T\Q/(P0U&T^dEAH.YH?KE_ut
%4:BZ:A:m$AqSn=nZr-#,-rE<koBc`i.=(RLpsIqYXEd#_l&.#q>F.RsZ_NHLG\thRp+3TKW]E-7<e-("h-<WV`ZQp@=:lV\&WN#>
%<+Z8nP1]mRD2/n&E9%+(ZT_+7X`XZ^VVkUaD(3T*2/TZK."&rI/9@bl$NMLo*uFj$WGA5`p&8PpH1`B[[fW(#]J[JJjCVUT;BhQX
%(@oHq+02C</1C^sTHF)Cnlcpql`2"[jL&U(lY;*Scl.1D#CGqc2@*t$HZ=>8Y>+%6[4&^t$;b'PcP@OYMaFR]`^<C]iLFCWe->[D
%`=u#u=-#A^cS27VJg+GJ;;Ra!D^pF1TuF"^;[8Z%kLNgm6o7_pGO,Q;;Ccj/`R4ZMO_@^IF3OAOJm%9f[`W2dF`>GNJ@&Z2l@]5U
%%1#L9'Jq*BD4$lc.dPR5OZ$#?,PB+E@J7Yabgmdn#/h=mZ>Cq$i>:[b:-I2G4M-V5[]@@_^Sm*\Me1N86d3)_R=fotbX,U:UsgD^
%GEkKj/s^qE&$]ZrqEY#Ei'pXaG&7V:g_=Fg>q<3p/sl?_.*MkCR<uZm$>h?<L%AR[onj=%(V&U2:'uJm!+l3kINt][GuD/Dn[nYg
%<9B7P5<2[JXo57L/So0E#_(Dm_nfhjMIT4bQ^5S93`"?:)HD0aPsqQ1?S_2)%BUM*lWR/;gC4Vj`&u)7'j):IYV4LC9fpOs+*&3e
%kCEFH]M<;hRZUY"lAhOjoW#_g=[lR@qf2A:550`4@K$e_'^A<^NH%TK)]aLp9U]n,DSj2s@bl]g8!QRB<-XN+Z:VfLl^R9MhVIkN
%=L[DO4_X5L=h!^NFo.!q$5U".>.;aW!-I'NY\p`RBM3&(g<aHt[]fhf)u9`E\5G[5AsBs(F$:0M=?D,AS[ObqbB)+3BdM:<jSILt
%=[tASlNf8?Q)ZmXVObm.nJ,>K9&5RlJe=IdWiqIq1LS.&2Od:U()L^hp?BTpdkUl]Y^=QJ=^6T9jk\/lB&$%-"$:F8c.%fA#M=n\
%lIQ^n5M"3$<>A0/kUqCJ)HtCuItX?%o3q6$n]#g%\[>.SYI3]F2YfkYTkE%CJnr*F,A<AW)Y&lqV7(Ql_8h_U]A$[+rQ@oLSYNor
%)=`cs7MBao6L-,De,.1\rtX8nH>\K"V]4@V*"BJ:W?HoAs$jIE2>#AF5AXo%F'R2u53<rZhD^G7($DM0\i0E*k3B$(]_7JAL/Qpm
%qT$+pi$tqLdZ4"ubKJh4r.])d92d3%:lhHbFb>&jP;YVMmlhEg.t+0ScL21$o;tK0-8\)BI<u#&HIKWH\Ebc"dtr6u88eRLeA=J%
%=<bq]>-&fV=uR`ZK?O%</"S6Nf-gD^BcKV!Ff$*YW>\nXV^5#d#!kig5;:BYKe:&YBeO:>qt,r3\KBH<5SH7O>a0\g/nb(o@s)Iu
%M$7aO2N?buE`;h&o_ldp^)FC56kd!k_u@J@[dj]134Mqt4C4M%/?FB/F\h4hIH.B*I,p3H#en)KHs*6!q;ttoFt]KKUjp@,^<M$#
%!1I9$SSn\4AhTcc3e)T?hr_V"OIKU_SPL;JH@,I"M8rD1kM*Y9mu+JonY`kfXi3?YbP,T(f#8`acF8'Phj<"F,<rf2Dt@;L08j+\
%5I[2%o3OW&VYuD>I*:)5])Z&JhXfd^q,Vp5HM+UL9[VUR<-@91jk8q#:4FXSKP'g")@]ggB\KgQ9/`=`BJd)7.jo.<;5IW]>+(JJ
%Q=JsWU='F.+/stkT<E_=5uB3KUfQ*sbApd"g4h1sDN3MU=iZhE3B-CtP@k6]QG>HAk1=:s\lE&eq2I[O8GGBeTmH]MFk`Iqd%r,b
%m5,!4-WY[an-Vlo$XK7CdbVYsCLd8(4^$7BlYUfj-232\KQ=rt'oah#ft>$e\(82i+?!&6c@1.had4ls=7:RgTAFb#DSbFqD7f\d
%q@_U@$?!KQM9=CsUKh2*7dpH3kcZX:ALUf:ek&iH\f8Tsjuej(AI5R(lD.2`Hf(^g"t_[&qfm.o^.V\H[Hf[47E?#,H_i=UjZS]p
%$Z30Vkg]Z`]J`HB)^r)<$B9*SSJjmD9,/32q"6;oNq5\'&5Y#"gU82@Beu2q/>h-K@<bT,FIS'^aI^9"k5@5>9oVeqO.9e1b'O5g
%AnYlC>P2Z%X*8k-g/YOljo%]8-$8_3Woog1d;U2uMlN\(eG4[H[\Y*Lq$^_BX_lgeZ\bo_kuHBi[QMJfRu<a%Y7TFMNN4-9g:#HK
%[L$ebq[Rmqn'eG73nN3%@l2E#mtuYG@Y;RIXl&$KDstmI^l0j^$nPV=Gf<ucq!kq5OK7!5TDu3EY]m6%#Hp:]B:]Y![^"(RX>I.t
%CjP96O)e*ApBS.nXmB0ChFgS]BL\e5"lNuSUX]W5Ofh@JFE:6+M/:qL]5CAV>t+frg,e4N<J(`b#ia9`aYg3Ii'+*#Un[^4NKuuI
%;5(I8J_Ib6:LephbYM2E\%>BHFaa1Cij=<UbqC"4DhY$m^G\hC-7XYUTVWcYFZhS:_%uf'HEbI0k:7\bP-p#kbQ(B&L!#mn_L8A/
%Z[&lakSK*@s(Cdp];*BRrSdLa<k^p&!A[ZoOt>9uarCJ9H(G<c%5]4n')MV)c1BV\rS(PbjXO>sCZrLqoZcX.36@1493]i9LV^O2
%rMET&hR'ns2rANG[,1F9Bg&OV[mma]F:]C6HZh0q)`)iOIBep"UOi+#ejP+RBT0J.j=fB"s/h?;]m2fs@-`f*_%"PB)r#\VY4(^i
%4:0g8aUXd)b/j#f7"^0/lJ64mW)>>6Nmu^Ha/;d7OM3k+27B,"4V\aV0Iop7c]<>qIb_(^s)\CZ1t68rkql"E/^-HXQo$D_o%_lU
%@nAYU![A[aUp9U$7?pN_B*P4-NEu8Ea))=L)'VPZf2g/g%gZteU'TP5PK[3-UMfh6S.<d7l\l"[+#mfS!tFa-f>WQ6H!U8@K1PPF
%1@og=UF)Fta.F5.5B_!X?IKmT0f/FD*03^4hT35X4YlWo@L!,K1j!PO\#:qDF;)sDCHsp.OdT:.K;7Ud1s!n1C0WQ+XN\>g^%p\r
%@FCQh;q5@LH2>tAINb=[2hAnsn@PRSV82c[bKPgj`XTTi(r=\iNC#9'-(^McK\&2sqM>Cqh(]_@V98Bp9B1oZ)]\ql*VhW]%Q'T,
%15&0ie?4S,YKCl(o)*eQd"W"7L-W2oE>cH[2IJ<ZhT)NWp$AYmnZ79J<?lg:l\poBD,R(S07ND%*)ffA_ODs<K1,BlM3L'pWJd5J
%o"gc",9!EQ26'&g%j%Z@d/Td(4<+7b*=im$hGN`$2foKb>1K9/^XR,k64-sdmB/F,LPjT5`NV',qpMjF$Rb[CP2/4oXu<V/KI#6a
%F!#-+$XGJ`rDf>"'2"F9rGrTCZ5@-s8[?EARn/\n"r]]t(8Gstan@3+4ZJGf=dKn1$%ZL43A?,cH66?Kp[NNY1Y<84^#LC"eZuU)
%-ft$XRu&KR9pIU)Rje',-KXncg8'r'Rd-JS-KRu#ep(BY,is.R=cA`4f3_tqgdK5tlKt)ZY58)d8'FDg@qGEL^KS=M_rJW8QNNdB
%(p-Z+Z!MF*'rsAb)p>#p,-=a-\W8[aY\/Q/l'bS-4.lC5Ha&D=-iJEXc$>!k*^$RV4_sgL$$Qj'7A$E;hGTEU'Yb1661k#ecSl?+
%m_.@;s7+^lFuHu/G5Lh&qcg,EVjB<M+0QqC\.AN"bH9gT[2o#:f#E#_Iq)u:q)6qZ4Sk0rV[J8cQ<S:%W[<Gm8V"E6o;[!j]C`r$
%q]//IC>.L/rHi`T]63UCqg%/;eX>m>ddE_$9D1G-\,C;,]I4e7GE:@&-i9SNq-L8.^@.]\GGCE,?gV\!G'WVRphFHq*P-;.%3NJM
%Zmk6<37fhN::5FtFn+a^DnV>4h"gP+h65GDPPnh#lB_MFX^ABkpW&?\^,hPR.GR)]r39>/ha,#q`Wsh:Is()FWuIb@eqrJ@,BMsP
%YHL.R3`'p:rV-+8J(u^/*J+&WY;@.QI_FM93W=t5^Uu4\H=jbSC8BAW#&jN&lt!@!WkkflTtLp4*%W.R"m=dXpq;.sLsI;ZP/u+N
%?@?3hl.a\QBE)['Sl<%;rSWL7U"en`$-&Q`:9qQ>*Ja8NklLJ=S"coq,j(2.2Ob/eX].^7rk7ejm&X8I'Hb]%A2ELZ(t`MU-(F<k
%ekU!GGD1Ke$>"e5@=pK8bc/M<4O1XNEA4%';]/Y@8\UQc@UIq*]3Gs.-hc)%oi4HRM'VfFfuJ,9@"O5`F]j-Ddq_j<I=;$bP>(?/
%8NJ5gfJfD4]5_:eSSh>LTZ9amWsB2!X07-_9HpaF/uu1AfSl0L=/T=?+c;IVm&S=p/%rG+9C26_@jS1Z#jn0f@UEDA?XU4.<+94j
%%Z@lEU5=:]goHW6m&QUSDAnsO@UIq4L7qW]9'iV%l5Lj2NKVpq2q6>q6]O&aZ*1.5Gg++?cCo4H-\f#-_W%djCQR1-"Ob:]m&S=p
%o.I[I-MGu$ohEsq&0*(&YASlZN0SArqZ=\McBb%>/#+Kce]H??^NERV)`t=./uu0#S7`IkI<E/$H9<O?fG?/"cg#;EHhPBK_u-,j
%Nr2`fqs'J(eQK_<W5QF8SGMH*;gjg>X#a^Ln+Mg39l!K5;PS+>C?*tu,7I+iF7OD![1B`S:`$kf,0-LkpbhLT0sHRCe)\'g`Ch4+
%\"f[4o<c9>;,[Ur:OB]gC;d>t.Pu`(%K)[WRs+Pkm0`?$N2hG,6"cUo51Ad;Sh]#jptkX%Rb#m4Wlh]CDOkkdg!+@,UJhrlNbrN?
%2B/Oh?QTW'CLZt_^YS0Ag;m-PI@L6o[rRGXr3*alrVHOO:6k+pr,9Z$kY[iL9m)[TW:0aFS=Qg[q-T[IV-.o`:sK"Imb,)L?`3d8
%E:^ia[I&Fu*nuol<h?5t*W0O10ZVoWP+0T2Vu[P,O5&]Js5sWUeott[m$te]iJk`CGB6O:BR*<N*GM>d`m2`?>o+:)`B>1!#/Q:O
%DK$mmX]N:a&C`*7VccWUS@%mS3jY8O$FYF`D^1%bNVhVEoU?F+eHQ/L%hi\HUG[pWDAHtUUGW?%miU$(<,aULR)?Aj/5KI45[u2<
%ngL(7p*#t9#O3>'2-^[68bCu3b'QZS1u%b%B,h+s:BF=l]HN$0Oo%aP`,H#91uBX5XeW^%cfi0b%C$d#Rl+YD@-F%dkgoZo(H?a2
%K!#fh#pdN4Q?B@2rQmN^Jk"M^T9(d$F%?)]r<<bp6(JGmiI5OS7*MMW'N=rl/Rb;l)[p5@WC`=/O</cI,lAc1IdfVQq`%9I^.uY"
%01qifMP3rs(@rbI]oPr:F!!L?rcK'6LJ(T^hY/]'9^hj<OhQ>%j3bL3h_=f0GMg/D7.i;2rcRFrh6$]H\jftRs/*eL+?5%oh+L^#
%>6"7MGRi-qDb=1Uora*7@'n4tN?3NJ#);_+bk?J95BNn[9mch[*9!geUsWk>b4^8^Z`EK0L^iSepQt>Y*CRX%SI$RddjXSi7!.ra
%"-fn(3]M)OZ1P)KFEU+?N1>;L>m1$o64TW9IsGq2lTSXHlcba!M]HVU+.j(/86'T:X(J6Bm3uX*:8B@5WjL42mF$`0=CJ.'b>1(F
%RauGuBMGXB+'W@mBh&WTh_ikGT/Y#klBb'7m^OY-Q-Tl*GPcd_7&h]]qX,ples(XEI'"P<`_$AR2,S8h:qdp=g^A%@H+,GQH@/=F
%Xa/djMrC^OosUl1Zq3*l//edh..;>S^"h';<2M/ScF`HNmHAgH]&qK_cGS,"5Vl)P0#CBM-G5d.4QJ7@Epn1S4l6+:2V+454ki)K
%E9kp6b2T2:f=o",FS+%AqiYUer:TbRIHgU=9jpG+%^$p+s.tkkG^&7XpshuKhT>Sk0CFU]X_MX_b8[WkFCaN."h@LD;Z`#0]t^Xp
%IPoi>(4'O8](<8M_tc5+'t9Vjp:>JEj14P!VY=/1S:C@1j/^$&o%%nA5I<ZJC/$YE-V*U=m@BYhE[ePD*(G.ANhjko\Wp6O4`]WG
%qmPJ<lc_\[@+YP&\$+ZWnPsf46@="KIBUl-GC@2OA(FZK9kXL@#NoIfphIB=8bMHJlGJXcqH/d;(uKerql<q*:U[<.4,^j+'gMMY
%csI14Q91]08F(`SCd\_eN8?3m?>K$MOEUHskuPncC#L`)c8^Wshc%Ed2u;`>@:?Ks!Le[C4(!+XD)RC!S8-F%m99PfW\.dR:&^:,
%#W@GHh!.&#NS;1YWM%U3e,650iT&O:82aasi+@OE[Ad>;oh>N@#GCA0J,m'Xk36jp!k0)G`si:YD/uZITgGs9TEsOC$%NIp^^A&U
%ca::#^kSHpIg.o`_h<U6Ro@"?H'E[I]h]'(T2&[EN=OCEp%nMOQ#pl&D4AgN>T3NP"2ElHr3i3(\eK%Oq>t$2#)(XYl,^Pobll8=
%Dmr=b@!$bL:dsjLf[I8UiW"A=`>7\fko;.+oLFQ!]&G7^J=BEDRb@kWfhcg/&rP-%WL`UNr?bG+H@(gDo\T<22WUGn!p'@ROhZW+
%)!l+kp]uVVQW,iW`':j`6[VUh3t9+QkLn7oT(ahc2Rno=,qj8"4BK/4[/hs'D[ak(DjjCcblk#(9hI/4cElh<m^7nM?C=j_,_6.k
%M%u4(@J/sQKQ9_dY"<UHNLZ=p\,hs*2&3LOkr2fG2UDOR2H;*G@^PPud%`5"g[@/RBS3UIL-jSo&*T*G)rL`;C72^(leY1ub$se<
%nIF)_0]Y/;Ua.kC8$$%CTi2T9-W-Ls=;BAA:.ag4`GT@EDNp=:1`ru!$AT[4W()F4TiR.O&tA#.k4b`#X/Y7i__rF7jds^q&tA#.
%2US>tUa.kC7i^U,l^s?M.b!Wg=(ej+*sl(AH2&>I'b3FS"-U]n2(P18<%qf;bmHV=\bS0C/*mOrrO\L5p<]T_h5kQDZeaii$E#qc
%_>QOA$EJ"1DeiBU00hB`Q0TYro5kmM[2Q4,iK.'A7W!Ae;QK5'LNS_.,;hUM+!Oiak]%O_p0HJ/"Ce$A9rP'lUP=PVX'/5niF2b(
%LJpS$H]F5Cd2AlFEl5dUBtiqW)#=NXC3USgYGU(5e0kW7_oG1=Z9SlTn?@DO_l9p<HhrJPA(iu52E^>u!%=J-5f:M=B`\`r@0\_R
%Cn0rS?Gj\'[HPccWB\`S1d!=Q#jXHW?TDtjL55_OZW=gYV;Yjd81NkIfYg;,W8V07p=D:jH;MMs+o2n5SWVg9gYl++hV(L0&,VDc
%'@A[@_o'&_8kRstkqtlH_ZloX&e,BKB?,8WrV-g4qaW)g`!2urh!hNUS!@lHrV%XXoaGS[fY?0LLUK*OM"d+1ErFL\oXN$(S*&LI
%@OW,dh%#4<!^.GCp(n1Le>Q4`*nH:U2"1bZhsdlM.",#cL1tnb^Y<0]:Z67A(C0oM*=>N15f:M=h%"N)B'b8-_ktIK/H7fuG1`1Z
%%;L,IVPr@YiF/KFL#Y*Sm,.37\V`JAiSflH$:erX=<46E>[`]3R,Ju*ef!A".g"5!iF.5DRm/]cL55`>*=bteS#>QGm<1H(1jU4D
%iSeb;VFGHJfT@0,i=_Uu0c.="iSg`G\3i/:lnaM[pL<KFY.W_%%m.93eB%f#`bp%RW(R!_%1i?*_5bFcN/!+1Bl'V$<l`c\C3\B<
%]D$m!j#9*eYMFD.cVYW&efh/0^uZ+:&"DjU@l?Gc(8<d3_o"*`Z-r$Dr61N;%u\]7m<0<L^l6n7Y^_gRl,=[LiF.4s:PcB_)BMp,
%enNGM?*`^.GhCn00f>W";<*CdrOX(F8Ze]V)]n-_W__(9*qnPC].DS'MO-JOKu?74Hd\]Flh)3h];e4RXLBi>O8#:3mNG_s8(hm^
%">-Illh\"2!<MngSH%/F#?uQ4ra+S2>/#4=MOhIc;-8$<NfWkTk8@_b[q6C_h49OkT79Sr&S-%/bhfmZZQ7:2bq/=uq@T4WcaOJ>
%Hi<G.p>F'0>jL/BV=gJHdE\Z%CZg3H>'Dd+pHBMll2Bm`HKEc0`B3gC5.!Ph^3GpqG.aI(fm_elh*.F8]/SaDlOU`o=o%jVNdLKq
%n\JN.oBG&Hn$C?kk2X]Nc96U^47q.JLKC*t5?O=8qY;c>H/X#@aPED4G'E&rXI6]Z0)Y_6k0<^/T?k90^V;tBbkoS_VUqG&Ie7`Z
%^%cbn7Xt:1FRcBAZl3ebhd2APJ)A!Uh/F/P*Zr/Ck)N6cB=KlJkMNi]-hbHYqaFiNj2GfWX_2LWS"7_9nGZNR5'd)I*Vcr3oa^%T
%^?_&N]C3&5r<GPP1*?HCpBL"CJ%\o"(=lN1Dq3g)0gZ73]m+p@AnUtCp%-tqV1\[.T>#]#IJ2lL)1-F%a.IgO5Q!M4&a?F,noWEM
%?V<WC]*O5)F2SrZ1Mba++('h9%mCWmrqEELs.eTmdGjS4PigWR%P?HlBE1XMXpu?$h9PqHB5X8Xa,dtug5<?4So$N0Hi$[KYj*8_
%B$X7)rL2M!-Y`L;Il0#`Y4"X@]X5DfBhjh8GLXU\a10r$J*(+"AtsE^nS<_-b85(uYO'OSo*X*`IG[1j]D_*L]>^nMcZejl/cGZW
%)bJ"A@Kj8Z?QA5EW+c!K%Zq7i:5)"fg\.KA-T/rqB0oF87)(&VS<uuLkiNEPp"C&Y8dt.<1&\]2c<o=4hVQ\);AsX)>23Ao!,ZS"
%DWg.V[<1[)]6pWfkP9&q&)$2RnV>*Q&%dbs`?/:B+5S=L`?1C-54`:E;t2d]]Q@Z^-ZU3p/qgGVF!'t.mk0<Dp_83/rm9dSOD8EO
%2=aAuXP.B*)uNEU$@1Zg#"AkkH`,Q:Qb?rF/^rB=2Wg1CiVf7Jr%e1Rn20G0DOVa,5^`G$@AMeNHr*aHN;b%EcXg@fnsBn@5-=!\
%g[i(1dIN3b]FXY&%<]X>ou4U&J&\Rf-G=HhG5h5qcYiX:qI+\6%Fc"AM3UDjVI[&/Q<uQ!IIV9el&^&JjYiUNOADTk8GD3!jc-Yq
%(U(L/pmg.=Z1`G0kS]aTVUo0,]\S#qs6@%ahgbVOhiYsV4PqDOs&eH\o7?nF]2[R;4Z^FHDZkD8(B?@WH221Cgs[&=7#6?"+@!!C
%1co)00D(`@=)[Y*AiBO08csIHGbi<fO$E7/$-BU<DCF5OoFh1`#%*j`TCukUY5-?;\u1JNI%W,T=ip^5.F'Th93\L[K3<K*NKCpL
%.8-6"ASZ@4n*7m8T8kNeftP$4s3[*(I,k#)YO'Cr(FuWl]mDV!Of,CK0h%VC2-tE0b]^H2"WYbaoTN]#M.;HJ4JQpXmcCpK_p.'l
%S31,k](.si]DXi9k$[(K\dT,3plq5*?S5U=gAh"*/(H%$!GmEI?UAGIZhJpGrHS&#`H,*F*[U!PYFhne]DfpKk>iD]T:T9?5C@ls
%ARu*tb3)gMo!<Bfmd?'UCMO/VnYeU[db;6PDY<t!HfqOr5!^6;2Hq<pU)8`?IU.:Ddk>lc_(/;Lm/8/U5?jio0HH/98g7G8^.X9-
%r<X8U9())j,=D#@bTHa5rU]#q>Nk7HeX8@D^*,isEJ?KG^?%#o:YS<Wd[)9>I1V@]m$4\WFg=$`K"JMRg(jYG%o;CF#uTpPaaA(<
%hfsHhrRrIA=B9L4pqsN.?Qm=qKreTVT'gF-s17nY4L`pdUW@no]i%4'+`2Y=-R:TW+k$9qYN9dCOi`S/!Q4P!^YY3Q&AnIfqVeu[
%D%K_oKXDeIBB::mm=U)s_BPU/04D$Hf*N(0cI;rIjETcbEr!uY45&>JF6N+AFaa5eh=Gjdf?4uFDdM9_J$=$9le2-N_q!WdX,HUO
%rFe8SDkTX;B<r+5DS3N&IcnkW:Sc1Bj5[$_n1NM[i7*%_K4V2)d,r6-fDFK12*8ErH0aYZb@Y8Uh:gnK\$*8amXJ*75M)4QkVJ\e
%^O8,qhE4d'rYEGA?YJ5MViY?UqW\E=37d`&k>/N%^V'KWpA!l.,a;RpaH"$<4o.&-3Vg5WE-H)9mo"Muji;G7=V@OVUq];U^@;*G
%#5YARQPrHE:Wl>iY<UL*mIo(Cg[@npW7<E-^-4+"4E/+^SR2>=EMc+2P/8Xnj"*t$nfPRW`V-p:>J'Boo9XYC'$_$%XFHe1HSF6Q
%=0>fCfPMNV^Y]">=)Q?%^>?MBj4`+ma.)4("0>ui'uXl3am/"ZHTq9t42'.(GLeEIQ"*TN&+3e/"R5Q44gn[8s""ka.u<@mh>":(
%nTa`kV<=eX^A<9@pr2s=V4I3npHDm=,s9,PS%h0IH,u?CAEM.5c042AUJ8=kQQJ':mQ-$aMT:N4(PFGh3k<%H[GK]R[o0\W[L3MK
%q@T$Rj454QosYo"qFo`1c._^3B$%`C<kgf^QqgSKHM)%=oI<ViYItme6rkDsXtH?Lgg8a?1WMmT2]o/?l(-@@/)=Rd3duGO/ZFq(
%f5DWmIK#ZVGnmG6TD\K./$.rJop?:?0X5ENlNhh2l@=;%kC7;aXFIp*oQmj7>WNa[fT&^CL0lW_VN0/co'(T2VU'@cR?$$_g!H,V
%DII>A:ZndUcO<u:&[p7f.m9uGG"oa/IF:T]3.4B2[ri2$fnX5+;dhu-#r7kXeFQ9/)ap*F-`ni/LKZB[VSS^J*4P(2As;LN4'd'F
%`]n1t8TAQB/+4>^mEi#iSPF`n!pF7Yn%R"X(AHRaph,"e8T3LO?fr6Voh=]Eet\YantfV/GAkqP=qGRaQL6kb1p]$Rb"jV6[*mO[
%RJALkf4S8W%pn;h#g]]1Af*!3hdLTWQ_`W-07.m*#WA0<9IuX)9r$o_'*8*up[56!g"s+0rS$9^J';cdI-#7nNm+%=20lf>(^>JU
%qlp"o_U1*[%'R"_<VQ@^'Xr5Nq"iHleYfm[h5#ID4L=_;h>>tu`jka5I*\ukj[J?YY$(5.>?JT0qX_>Dp;?XF)o#`AqU##<Kih4)
%"i_*&)[KG[kSg#-2s"oKR3j+h_k$4PE!T:XiI!t.XgpPK"C%G>>9HXBMX$jZnDB0J<&E_#KsilJ^&8lap6gWDLHc.-D/R9J?W!SQ
%`.$nDqf"QhBbTG\qXe6Ah0tq[0!SaZDrs6t#_QWe!B^5AdcNn+5!lpDjW(Oo_g$N?l.sBapbeLCqYB.h\-Dp)_7;((-hh68huB:n
%/3SEn`VelS7l/W*Q+cs>p^Kap2!Ha9Dblq4KD(1RGTo1c^JF#)>n&4^f&$;+YH(/XQf$9d+2/SDeUCm%a8&G`gPu!mSdVFAe?#'o
%c-t@j#o[]#dKV?E<;ujsqnWOcmD7rR(Oqs1E;b@WYlATWabimJYUk"n9-snTq)o\ebVAi3o85IdF#[mOgp7U-8tQuVY`*eSL*A0C
%0%gdmXm)kO/m3YO`ZR!1/m05"2u&sf2WEuIDBhIb)mQ[)NqCo/obVi(Q@;6&C\nY1DJu[/>,H",h_/?jI(=\%Ao5T%^Us@>iu_@2
%No,5oG@a3+9fLCJr3`rCZERoK+0QqC7PkkjoFXd:KTh<6'=;HNh*-ESdT.#'_:lAleCf[md_e`1;c6A7**KV)P*=dmaW#(Ihe.;i
%,dc>*#J[H*XX\4LF7>UT$tI!kmF.X"Zq4sMJ%t*R:;<j=Vl<P\BlgVag+]&Q_lrf-70`V5"EbT)l/6[DF7SIdj/,3/luC^.0)BfV
%qg%]gIeF.h/sh!&^p(kM53#Zb0"bM;r8`pJNQdaee+UBkqW[QO;tFiXZ+2^#nR^k5I+(Gh#%k<<Q071PUIJV[2D9;S[Pm2u`?FKt
%]Qj+-HT%nCY4$u<H;7q5q_)'Y[0^Yirrpka-F:hm([MULj)8u<*?N3]36!hAP;[tdDC29@]ug3hN8UL?2VB%f:0/5.#3cjO!Jgdf
%,T@gnm<+Hb$4bUInBJ/i68e\uFrK7!_])0f%i(.r`G:OC53?V;rl+A2X<(Z\rN)4iou?#&EJ[bOSc@r'h8onH+-<a4P<T!=iVq/R
%ZX8*ZDZsoafZ^`>h[4#IP=k!^7ehm<8%WHLDcb0o$oU%OQ")q>0mpPGTnR"H,Yi:Th'G5aD*:0S_jn=.p/;+UD;N2(IP,ltf5liU
%*gUJ;&=_G#Spfs7aB1F2E@P-,/Z_-?fH[)<ELZsS7bZi"n(g-c3;I#tc<o'Oh]?ghJ9Z(ETi$8qY8fa:MlE;c+'qpY3mEq:o6f]t
%ns4sn+0WG(<H@`B&$ldRPO]RJ5f,du43&R9g92BAF[iSQT=hb&+)UFRQ(9S+'-=t#qKn6U<>-M6_UY(K@M`E7`60GJ0Vbg;]j^=2
%,^@s(GuS<M]FL(nld`ZM#osJ_Q?'T&Ils+K#BOr-%soi$._"^68UdApX#&_Cj@JdqZQ9W-lILg,"mbch$U!dgBqP:_8V=o'A_K81
%Sh\@#Y9"5NQO<8eJ+$.9_f/32SBP5fH;J=:eMVkABjG3OLN;;iFTY1LUgekRTFkB!0t;3pok*j2(+$^E`n3@s@r\#mKZ>hiT^I."
%*J7"!&$q?q*%])P)Uog@+_EY0]'O-Aj]kg)_>[pYa)h$^.H99V\aXj(EmNpcZe7K,c3X9-&K]8\-6Y4J31f(G9m:,#4I\J<^hP@j
%kT$?[T"T>Yjmq#uI"6nYSHIed(.]D/B[&CtRsY?bN):YB51o5B""U0'g=^lGTkKa9<./l&4G(uSj7Qlq0A^e7fC5U/_9I?4+WME2
%o6jA;e'g?bT!Y)eKMPddH.3GCTbc'rdRID2H.)O&TKX`?^=Pql4GdZDHKNZ<lN_kIIIag-`kkPOd.<aiSRWASF2UXl:r/5b2at_Q
%GW)$3M_6?id,90B-"76l0POS1%fSG<@(N\oREF<rQ+_inmNi9^4#9P(k*J%0#'iY#adCh!Jd.LNM/H12Sq86)m<;"%k5Fao?IPYk
%C?a3Flg3Ht$&Ds78Q)9.b!gAgE)24]rlgo4l&PpW?6Tme*t7_5pt*]1&2SN6rn#tN=^M"(alQIH+H)QQc)=<Cie05`'M:hm279Dg
%_t@f'_&n9Y[d+m7ndh#HVOPcj+3a)::M[dZm]#2aDnU/K`jLL5(4Q,"`_u;]i6t5AU<Bc+,j+coUcuIPq;W85kSk$If";uu4-_6k
%+$M9n')KCVC$j4nQi.sXh;PI0Fg^,<#-I=010Z0VrlRrOg&pHoGjrY-ipd$I>HaX]`)/A?^#7@3>;>j1EKFk7k>t]f'McN#l\Fk'
%$Z#M2J)B(pI<4OJl-U._J`7-/YNCm2=la7%cgP[W*IaZa;',(1.n5*CcCWmb4h1%EAbp-.dBD4V>;&4tO0Aggk(i4\^YZ-UWNgA9
%I[2(r_(mrNOs8<KR@HXXq-X:`mFh&0?9aEuTtrt+RE&)QcO5-?\Vf;7P::s<AW3`Ah]2UkdLZ.kT6#`o0'D];N/F5Mg]fQ\YMU,K
%XtNNELX!$/r_e.B_\O\s/dtoCHure4.@Yh!H6mku],9UA]V#'ZQ$9s(-'eN*H?6eegi`Lk?%1=/SA,<A^7g$_4G+:H7MS/Pn@:WQ
%@_gti,H/iM_=mc(0/b^)e+rCuXZK<W:QJ8cg$%A3A]OVDB(kN?pIL-g.HM`LVJ1q/d3hk6E?]+cD!UGSWB$A':#;@gR@9$I8^j3h
%>!m]n2(+cgq>X`mqCSsU[B6jYFQ/I"HMQO'_h6ura'V#Y3LX9CqX)GTDp)oTQ$RKCnb`%M_85/as*)'MIK.p.K;6o[bL=XMO#Cn4
%9^UuYrqDHYe)#??^-!5a5A+n$$ql^^Cl:V:2Lj%jI,-g_nCla]n'R'ZSRI$>B'1)LrX`-5YLZ]nO"GeZnehIWm?tq#QQO$m[Q2fo
%mV"e@F`h!l,OJ.umH)mLqsEjo1D>0FYN*6I%HdW@YC0MWqJl8\lL!s!HFe1j=aU&CbP:>Qn`uOhk0*-.O12<p?/+PK:p$SB09`sq
%BMp:U5>3hTB-oM7HKX)+bMUptXW/D>_*=FGm?qU(LS7_3PUSWr$J^i[6`0&Y.(fk/i\ErX5iFp`ELEOgT^]UDi\ErX5Ts2#8]VTk
%mH]aH'umNeamd_Ih]_=H%/A792?%2J6h]Zqo%u!2aCehZ^KJhnQegH+^KJjDe\$_d+D3O6-]f.^kZL\(=^6?%\sPliH[")kg[hmQ
%qr!NpVt&fBNS!<mMWX<8B_Rp_\T6e$[cQ"=H>^RaQ`%UYUa<K74M7$4q^H7fGq\5):JQ>KOnjB?msk)KcL\5+EB-0`M!11HpFd:M
%oRqFP71@od6SFcAVI*i<rK&;4MI/"i.U(SL;)@h8rL2SfMS7\WF,;Y/U1n\n&U!,N)g*u]QFkl9'P13eU8h%>1&o/Y3L7M2;KVQF
%W7nT97@]>F5Pu,+^<6!PN//!o1/2?E7ZP:OG$#[Ha%!F]lg"5C>@Sm-i2)oY$i(.u0(SNE@Rge,[CY*Z1Upq;j2Y`t`*KpF?HP=u
%Fa8eOQ@kZl-Sn//n#n?#W@&FPril02mcQ-Toh+1#dI^Le3YhmBDI`'=iDk9ZjdFUGo2Co*mu'hG[Q;E1gmDC#$Cn&9faH9f6p5b^
%qT=fQM>DXo_[Cg3DL;7I`Q8i8S?pBZ@m#6iJ#sRJb?UmL(('iiDE.r+YHP=W`@J,+8Y_bJfHhs`aY8P5F>DSPIWP&iPje9::9`TG
%Fp<GVAf()'JP3tF][tZ")7ub=^E";*D`[f_q3EWSolj^Hp9S*)b83fAj7r#oJi0-:F"oqsX(1`E7frRPF!PS7r.mVC*"VF;"V3"Q
%1VejZ0H2-CA`MtJd!847Zh.ekTtE`QZ[4a$RTfl\)`Vj'SCp?]`jl)3E'Npo3!.V4eTZuJ\hP*3&9u^f(IfC>(gsW3[E)k,#Mokr
%IXK(*LreOJ-BGEnG5qH!,;='[bMu>AC).o<G7<#0!;]C(0p^skhX_eTHqDU`NjR3RQiOBo>3[h3diDQuc4tc)k89J<FH4adYTm`#
%#?-3!W/mcpO4I4Y0u+JN?4JoKC4OQh$donF\tnpPh"gN4SXd<3H_^/enj<0-m#ei!h`nUK9imrkCj+8'X_YI%!=DS*k8:<UYKV$+
%9'A&Uh>QHo:5SJ0c7u&5(Xbm*MN]s:6M0c2kWES&B(34_M6Gag=HkP#Y?OpC5h?Vk6!@2tkbSk=&MRo^ma9JMT#[SBV#0P8DBeZD
%N*?rBXZL5n;Zan[3N9*\-X;-Z<4f=ur3H9GjmpTs@o>a(:YTl5G;f.Yh>2bV.8+`Pk]q".%KgR?c&'#/Wf^M(044ClS9kK2?422\
%[ADdJHsFg05`3;Sk2\=b&oFt`6E8s(E>h6ZYJBs,g^o;7D#UilZQlFMaZ?P0D98u":(F)0/mB_8at$eR\#X(GgMj/5WcRZbN=/0p
%gY6.VgSH9t-uS@9kGb2'm\aj8(Oq?pQWg^S58P&S`TjI@m%,^WpYH?0pQ@:4(qT,>`]m9#;QD$CX)eroh+3K_4)WY8/6AZ/>o#9j
%[Yjt:N#ObJ&(Z":&Y5J%Ro;@$pIMKtIrAJGNEmaQnE2>gSg]'0=*)(Tat2FqoG*VLnRCD`Q"%!OG"Y3jqtr6Yn^FcZCF/=a0eC@K
%1mI2Ra-tC,O#D:o=Z>3eD\r6\=U@Qi^Qh"(dMprAQOY'ThY_V8-82n+>ST.g*L^IKhjlDp6SJ/mTR:Wb'`W,JlK*>Qe;#EphHKs<
%H)*XjhOLL9?7BfNqX@NmcYdLOY7Gt,s64%;"0b@^p\3u@*jWaJ+6_>>bPq1<YG1rm\##AOK>+^uHTa$Sqp>OrGWTEl8X86.GCEjH
%=7c*S)kh.hq+kYNim[)XiiDs(?MH=SD^0BlXhr&eVt-HDQA'h_r=qQq,OV"\4ajoT0Rs$no!EQ-cM%,s(G[FEHL]f_'&C.(BOTqS
%bKa>OUse\%UGM5oJ$F.c"E%)(I,XgI[rq<toQ_)E!eDC5SGrB$O4\[B#G8^MmI'pqE'3f_R[3stq@ETQfsK2l['l9LZ%27kR/1Z[
%T:T*Te%<t1h^u#PT5K,25Q10OB^b`"l,sK^IV8Dsc->Lre+3,mHMYeV*6fpY7uu,kk1SSe%PrMloij8dL4>fp%jnRT"$b\\5EVQG
%rd2?aM"7e5J)Rk@o[=lbqk%R;:#D@fod6.,3(8=E3;&bAESQT7fM&c=<I1,%;_*j/G`)a4)hR'+"e^7F$W+M.Hd?76"ISH8Rn'C*
%F*h7H?[d7(J%Bjrl1!X%jdSbI:;?-955;P[nTaNde0??0?@I.'GM)T\`qSMgKB%`6+2@_7\U6F.:X@iZqK),pbK'GCj[Z5h?]I<m
%^%_$nYG70NLW=oCT\mtLn*.j\aZQVB2-Z7^lKRFeWieaL[#uEdC3k1(qtHPi*IcoGqEJ=^%Rusg1t:5L>=4EXPA/j]g;Q4hp$BlB
%e'A-YZ\JMOc_N$h]r"NrkMZ,hIo&4rp3:Q>i6/%Eq%ZH.Np-2)?5&Q#T9"YY*-G?DWSK4W*^';3LVMX%45TjXOq1_6U1<EFV4G;p
%O,!t\GPAfloGG)1o11Qqg,dCs&YH!BA_'8K&@])h3f/^W[L&RdTL/QuUg2Y'"%m*eU`I',A[:I^QUDc/_KW&"SL/48P[]LcN7/.U
%NcR\XcH+hVK\Y6;C+"k0&@K]'WnN=_DBk=BLlt2KZ-LEs5\O&.gDSRFV.0\=6H4sA"]81C77=\n.\VV#9l8==F<$Xonma.*m5.B9
%85$Fue/CE^?U$"9cM@d%UiT=lNbEtcV`u3N5t(?Q4AY$@WDk7"89RI09aiFnU*JZqJImfjf0@Y<P]9+;Vj3-qjdK:IlQgUi,6,$'
%fX=^Q*3nUqC(h[c7"QXPEb@_^ILb/3a<^.0UZn\r`GM07g&Xn,g,@2hUs()u40_@<]tQ_Vf@PfQH7R*87`ohA[NcSkrq>fBeCW=P
%1V(T\LQh1^^J6j$pjX,"Tq.j?V0`iD1N"rh2nAhaptOZas!ffr;QE=qN-gQ9_+Yh'#b/fHV!\14ggh&!U`?-Ng5$i<*rI.gBkgU!
%5B)>uMNV[bLt4%gh6]p%7h["#*iEiq%q#YtD5pJOOlS?:gGmJnhD\$W-K8mY&$h/TO3Dp!0_3iIRt&,:lF9Q9M#KjcG8WRC+3tMD
%e;F:LN8QodXZ5>DUMth4D(.Np6jfLQ[&"K+h4>%O#Eu),rQLFF7e4hq?4XYf(6];<HQ#DS,gSO'2S,f_q>UlB'2KLI+;kb<U3jm+
%EU;prW`7tCpG*BX>jak`&ZP%E#ZIUV@`Fk9T$aEP8<=5$'s&jh:2*d-f*OC)aBN0u<@UWUecAr1oHBD\n`Yr^WOE9]:"(PTf0c#u
%lC'#AX_\1WdE7!@N"B&<UD$DeJ$bB)NDbpM$+heV1A]D.GaeY)1-[<^.F!D8o2Zin`(M;Z#jM8?+mbC<C_PN[B[?`NC9i!i<M.8&
%EWU4r\"+[;2J<0a;j<Bb^-:6RB_QU1U&@.ge^+$A);c@J[gZOXQ)Xc<-0JK[mBZcX%Y3uGNf^?[WXgItPr096d9/gr`0hTo7aKBD
%=e4e#9,pM6W`O"+B+RR;=kDuos(CO5/>O/Ag8RYA$PNWY/?oBb=B<@YP)(>NgHaglSPJO=PV99ENk1$O&+CJ(4/74p[-<PCFjduT
%UKc0.p8P-aBp8L&Vg[D)5m0Y+"!X(B3`3HP<@k<F6P<Ub^s(_d9_n1Y%:XTef#6qiO.-tS0""@Y$ReldaNu;X6X]7O;^K)bXF^pH
%X[s?g%a&glg2TGi2hu4rC[aW$-8$CX=?<.h6!S?uY,5'5S->Z(OF.['=q3+G]3Bu$C`$T:ZV`VtXD6LCLbOJ0(e`-PN>m=Hen&R7
%$d$c674*7B^m+jg2srT:lAiiGL7_miPZ:cU`alG0$#^6W,R)X/Ash/&=LV+7bJit<da2^nXlKXBKi,]61=[@XM$[=n7:\4q(kR]]
%CH;KufVS4-RcXT>A-tFH"cUiBPI<@Tj7+d;A(in'`R$UfT)ar5@Du2i/&7+"7:bN1fWZ$V->[@2)!&'/*BQRq103.i*C7fPfE?*t
%36K"`NOFh^(,h!W6gU=^Bi6`]bWTC>JM72\O3o#e-G1mIlc]H1ls)W1#_.ZV5r_XH;)I;i-0ht#[rSEj)95DkL-QCa[Lb9aO)AX#
%,/hZk1FPNciD^15`lkH$dr9<rHBr+/=@G:G6ikH._?8r9@b-;XZrgW($,?HLSF->tiXc\ISL$F%^k@?(L4-<<6A>f"d3C3eN:;iK
%F]BZ?pC+/E%Qg_)";He0W8nMdWdFSCL6e%1-*d\$dmQqd2J_V8C?2G;i6"e\%N>^H_r0O(>u"9tdS1](-.YBKd%YKU&9%&OQPMi`
%\\oIt6S(8'WgF>9`?]_@[[gR%!f5:CIUHPo&tVHJPXb/j_[pPsEA<1;nh1iD&p\\5\su=mg(,Q:5agcSL`Qo\c4ZB&e4KIm!`D]\
%BXig5dln26`U`RQ'H$&NhAI1q,NEEIHtY9Qkh;lar=*;-050-JOoDO0j)(,oQF/0"<.d<QLigL%6]E:8(^:*KmKq<R=`>_pTCf/e
%&hMG;,dTi*USP$O`0Sb;L2*)4![u1CKR->q&-=P",B3u]N;.L_icd[!X&+t-PF)Vhq%5YcWE(/;`GBSAIV%Y%oT5bQ%5)!`,Jj_V
%cK.Ot:b]q-k[=Wu/@#+DJV\2+re#lrNjR?>kE5a^-N(b4c&D/;^Qe3uK7^?6IiO$D\6eb"d"GcB7V1#&M7TLO>LSL%<9_-IVB%%q
%Ih:4],McEMOe+O)4%OT7'1&?+:ncer$,S_2kuJ-)?CZ\uXTVX[@i+dA$8#q,rf*'@k>M]/G<+uNI&EAW^97X;U2RH!Y)r)P'[3d#
%H<>`a$S4J>U7hsMBB8rKI/j)c2_s`:3\`;<haY:XNr/_JdI'nKe61Np0(':cF(eSOcCogeClJ-16;U"(-nub%G7La4hm)0;gedp/
%D**dBBEYZ`5umG:LK;C_iq62u/j<0b_Dud,X5\?.`:>,V,.d;h7_d:5pV3>L:L*hCic^cdbsFnG`:'`$*KonYjp`ba+W;/=X-B4a
%l5"n:in+F:MVf^sc+d*gi-[!tq(?;#P4):(0&A5BkMd.$.%F^)ZmpNk$S4J>U7hsMBB8rKI/j)cpS>ds^PdF<lc!e-fljB3<Y`@W
%BLVhOTV_RfkQg.JiceqeM<PYfF(eSON_l-59\m8SXV>B5K]71cWf#[oZmpM@YF"g$nW<ecbcr*j&\lL8(*=t;d>c1&qL(iJs8DS:
%dc1!tDU1-/]-;]*89ccY<[`2F)OGQHOIo22<f5BAin+F:MVf^sc,K.7!9`?c8A7`J2^I:WA6ccQb0S$S!`1SgDJ2K:%MkF],X=^5
%%aW5j)>X:+POAg9hgZU<rqD?.efhjQkn(UNBN=uUTn2uUZaNM(fs1akR.)V7e2>Uj.Q!D=_r)brC1g*V8DcG',(/RhMX4W]>KY71
%#6I^U^M[^boIcG2I\T.p2\+/IpDNAtpXAPeMr#>/c(>=!,7*-LnLat5OEMFlG<rW/_7Q@W-)a-K]:apZBL,emD\U\[T1M;Xb;ff\
%]+g(m=%fO'(d7p'Zg3?HL$iu$`A^C'FQ)\IE1[a1Im;n`[*\dGd-Z=taK8]/[[e&?#?D"G%h&SQF:3nH`<+?(FH__mmfH[X[l'&X
%lVQ@pRYZ/+`d/GoWkb/mWtKXHH7:Z5hZt@@%(i35M7Zktq2H@%>o5[KgLk'ohbU[./T7C;K=:;QUrb"tG<ibJ0fL62Ke/bCXAW@W
%#[799l!bI9.W-&%2?-!7H1Q<7FM"&_8@M6#\9PV"RI`'7OC3Ond&Ole0!G%>JV-_aS^Hg\])D)qgCk@3s#.1]0,;!H'm5>D.SI4W
%2=8UWlm$>Eg6]""1DIGq"6_?E]7Bk"es&u4WHP-VjOtsG!2XP,Y&*b:Tc&7i7:D)$1=_CZAuC:-k+I^V'Q`Ij6Zj=OjN=r/G/;.;
%q1TFm9V_gR'.ua(<n30D.8KJ&;#'tKe8K5NDLVHX1QU>F?E>tW9](h.Y2>D<WKaPQNk\=6;aPaigkWhe-+$)O[;G2*:Va?F93_X2
%d/bDQ-'_:s8EP4]j_uYg*/,S2j``k$UH1mUc&p1d9nLtK8l%.>pdb\uB2_-TBpZ^PMsJ7)Qmbu\E@G6/X'BBLXeIe1#+/>rd9.Ah
%5fC?5>H*KhKo4d1KI@&B2_#,2S:dgicCn5PQ`h3m.mHp`_V(1#@bSe?jl3jj1EMEr7_9X50og:R"gim@!a9&.P;L3$\KNA<)]RNA
%'GFmt2)kn>9[n]q*<dk:5ueW^cmjprf*fff+3?h!fp'imgA,^(ijs(b-AiJgG,X%p7<&g>U,[o4pe6Ljfa\Q*_pi3s'Q[l]MH#+8
%S^MB"\GTFuh&KB[E<3273-`-P>ksK`<1-Ge/Z)e^="^W`2e/T7dOn$XQ)Z7XTiDficiA,&rq.b^dHOQ6ks2MK9,DY,q-l<"(Z[UV
%D@W\@3/:O3>eXNPY5Cfs$>3:&b@qd1Q&FtFc'Tn;W$@[O@+YR^#kl%6D)&;:<JAfAMG4>V6ZPGF@Xu:&8GofV$.55pWp%^$<V2T\
%(K`1P;M)d=PgFg/`G!653jCFQDF*LNL7"th&SD]H#a\R\M3sOO`0sMei%fD/5rh^N5QUHdTK/>LL<F.Zi4FOg&^2s@,u=S*M6..l
%8)5EW(mKLq!!T\8T_YsIiUXs1j(:t!LS@2Ie52AXEDgc1&p"4P%R:'d%\PhK08D&gJb$FH-rJ8E'I?AA'X*jj.m=SrK%U:RI+m\$
%`T"IK1EME(U-u99MC;?[Uu\rfk";3bJ-+k=U:B.P-&N(5TL<cJ8sDsX7>VX)`Tni4MN8IEb%q,m54)ghEcKpF)&'u_-rH]u'I??c
%(YlI;B>Kc6:r'_:BYifRi<i_\r,*oTP]I7%M%V2TlQt\NO-H;V2?>Y,Fu`g4\8L)\M;h?r.$kj0&g^9[DHgSQi5m8nADR>DkOR_R
%Ke-&L2\[R\3JO7rM3Hrl&p)#^!`1S?&m@u@*3NCK2f?W'E?Il<.h+n'&gKES/^]k?jT#oImf8etq/W]+(+;BcMA#%K6;aJq8+Cn^
%[GiD3.%!^/os68@b?*8KQ/9$q&_i=OQ8md5M=+#1A"\3%T&8Q4<iBgSF9DOY!3q;^(,;O\7ogce"dOkl1iq+q1?`Tbbb1AiSjqmZ
%V_uR[.Vm)31<be)Yo)U$$Q+kg?mq5)0^%.eMWCMAD3U$<hkLkpiVAq:E/K:0Qc!JVR\!!RrrNr`m0L@"7kbKh>#lgfjUld0&LK1E
%.R?`&&!>P(9,>F(+(5>PDJ/V.1l6$B70$_P+p9kU=/(5m)P'>.f@75\(+'S/!.rfP^k>2?`shf[iU`.mF;goI="9E`R`Qm`:psV?
%L'@bZ@R:D/s5rY!>"`/3&9ELKRS4H;"Y@^(L7"WMYYU^JT150JE&UdcTK>MAfhN.bkb-r,Hk;P(O<psk&Gs@339%'^>^iPpAd,Ee
%\%_0!mRjJH&P>CMn(*0B\ndb6Z'OB_/#"kN*qj8iH!!;P+jU`7XdpAoA>k$F&qV*\hO-2d`Fnt$N0=ui5?X6f)E24j]T*'R-H].L
%cf/_DWb4+FUs4ta9Eeh$LI>,*1?*#2UpF$QTVmlSd#H=ZLE,nPK0T^09i2hc7(L616968FQ%!U'MOZfoN0nc[E_KSc+Y%'M5*'.+
%QRjGeOnSK#1qRfHF-r=)F-7qse<*!'(u52p!m,<>9^:;Ubc)\_=&4b*b&PI^R+)<sl*+;Wpp/[B::F6)BPn=AbqgqYa4_PI</UsS
%M(2%=FG^^S0WSlj@_?UMY8=.tC?Baic>3_TJKH(E0#VECe#Wim@PjqsB*tQ2Jl.&X9sYD+EJ4=MZMY];0s7F43\_Nd,19#M&>QMQ
%A^D'b0jiNlm_C6dEQ6a<?o4aoMp`lR@$GO[)W5n"VG_fAA[S@M:A:)O!bN0UB8LfYMcrljb:k3A\S%na!2CM%N:HT"#ru_<B/B]Z
%(,d$MkR^@V,'@T+,nTTt83h:W1?P//N.+Ze5IUZ\fXbZ!)N<nSZgKScoPq^mq>PtC'R4-=f@T`jIsl\=rH&P\G<!\8Ss)"c$s,S<
%U<Jrg;+/X<q_$\XDKq?NV*\\K1c!j<+OrmREZ$8mk=R*=:K*h,]ncUhm'[&ceq4L6?og."*?iFZ:#nQKf.q/,4Pm'm;%Jlf#j3'a
%:rpHieBl[4'-`R"&Bm'4:sB(8ldrO+R4\3kD:%n3i@<Ht26nB2jhn`Peu<IR+1WRZ7ouo2QA9@jW(:CFER1fN*DZ1>4'Zcg'/dnY
%dBQbcTE"%c4la_'`*`l<:pO7MfoqX;kLK[n779lQn88u2A71[/:G2sp_4\F(cU3@II%"H]D^.ds$#ClII/sA-jSMJpCNVT2YQO7G
%]XI<&q/kq'eh;@6IueK2%%7$'EDHOIHaP"tp(-n"qi?\Sq?NrW9!t*9RMaS`<k$O/C6lRA6*#3&p^X;u\!I9UIi['g1A+k;S%Z\2
%@5(O)nfkLh8)4@Or!rjSVJVhXq2Q-?c4!Q8(iW$NBA/?&7Zf30LC?gaiNWQjV1E$A-&;u!%*E`"+iVeshW`i&4:HcY,4Z;V</_>4
%-2pfd+p[H>Zcupj2(Rl<>Q8nj[/<GUjl&7(U<=SrSGk<1V>l[Pnh;I/YJ"M%bamVX_M8XPboDkeSh3(9_FcW4kaTrU`%!"?[XVLh
%Bq1T7N6PrR@A[KD98F6MP$\tkG6;Mlf.@3*"]jL[QP$L/[_2X&eE``?bH'$f0q)2W'5VVGG5_+(S8;d#bo&s0AB"bS`gdtjN;co$
%N+qXSm:Cuj,p[TOeu1(W.A.iD.L)gTSe8+]_Y#Q->]9`.W)q]tIh(F0A%8J3hNj?)?G]^@G:gd?fi2$Pe.Pq^;G1u.C(ebe#h8nX
%YHDnG9sk*G<l*Lt;pM$B5"(c>&[^G98i^S"1Ar3(>J$h`+5K'.>5sf.kC9\dl;HA;Z#/'.pe5IOf/jc]?Cj-8(/e#,8Q:Ih)oPEi
%\?\h'4%U#kOD<U3dL:-=&Wo;rA#)T'&XW&&;*n$c[E=XT8r0F7Ng+<@AP>n(8J!*(,jMOJ#.o/Rd4YfEMNTB.n5r+OgVcXM?ga<(
%nc4:n[SXZLUPn,jBXj'^YX5`2pq1:"BbX2JV%U?Y5c`&=+.sBOH2mV"Z2%TmC_!%;-:t&ME=_P(EW#R24np+*.d]d,;0RqBa]KR)
%1XpRt*Deao%8e49GNGGd9Y%s[&R<?k>R[lP#QZPX*E^Jior&_hSCVVFdg;9%?JF#)3CYWXHd8L;iY1$6?+F,r-`_:E:j@TPW9I4d
%]!;nVs7OS#SC[HO^]/kk,iUhLP9A=4,Y^3Y=%^F;bBKi(5u-FJac*98bFBbf1G*Udm's9s)ALmgD"e+rkf_&WK\c:"M;jnH"P#Jp
%QlS>CM^[_:`/.tpPgYC$f0.r\[\=5)8Xd",AQ%8.,Gg0k;L$4oD2Z8)_1P.l\^\ZloO+1[:\[tR&g,NnpWUR=L;k;+1eo'BP'5h-
%FXM.5B2[l\:/bB;&=-6-6o^K57C;lRf:Hs&CojLJgTlJj"!LUF7)S7&Yn+T]lA,B:`cOn%BGhh%/6TqOaF%<1N(@47_kTLR,17=D
%fZ7_F;FE;b>`dfN$OL9,1lANE@c55Qoq>gK3g8cQm#bZX-*(^[&9hf\-,f"KT=!W\%KXEgBpZ&s1hg15#U(cE;jtlGVPjNei,(sk
%!Ml3L##?fb$QC#kg]PtL6Q=;#";DFPPQk$]O[uEqb=]&QJJ-tl>%/uoZu2\$99^pC:[A`Kkb=I/RUuLF#91]20ofa0FJ=s)8<'`+
%apN8fetj?@,);,>a>(7Ta)T$qAIM'Yp9DOULCn0&e$20h)r`gjPVYQ5pfJp*"V@0F73QbgWHko[BWdud37B3ddi%+;EsO6iOH'oi
%@*Q>Cr-92B6ADWu@FAl.MIQ%&()X.Ti_gJBRJJW-2B5jl,L]Z2%\l]#@U^Kj.4u./<',[`Tk0'Jcln_/56/;dENGk/o4es\`IX'e
%k/1R47/)m!-S^I6J*+3b?ak]^MQSb,Zj>8Wj_]^=IY+7M&N0g_Z=tYs/q[ZDGkpA*M510SLi[ZZk`B99;4L7-BT(.m@9(FYZ#6Es
%,Z>?3_:cnk5,M3\,*TkPLGmE0J%393m1[R$UmZq(bd]@:"?dQWjJ!We=Tp"+BXWo\E9e't!;$";nJK4nOs-mOnJL5`.@XB.(r`.8
%eqJ@-&885J%e0g,"Jf#e(uZeeI%^p17Tiq=8@_-!L<FBFl,n6-)1O`C_:(Ap&5FK1dOAIA0`HaeEk'j5S_ZtlL;c,_R?eC4i)+.D
%P>CNd`(kSY<1MhqR,/7&"<e->31_,OqXDT6N:)d'&IcKtD'Q$LPn07#@bo;^nAGVO%K2i`)"TM=ni7r=2a^+BN`?DAX[$lPZ[<A(
%#Te9tW/V?ZD+Z4-8C;Ds>KmcHOfcJUaW9?JFb:4*?u@g;(TI=/51R55rI[PFc=4o@@`_*EYQ%,2Os.alZd%JIL57-K8OR5>L]m\.
%RFf>K=i;5c9-=t5&8E2SMXWDY#)I_sUhGT'ZUCeQ'J]^U5<;@rDN(AuOXZ.GVG]k*K'BNX5"u_gIhGHS`9W)'#GF1Qco[<0\l38u
%O8L:j2TYuqa93XK3B>L'&F)g_-E^.M!jOF5_UK43-)ruM2Cg@%LT0jVQ@oiFHR,PP?nk='1+m(9,N:Q0^M9*Z3%8R'KGSq\F-;SO
%\7)4lPQUcM\TSJ="k6+[,U[&@Js?AG1e9`PUh4<"("8u$OKcQ8=HTKPYIW75$-L-`3FtWhkO9VK$<V9k*SsN2i:pOX%$en3=rY4L
%Jri]TGqr)EV<9BZ-ocL;U[/"jfpV/pA]39`<SGeVnQ!t7lij,B6smf#3HQK'8=+GN7$g5a(C,nmcUJKopo.@f\>+(3(<8V,NJ0\s
%5OdJg5S\<'8YaS4EE*-V#_%oB+Tdc\b'I6B5iZ=>4$rQWO=$pT-2R+uBVG\,%)*Hl=%/a$On<HAnOFK:nT5eEc]I95B.QFmTK4hX
%6m%l(.S`Gad"fB0%&]aoB,p?"KPM3P@nBtdUdWX9^%0(/CWM!b&]r><>i`")8[Kf2-e6pMo$bI.)?>cCWQTjgEVYhY:0E3?(P6&a
%[?<Wl5`nT2G:jl[Dd(EYfGIm72'cL>b"5Jm>HSR?7Ir>BT7@3%/NP_.Jr#28V/+LBP[cH`dp41r`CC(]$dAjdIA0gd23(V[R9h"q
%R>VFe:nec%]1]^p]q2T>Cb+Cd;"@L]l(Q2=XO2Y_=]/1-U^:NDjh1Vn>KgLu$VqlG0?+`bfk:rXhf4JfX[D;i/bH7Kof7"O]rB<G
%&PiruG.`hho+$Gp`KFP3-JlQaOdMYp0f58ns$Y,=pM1T:TBfrLbG74X;].r_rbooS9@DH(W>j3bmD!"g-KYA^R7I?M/kF"pedo#^
%,\e[:`*uQ*Kd0?U==WXT`95*)#*T(C&/4kW/,4!cME!d&7HRAQrbBBX&6!50/:j/ufgtF.9P6(9>?K#U&5u).r[PA8K,U`Z@)aTK
%l\qO@P-!_"SfX\O/XEu8,]K"lmB2s#M6A7\BE\3BAk:q>Z4%9]'sY514.dd1/j'2J'[0;tCNX.FYC8KT#%\?^At!>06fo\_`tnt,
%SV(d_W+M,\OSXfLUH#DfDM)<tb<\9:,*9%F`ZUJ=p'$ZqPQ5]C`jII/"fiaskpT89dmV.?N_fU6ae_D(QB75j'!XM^F6rp!j#CY3
%%kBZ%BB[RE(^/Y>B(ng`ii$#R\(YE^atE9cV7j?9-OET^qSg:')CX1a#Ve`=#\"9iTTYsd64b.BUW'#I5W*SrC`UN%eBW*D'ELch
%;QNbFQY!7j)McsrM?p.,d>?Ik+B1X_@uImS'0-%"eR,Pl#RVNq!AuWS#.lt>qQNeU4%<[s"TMX5G&XTH&Yo11VhO,D-RjJk7Wca-
%>X_)jLe&n#195g4*'2h"p`YsLU1ct"AOFFYJ1OtbkQo2D&eFl;MN#K5+^pZ->nq1oW::NKYc/Q7jCTZ<j'ASkcMH0OXquY5MlRX]
%@3Bh+bN2>8MGt7c@[:1p<.j4O>,WOfSeiA_3*n2D2'P>,)M/2c];#hdN#=Z7ZssAr,E7Y?%b9K`U6g-rg'W667I$+kjkYa^+2cP8
%.m0K+^n<Fj(Xc,<Oe=n>/r$;W1`65D"N\U7'?1GD8;f"GC(Q5p,tADJG*Xo[,Di0bYmGCo!rn**m;ugI1^]\=ATYuR>nljiq8'/7
%1f;E`<D4+'Q2JJ$!217d7eVgTP3`X8,siharkrBc<@j"7C=X6\-`E4C`UI)q:u\.d5eYZJ9JFfu'$F9rdmVu6)TBkPkld_qi&!nL
%YW0MQ_EO@.lf>"tiE2"]E!I!,5ckp<Jb1(4N4>Gr,iNL&3Jd>98'2Z,YC+\XPh>"7.3)<;ZTqGt/OZ@EQd#gQ/W$OdBR"l;=s/j,
%_J$H<pa1/oC>YM>1`RYV'4Pa8.S^;k1ok.r,Z4f"m[1f!g'MHDgmG,U.T3j!-,J_8_<&;f\Q8j47Zp*m'!A,A$G=4"eRE"gF"*<i
%cGJPG(<IKb1g[O;T#DYf7B:*+F2FHpG$?'IWZca.?Ytnu=3`n4.S^@B`UeuoP9b^\H;^&oP?1V4dr8kjU87.\N>:CYl[o(m!2)NS
%n!*VGjP!lYrmfLE!`eI<*>d7b3mIe.d[\Ze#k[KjQi_!B'%g[1apC*`hD5o_:'dLYh1T0hTPO\*5cMq+5f#P7dSUcS#XN%HKGs&_
%($[:r"<Ya`=gO\Ua46U<lHF8@^K(I\8[T)/pt$tM,C$?M`(OgH"T1@'7/\:.NsiZ6;Mi)#BEACp#<W6t4Xmfj&_]d#74Wr(J3GZH
%_I>.ZfHM/oTd'a06=krAmIaeS,DS0C:4Qsc!?GEh0Lb<7a;S(h<!qZ8$MKML$tp7BG@ZTE,,CpmF6kX>_LA0?*"5/]&%ZJ0fb)Ja
%7gn3#<mQ/^"/SQ09W&I5`kI;J`$2/Y<K!9_MUe8MjrtT\,<nFZa<O)/.%.LP$AF7h1_K4c6PsrHM]!Bmc3,B!39enD8jKAbpdR_h
%m`(ug":)fk\iF#Ip,=Y0#ZVg\+Ti;G*0Z6Z."IKMU7"Rr3ensLZk:Cuk'EjM`/_'Rn=#`TVF0T3_c>\=B10,U%]'H-Os/Ce,$#$/
%>9qT*63XCWUI66I)iEX-,@M_Cr)JZ2_m4#hU,0;EEIKL]#$rk1H%]WXELK=PWsB,eE?!pT`?_!?al!8k6CLRnbRhJ=+O+R8qDdsu
%N`+8B/I-&XY)/B%"$ql>Q,a#4UTrcc?Qb,#bFqX4PEs"s>b5=T'9W;[%T+)u"TYf)bRQ`;)&*!LP/*fZO#./KQlIWrO_d!i'Ta$&
%VV0eEEK)s+*<-e)&gpP/GW10$g"1WF&XgaRT?GRo"P%-@$!>H^ZQ4r^1&Nc923)jAp4J?7.GK%0)7i_mo"&h2$h?[ldM.&''!9g=
%6H9755=ZoMie[>_#nBf:\Jo"2aInmY43ef%=KG<:IYX38G)>0'irY5Iio\$b-BENXEF*]ILQr-C4=:/]fFQOijS%\7L[0A+#kAF(
%N)X>)-?jQ.;jj2-USh_+)tf?:,MW8q!*0,(#c?`\E=P*%jP()CL2b)9#]p(J8u/a/5`+N76MNX;e.W:5A71H>qM)n]D5"+:N\NpF
%<$HU\#RO]a;j*"q.k_[)bup'$,79E((.X0.4Fj<,L`8TfB*5V#oFus4EhG"9(cZ;c.6WPVA;!3@,'1uHK%E7X/.?!D@kmIn&-IMk
%@1c%5H_J>oO\V9`<$Y)M1,#=GSk:CQJN+8]mugH61NWVVkR(c:Unu%^W!ktM2+[.>pPbk?ND#![A<)&$/9*8^c@<DJm%a'$-SbMt
%'/54ZE@2(h@TqFk2FpVm%tR$ArD_.E_i]gNHE35P(9V]D&3+*M&/J7=-B4<;"!?)d+1%%l33s<OZ)H$_d_9j.LY[WT7AP[#W":l3
%8!W;9KuH'<pe.>8*6F\3glnJ6GOQ`Z$:XYaM='FjfG:4E3?EqX;cVhp//;piB5e8Me.,"c_F>+"8pd^#DEXgt+qTP=Q;eX*#d'OJ
%'SkG\gWu.?'@`F?][1*S`:F6VRXqkK-VDC!mK=,+ST4TZ,.'CBCV'U/MFtio1'f(4Ah?DPS(+\4-:9m/;C5RPq@FCEkjEHj*k!N(
%[.C0uh^0<Q:?R_;/04LZ'BrCD>9'@9'D_eBQB6t5-@h7kU7qc&m1=;9p>(8W'*b`Zp<e\;U(IU#BgH8RVKXpE0j-o[YQjK3Bp4Fb
%Y1tK:1K"-W.fr5!a<b+#g&f4e,N(q8$t=N.CF%b%Ug__DKoa^2&V/+Xb(t*VeE<Zb'/e8oql`i.RV'NAM-(ha6N`#[W^kX5qTg?_
%W4@a%+[@Z2.kA_,#ooREB-8_a)Nu9p4u&oAWUU%;6E><hngon+#'u`_;@Y%'%Sf>c9GAY-%>$U[Efb<u&)m@haULRq66`/86Z5jt
%I6pC2a72.AI$eBj6_\S5_!H"a_3sPT8u_s,+Xn_'h$,-;'/gEX@T+7&N6V::,0PWCg'#5foUI3q.cV.5R`M4Zm?STD"(+"k#g+Jr
%N/i-'@/1oQ!=83bf"YBT',Y_?]EinBA*bBa1-O3^dG'5io+CeZ%S45QORN"]S4]I4\;q7h5u,?d$&Ht;8Y>P.]p5GL2JRtG%:X<@
%3.)[n,pKWOC9>)Rd9MDNHX\V/mpMR/OIlQmK!CC.6-j,AMC$Ut6)5<WK8Y[RfPJV`8?`f;E1HKL(5LZ/\6q=E9W0cJ1aFNJKco([
%l#[Cf=`?V-`KG.icdE$N<*Pb3)r&Cq>XBo=()&q_D8pEN5i:4oD3:#n=]^7_'\A@e#u9C,7=lRSN6E>6mBdjQLmg/&!R%C^O0XRC
%`'&t8@c_)m>H9aD8h,6N\M5O*4lSbAb5u,p_2sW7&l-eE:oYU'>l/a^iI\$W8>Q%/Wt'>N)6Y/+i?Lo<d?N]l#fun.8OJ,Rdj`4[
%bBo;[5cEFNe1Cu!/qZPFV<sDs'!pQQU#Q`p9Zj7KHEdPe6(/]i'iBD]$7J3&ab45IU$Ahd[1]]QNj,95l0dS<%Z>h54_%2+j4`Sl
%*%mjS'+USZ;Bo!`lIp^KbE/I6<71*'P6jg!A%@53_d*9KKG9tF$PF+->;4&P35#?59(7_r#i[9Q\''>4G`'*Ai*El[>+j5LC/FEO
%#^dnKNl4*gd_nOg!@FLZ0]R51LIP5fF@qigl$EWk6kb0Zch%?p8uOHWD?1DGW]3L#:E3&)dU+I<j5TnhB-_2S7"@_fiOrsL.C)]f
%ae@B:qkOlk)@IsP?)$!Y+'agcTtc5nC$&e_[2B62F?Lr7BIVY%Lg(&"*d8bs:aujf3%^Ye7+<JN@4a\!(e/P;O95p%)V,_MG%:r6
%=;&8GK@E-+VW]m9qGoO$UaSU#jSj+kg>$`o!Vt#c7iC2P5+c<Y;1&U(.hmL:iSnZC6RDjJCPPU6"S'p>ZW4##7t;uqD[cC@4MD-B
%-@k$+LCip7q2@ko/ss49a-dC,&`5Ri-9`*PAp#ahb!o49'07V5K$;icW(]rDU4Y3rkl[[aab#nEMN!P!(h;7f&+bAdZO@7iZ/iG.
%f6:'<l',`,'aQ]&M/C+D@\WfK&oSe))B:mJFUb#RW(WGueOKlLPF(\d(2d27Q^Me8"$`N(]B0-u,R2*1+`:AWfu7sf.O<E)\IPqO
%-_,5-nq7.sl1.,u?5nuSrtHE(MGp.3b;Y&*qKuF+ZO]9'2DfKJ01=\k_P2lmdZKAHr7=NH.oljWrs#rE._n?i$5ZU`q;GX22?O;K
%`UD`29iK%O1*e&m%RJ+-!tNJfiL?X6QmWmZCU;ZUNs6IH2%k,j_B>?b5q7`#L[j2NBRrQfkmCoV/bafl1+L)]GEJ8Kh'j`f-;QZ.
%;qD/+Xl.*pn']8?;T3`FiSOf;NoZX]r,AeY@\MJ\mOV7)@OocE_\3h&IFMa]fs%!"ji?6@X.dZl#R@bk#SfcbK+ZhNl%c$@(*G/'
%Qu*$S51UYaZX142%n6,Ucl&?\"2?Xbgq>!i@f2/3kN]9pggZQb<rdZA1<5?GjBiA('F]o\?XN\<Y:>dcV\)^Vo1^E:+pn1mHCJ\i
%aM:t]*b(%OarTQr+2Yt?Eje%k%+(dXApaj\UPX@Y!3Y_IV:Ho$^GQ'"E4d?]AdZodORbD7)-e?%pXmQ=r;%[NNP&l_q<A^:s&pmM
%&EuU^.3/)X9sa8JoR85$@3j3O$!IJtVWA<,Y/jA9:PfA0P#eXjIfn8?b?:4N7O0f2:uXm;BLBPB<pC1EN-dOA2X9K1JR62p_BKgl
%&DL3q]1hA*l[uemU3cpXNI_h727Wc\a2Vbn(h?1<#V9,8?q)8**2N:VO]3Mj!CW^dG?;bH]$`?)'h8]Z0]YWJd_]maH;RirZ'HRa
%Kl)m-7ej3<15SE8#FolEbs<oA5`UrG8,7dV?#UN91q%MaN$T3);bV&i?pS*81FThIVG'NGdh:LAe.f,l_-D9:>a[>uC+LC"2%LL8
%E%jQI<,tmrYa%gO:e=on-g'N#E:"J]i:F.`SNIm!(H&qZ7*?]C#$O-L8*kW7[t,\11+"d2\c)^j-R6&n+K4;4]a.13Z%,`.#S%U`
%0m2nDeiiI<@LfB?&AjR7P0V)i+f,a;kaLGY9#(iaAnZ5-a$6>UHV9epTmA[eV)E`IN#@XKNQM`YEP&F12j'65lj,nNUXI6e'B4-2
%(,lalW=-ECll=AD,_c/8"Q81AEmBJP_kI5s'Z]#'*\l6!NeApLV7s]&.i*@EdL91rd+kU[?d6MO8"Xq^IJ>@FjA[T@<@##p]7e?u
%)T6EJFp@Vr,$nI>"eqI9%^<]PddFDW!c:G,&95%!GkgC@8^DW#aChXg=AZY,M*^(Q\_?6;l%QAR;=0SA^Dq&1I12aKKTQtpFU!uT
%EASZs=Z:"OqP!)-+._g?T2mGgEGA[Gg-2:o_&?.hE"hN.%)YK%6rE^qs8KTKW$gO7+O3+^4MG]T5<,+AKI0RaAWg8n@Knj<%KJ.m
%X^GKq,]S09&C=b9XIr4#2X>.FM@0c87V^<nEAKiS:i-q;'B5IEg+Wt_%u[cA5JX'.G4*uo`;IU8?S*?F7`[<rHipJU-&r'T@D@Vg
%k=o!?/L<:qKEOb7E1[p"";@';KKZpp&2B>9HeJOt3)5,l0V`&*RLS@)lFLrI0nSP^,.(Zeh2C+2BPE7-7<$(&&8eqo\IC2t"f)EE
%A%YKE-_Y.gUMFms+7,+<lf?^"_m.@@GYo%0_E#W?qJ]OiPW<3Z&h?3qPoGj*pI9%nL\P5hrhoKdE"oWIa=6=B@-^>=($8pS9"bgk
%UH_kJ?rmB9]L\K-qJ&JlEVMOaPT\ct2@H?@0@g?(N25["cD?#X(>r0TE[np?&?\aMQ?P0-,I<3Ypf2N:kd2`E8SQ0!,tojS!gX8?
%*%\<bGCj:+#<aUke)Xn79g$p6^<Uf`(;bHqFpQ!IVSKDA.ARp^AN&_[&5-e0M3G530(R"11tZ>O14NVNklKgKaflK)V\6H,(W7=N
%4.bM4h("@X6lqZkHD!s98HW?5.$[c6iq.Z`po3@t/NmQfm_$%=s#MMQnOf'BmM9c[P9M^8_&12&`LVggmSORY:tMIhTm*-s%#//c
%BXACQlbt+N?Q5K_$6UI]pVJ%Nj"5mCZ5F5@K4El'M`=C]`Ft?#p;aED"(R3UbSL(:-%$-;IpsQhd3GXK"<bn3r#?*LTJr0bVk@Lu
%LN'kBIas;(U]nR\PBpKZa05)eY]XJmRR0tE_NhU#P'8]X(El+*OCS%iZ]#8(kt%fgAWU[%ZRFNCq+=t=Td9[PGt?U.8MR6c"2A<f
%A\;U&5W[r462?$G!ujLo9-a[#n(J`6AhIl;QQ7D9dYF2X_UG#hPm(!7jIcM60GZp0o+mDl_.J0IB7Ib1a74N`.Ol;bJBrs%egXG3
%g[SG-(:-L-G9Is4V)&:<kh:'VDg%Mc!#*7'Qbb's%iKB>n>j.F)&8t7#iEU&8M'USMS#CjeT.Qo=EEEAi)d$6,p=U>p@>)0J)Or]
%if3e_OdI@sd"euj2T((!<%3C(AX=K\g1-$-1Ve%2f\K(@3g6l6aQl=AE.MVYT49rTM"e%]niMU,-KYmMSJdZf6Y&0$>WK6C!lUSG
%+P(f=ijr#><cktbL5m_*.W>DB-_X9Q:,dPO>SE'e'uXorN51*SZieVD/mQYiNsDE@i)J\@=e#JJ<#<RpO>ioQb+art#?3`$");6O
%bF$srrubS?\?p8bX:O(W1DWKeF1rPnL?&TB<o=PN"Jd4sJh*[+YpAn]VB`-.r.><a&4[0?`]9bM1,+8i["W.KNC7m23#)ZR$q%Q4
%,]((DSHW]qg)n(LS-fPfM8LXk>-8j@5b<00"@T=q%^I")!!)!k$+TWQh_uhF0sa@rL(la%c$Vc,4$&dPdai[M#Bk?AB2D]-=:0R`
%S,gn2_kKS]"GFl(6^5?b.?%LY()oH0$UFJ4a`DEH@ic75!Dme&UF;`AZtEM.G[3isjDkf:'naG8O[j)i>+FRLDCc$G;#hdO5%jcs
%N/[41$!d$BljMN-A5T")6OtenNlVKfhR,ALCQR^=VhL&QZ"*i;15f\S,uj0N.1bF0e1$.kBC+<["nFrp\FVIB&0)6JJu?)d_7N!,
%O\c>@VI<Od/B:T'q->*B`)SiP#U#Q+FZVQ,$;k"O568^3S_q@cA</U\9!G)n`23ok:k9\jjLkj39W'MfBC,(09olgu<lSbD(<6Np
%L4o,@-BlE#Q&/(iMr';/6WoNrq*CKpXDlZCOITi&FisG!:V!h?P=a[L)[d531d\Qnm>p/72"Knd2GJjhIhSbh)bg?%J6\s*!^L!d
%#9^;:!Mm)5C(nI@N'LX$8XSO)3*=GrK8:p"VLurH%L=0_U/3.YQ/gCOG@4426kf]5;m7^R\&9?A`/25F&.UMY=.LuF$7Hjd;J8R\
%gVG70KEQfNH.RA70MI1*%2SYH0"6bH$ZiXj1aG?C/=)+!`*r1ZC[k'ein='Z#8?A!:*;13"HWa]0d="nli7qqiKhuKaJNZh;CaKY
%]et8b&g%e4^,cb_`L\7%MO?d3"c+$SK9XiB5pH7mD<"SW7RJeU6hfRk"+We_KL<o#Hj!%Q>L?1EDQ]]/J671eM?d8uCP9XKZ]eR\
%Lcs!N6,uSAWBUdBV8dpVI!mRNEQBS$I>P61&DQUIh)qh@:qf(P/E.;]8%:$)T$#^5!t^6;qffH<>c@.2i8D58jqEU"8)OmZi]:))
%op/E+"_KKZaH&S.HS,>^*@<VL9?r$QF*%GI)s$<&nHQ7eN8]33%(6bdaF@/=eB6q5=9?E3.CZqT>i_7,b&(l:hUVEE"$itteDsGV
%U5X)LW`Ru&';Uijrs1,L]qGL(PZ/9o7^NfCCNqGNLj0FAO38ZKDT)!U^?2Gk>qdeQ$Y3C2N%0Q9'GXV_;lLo%\YIVKJ:uE'b%pnV
%^]tYuZ0b`9MnXo[TMc"2?\ih'Y08hf@K@</i?GX"AaoD"L]RL6dWD$R2\H^h=0HZ,,gnlsO'@n3r'Ult1DJ6jb[NOW\:XC6mE((7
%3%s>$O/$_>_rgdn3A=COZWXFj$]c]$S-6W&A1g']U6uV5#[deWNF1d*?77BEA"PKiKc%lRN`"h<Z^d+##/RRs*Xa.u"T#,e*#IWI
%/4CEXRWD&lCRkLK('\FQg+gu?7L)9T!"uaL5TIl32$bR2$Yh;s[(MlR&>VYl!6^^r*1r[JWFm_M'Mui,j".HmKI\ofD&L:4N/POj
%?`l>K'k.onV7qt-$ml1kA?LgacL(/VL2+J.!#T](Gi5(C7#duiGpr<2WG\UHdCDQ;/:U[qbisP\&Vs^,@0Q"c^gN:j]%pENC8q47
%<9h5tPfP1b/3.IPh7hM\nii-8Q/rli>SnuPZi\`uGEh*[J*=_m(L[?#^6(1l)SU_o(IfK3'.HBUXbj5-hA$6F;WEUtn$5L,+?gtH
%Y4;JEYn0r,\Ai\;Qu[4<11i)MjW*XIkF>2A!_%>GgCm]($1Qf^5CVM*NFF?<QO/f!UTikZk>6\2`<Lua0!tWlPE\L)Sc$oTm2IK_
%QMPX\Ga7rOKRpAc!t_(4!p&VG):FYCS9Et(rYa.,fGJ>AS;s!$7/UgSDAqVD-(n?f!+f%8a]&Nu7/@</KjS03'ZX%+qunM#=dDj6
%O7Bi>6\S@]RggeD!Tlh5YOAdcX/3-.CUqSBDHe<-11^'*A&+ejkK(.I?36eL\6r\QK1plbVcB72D3!tOMHE$aHo`D!Ye3N<kW&g6
%@@Wb20SPr4$tFXbA_uG4BZ!ab).0*n12M-PbAlYp=iMjQ.944[<c`OU-cn+H:*bo*iBO<bn>,UjJegC\=K#M]&ES8r64TlQ1]M;[
%!Z@sQBn\H;,Wt[&^g^UX=7KpY18:bTb25t5R_W;HnDnGh*f0Wr3\4Xc<^8!Oq:f)Q$ZZ8?(NX7Q%P#M<En>o%mD"IfOE,cb8nRX:
%CEIlA3/@<i@8\L1gkW$ab;[o2V9-9U/On[C6t.(X56[E_U(7=FKi8i.^3YC9M-&tW""Y?I^tdd3?;IB&VH4<'lRXA=9O"J5_<'F"
%q,=GT*dbdakQjg"0jP)7[LR;?blIg<mQ<<qM,@oIEn[:GX8)2H6_+pu^a7<3Rib(h(Vu9i#D%rg1p7RbGR5-a17DJ^nrZmd8+L>V
%-AtK!/>^FWf(4*g;OQ`JVJS-_)\@s<oQbR1'lhbp7BB^4@<*Y!=D.*OXp=._9T?Qj).m"W%QCM*J+K5?*Y#52a[A,`k.qAVIL0U'
%*V%@kOQa\<3I63q,U'?,Q8DW!Of?RCSmbM,#r#8Q1P&,OI\c+HXY+l^nS-@?",c;VJu/;A9ROW3__ft/ij)?6CG<&1.L%ZX/#B@%
%Jh'CTSAp+N2WfMuPGhd&1ntT<IjTaen7EkG\9JQ\k.r>*MaJkSoBinAr=Kn<i0XTbd_a$L4X)RW<a'McO*=qSi$2+uqpLZO7V5dQ
%CPUodF]Y4r]<oA:pS]C:<m.iZQt-#6Fl,6g38],Hm4td\]f(a`&$V?R]duB6GtWl%R,Z1bL8i[0HO(uJj$1hB8hj"Z;-^7>-HSW*
%al/5i7^V&8,i2,Z+"ZZ5p:CRQ&<e,e(lQHseARS!`KQ:RPM]6tX)i.=r]S!hJEk@*Sg(U8!9SsG_]?b*DL>\^1'U*K($CFZY.'mQ
%AbY2KZP17ha?I3cii4sRln:Kcl-S_Wbd,7;1j4$ES_jRmrgshGXV7)s!u+7^J2h!VO@YNJOk1q'7C_A0X94Ph1J!@ceHCd$VoZ1g
%[ikV%H_&VJmG)qa$$h[/1M7^RhCaer8CHRQ9C5%_6QV%<BqCjq%0iYL-+017ms6&]<lPFL*+B?\,I;YT!+H,aZn!8)J=Mb05tbVK
%&r-k##S$m\)8UkjHoOA8\MBmWmm"(kp&IH?"qmRSOk)c$P.Pn4\!OChZ$C9OW.@QRX:E!*H9ZhYo:)4Q^\Ne6^\Mb"dg;?qSdKM%
%*cC(o.WpF'"@6L1lOpN/Q",.Sm[""66ufCSA<@dX*D.oQ6p\lRbgS.K6(tLg$ce9HgDT\u$Y+n@NP!Y1W*IQd6.,>74-"gH=\1U2
%/in!lQOMg_W*NGVV#:m74KCWei;PSG-ip?:ZR5#:>9\M=VCuNpH-m&#!$QRhPpi"4QOh)]#9TM10PcF@,jWVuTTU*qC1,OV@iCBK
%6pqNarJlNp=`nVU^($WC!l7p[-:JWAMF9Cc@OIZR.ONN01I>3!-l5dA<e0[BkZXC-eTtmHQsq1DKC'gJ?S\enZ;"bo`4KF"dPELI
%jW:[491u4:Q?[d:A:+AE%a)IuR0eB]JuhnjEaG<AIRhBgh(5b<K&#gJ04lUVPT$]f$,Qgt8dR8X,X)01H-eV'EmURUe0kdd0[*on
%TIZ`V[3p4'p2`2&6EJh87+WoOY^?@!S6oAU1`,KD',"$aUrQZjX=%7l>bU/OfDdk%40_+tfLTO?n88sLRhc8;K9;De)_5W:VaO00
%4;5L^N(&4O8TU%0_\S4;UkGmsN$=9_?maI7lc+h,N+"9ImW5]WPUs1j<46@k90b'Bn@H2BmFSObf9;<T.gJ-g]'8c`\mUTVUp'tL
%Fq`@t81MJsNA!;\MG25c[8nh>/X8#XGLLL88mQfs@2LFbHd7RG%Hj<QqtMpg,#6R@:d^,o1bqeXd)@Hjgl$e*EbX7tY!oNBPpGp[
%"N=hc((rNuZPhpc-p$R[r8=6I9CX/3nn4;ADbL5!%;4\Ip'D'&-D_V?D4I:pP76kq,^G.bVT<lls-1%\`,^Dr.mB[_$G6Y$r_&uX
%\VLjF-S74Q%gDcdZY'i1`8)O;&-D;6$&8n]@"J_K9Y-EbrfYu2;'^/WOg&'X(6B^[!!F@O0lA."(Hp`1I8EC2ngn8/1Pm8E?!Eb5
%%;tll]"4"p&'1H%3V=[n^d+a!Y(C@2iWBp"ccC('"(##hqRUro:UY%5qm(BP<mjO!+Y:bU<_i9o8Hp3iKUqdUBlm-Q(I<KbLE<m#
%G*9ObAKj^iQD-3dclj$+pjSTL6@pE'!".7VE3DPa$uG#:CQXrPKV#fB`Y.LU(F)_6`:7:9*6Naba5r\/p(ehs7W`I"W7+\5,_d]'
%c3<R&)"hXT&aGSU.PcZ-HHi-]XjU+B'n0j,-Kih5ll\W(-!/D8HCfsdpJ:$,CUm4L.Y1694\dpPDC&?#_49V5;66%X;&E@<@Nm)c
%,B^+V+6ZLt6O5/.3+&[95^p]hGo@/SYo";Q/"B<=B#-o',EHG==q$0A&OT#4%+MS99$/#!.#d4RJ;S@\AI7FMLPR8oOuT"q#Zi3N
%EDV%&h._8n$1Wc%8CGQoAqr->E5+pn%?Y[/AoWpk_o,#a<Sn(*.D0F.SdCC.qq6P%TX54]T5-umPUuC';"#[kg:oWRB8T'O<#RsA
%Oi^;W\[lN"K`F0Z_#EPsCc*ub2_bc"&OgcO.&^9Dqa_H0O3*`llB8@t=Bin06(!aI4!:7k(qDC0r2<fqIrcL@6SZ%HKH3Gf,8Qr2
%4YB"p8nrF(1P^j)Qb=%:Fn$$D!6Kt"p!CD(U4r"3<h\<Q"k@AtGF#$<jqX(bL&!6c(qfgk8t-k*f#f=%edg=erhj[u-usK.mZ#t;
%)Kp%/jg8f[(o]p5`Vk\m7e>[e5_76e_I:3%_OB@_p4DnEApFo2/pbFG1UYu[V/.X;h@YZUKZ<iiKe.[!M2ssLaLFZ2O,=otD7E23
%W[2YuHQbbXj+T.Q__KD>jna%]G[m".La[*(:W8=A!TfO))gfukA'*3@lYNZMS-[Bo)Ym%KV3<.ipL!eAk;j+e@$A3i,9^!L;?>f\
%+`VNlRI[dJ(213J4o;*6)p0@Ca(N9P=BT8..[-VdoqpJ]XRD1Q8X@4S>_H.P8J!-539ONqjGC_D:mMuN//6,;T-*q34,Up9SNOrp
%.gbGEjWcV&q>-<]\87.K')FjLY5HNg<JJ@!>eM)96t-F$;"2H:UGu@D!k$C%39>B3O=fYR[mm_:e?>UL:X.%&g.%Djd`tK=&XU4.
%F@`q`V:..8^'I=gq:d&2=lKNG;='pghVZ8%`Ne,_#pp>gi@7:O]c=HRrtH!?Zti#:%#&AI%+Pm`1o$rr(Eh%]k^Km8Lg9#C:qf%$
%ZXK/b6-H(BVhY%>>?n]o#T,-u=pV9h=X6ce.2p:`AgMC"WdJ:N4T>BJ]j$OD96-m':4WA<?3grFlpCJ)_B8P<(+DO768KHm)X8]D
%-eUj!as%(=3C<[kq7"R1_IN&*V_bC=FJ"ajJn/Lu`K#j`bh^O0X``8a468to_bB0eU88Ltot%X#BijL@fu5q<pZ/*$9(fT7,MHiM
%XbqC\a%=JaAbLFu1MKhCO/!&t^)T=9f^HGsE>D_4L!/]KPFOhlc=&?+\hO'#e%`CnDGq6?'PtbJ20\oiCSEYC3%:Ff80Y.TCSm>m
%P)Mq6M/31)8l`ZF2bDnG8;?J3p4e"l,qE%s,?KN%[)qrRgUS63fa9:`FqqV\q`\B\7)$('ElU2<;Ta4ibl9B*Jgs8?S<OU0b9EOX
%[c,eU3P>Vc;/p_':Osct[19)kL\3B[#!d9:lsHN-WnqHp4`9hmW[7ASFaE!/]+9Q+I3iR%3b,1u9s0+p$>h!+37[uZY=rHHAh`>k
%&oZf723iLroVkUQ8eLTK-721$anG!lkcW;@5iofM]]63iYgKb5,`+f7-D^1Pbg1A/LH_6&Ysr+G$E%^Oi@<^shumg*U7Z9T@3H:,
%,*h'L#UIl2Fl#spkGn+*jC6>I6\AT1U#<)*oGWX<o9'!Zo91=!&s^)k#Z,JP"EfXkrX3hNRE_5:@k<5b3Nppjc'CXeC_en9@Ijds
%.dpM0&WfWLQ@A2)h_(c/YD$0!h%6;aHp3.3iokE\TcS]r@!2o^?aF'6=S^3Hs3PU7MIlrN*KdKK>!G$O@=>r&3PKW7efbhu;lUs]
%WYM0H&LdG&KRA\T)ejSYj>EAGQ;r</"[!E\KG+L#'mr\^lW,g$Wd"S646QnF3DMsBL3/[\=-0LTbX/cTNoeYjoSQ81"<f"$_f<+R
%_i-\95U#>DVPRkW#GgV%RW;jq1nHCP`X@Ri!h1f@5rWLsDl-=m!K,:I9o[11gh]RO[\Ju^)59fAa77VTQUfM]6ks\$d<(bA7Il)+
%l,nQ;SXN=CB>`kVit]ireUV,cGaPQdA8]$]?$@!gBf)D(ZdQ0C)G_&78ncUuX+<s?>1#6H(Y2&q6&SffF$L_qOXZ2iK;h=6oTP,Y
%jt)rqcpEZPs5u[/>OrD$+',+F<XH*L:9Q[IHnf5H9NHq4cF<C_]/)H29p'&_U^V(M;hKHU[piRah>/g0=2B5!UN5)WYZlt9$&cb&
%g9$TM8Ib&R@;I8\5+@^T<:OD+eu,j^>+Xc!aSqWP^?<Ple[nSr]2$AX:58"DJGoS^rk/Kl_m5^IIY0[!M_P#.N,6\j:HLT]=!rct
%&5ma</&YdGrEkX@Er`aT+&5l1CEOcB/BDa55aH8f9rkr-82@.Klj$2`=D6(>_befM8Q6WG3Q(VrTft%$;ifeqE"/;%m)_lI:+o?D
%JX"$BDgB"mKlc8@X/)QqhGuCX"cVY=oTW3G$;]uCJqQJ>CTiZ*LZ@Ncd!BstU%PT@%VmViY]35MiPAu6MrFfb0Wk`)k2Q7"Q^)N&
%=q*99p!PqAAEN%3-*I(rV7*mbd$.Q6n2HV5Tf=d)Fna6m??q,HNp)-6U'f>VI],1ZG4/>?OH]<FIlQ+i:_g(tiH1Q%bbr)N9JrDK
%\T[m^QI(tHe":pYHjd7*YPNuZf9rC"qd,2Y&OtjPU;aJ(^f+UIH8_LT!Y`5_eT2ih&.DIVCkY_<NSrd:ZV2l:&EB.^JrjshiZG@:
%\l"sYnrdu2"\>LZqhfC"i"aojC#4YV1B`<mI;t]o*!)`ngKZu+74YD"g12K\VmeYA(qrer\EPRZdgMnT:sDm'?s;WT?_7(X!tQ-I
%!aDq%fG(YB8a5S??u$e;N<>u-m$1+-a@\iN7TK>%K/L9U6oOu9af'$m<pVUPHQ7'.!I?VgH(i+p9YN6_4'>&be1Fl/+i%GoFZk<:
%r$Dh1B/=$p$l3YbBcR]^g!kH%SKpG8l>3<=TMo[)&rc+nD?+XdlE3YK7^<+-/*I]Zj4[0;RgoUK,jH/ggdaqVDt.WhmQ`JK^>Z;W
%Jf6dh$jRC+0'>=_`^fK+@p,BV^?qSG(AfsF!JnKZr8WkK[[F?;WfQW*X9/8jK0FPj/jp9g;pGD6\(*\J!g6t<M2D^o@4g"&!e]`Y
%mau[F>!;BfaLWfWqW+8eq!O4H$LXN)+EYmU_[@ch,/B-tfLZ2P,T5)Gk6\qTNQ*L\8P\o`c(&6F1d7$)cBdjKGFIT.a?k`E)f(#g
%YuU6cdq6%D`p6>D6U!D8.P:+"T;/\=ea!jD&2GeM>Al>.D=Ooffs^:aVocS(eI'W2`;!G.>RD#m_!@Wp??$Hk+Ae4W8kFqSX0,3o
%A6TW.LI8e^n<u0[_*h5!(KEIjk=ITdKahbNX]1V4VP('b&#\a!,J+$Y71lJVX@H,S*`SrJ+`7Jg)C=3c:`a"2!iO1`"V*k"OTPK;
%2V37UE3umTJWRISf25mu)*%K*D+o>)fWqk=T99:5f]<<1KW$3YLW"iT^AYC0)2q`dqg9Q$K9^t)@VOPT8B^mG)[&<)aFJ81$*Uk`
%[;sWN(0@=C!OmJ]++b%?&$R'D<;C?#Yhle0B\im6Y694&gm/9)^a',94(%F&2.^H%@rY*F1]6U3,pm!hh2C6!2Z!^BhNc0GX[]'D
%Ehr;?Q/k74So_>E<oZ,2Q=RN"o\8u%8iWg\8UVFP1#u`%Tq+`?+S3qF5ufICA'&o!NiY_E)DhOqmj<Jr&qp@0=!+'a!]qKCJ2#`f
%:f/>Ig`_KXg\K9g3_2%X4(4H>AcQXYi56ID%!/?lCh3&;%3d-mZS,aSXfr*L]+):.H_2u:4'N7q3!qsO4:3bD4)_U>aL2*bp9fQG
%ZXU4V9gs>28LRsZH5GAGW3\<l+UWa(jW^NKf]B#Vf[qH0L-AGP<,HudTQVTQKh!q<ag$,S=%Ck/LficP7J`^D&m:1!s.Ein;b@TA
%4Q#V_/:47S8Y[gr/7=3`#R!un"qGNYmTEc.h#6N9Y??Z;KLi,Veq,F#D64R-BaPmrUfL'2L7CbNq-d5qJV?qNdr]S\[n2P"L[g;R
%U#tVH!D2[</W\W>MO1nY>E4D;j`ViRf2bR+8:b#8&e1R9:^Od^H0/=S;Xf,BBpM5J.0[WQpDn0^Uoeu]Gtb_ZQ_K%MAABr+-7h?p
%aS"9,%8D.GL^*.JIJ:UTbuF`FiMs0+UI*Ru,k9JV]>Fh2nRNP4->ts"=5t8-=k-4tdX<e.4GNfG.6Ul$8hqr`92a6;\f3`QDD5b%
%0<<+JE:7ii^Lgl)!tc_CUa\qW!M6lDa#),j"eeN,42Bg\mtV<08'Im7Tt\+lQ!1l^\^DfkCAM62,#nfi4dSUnId[`CrR?bWf&o4"
%DF7@%jcGb/j<2T<MAR[A';pr:e2Y6DOjiZojNLJTEmW@t=b8>?9samSdt'4`J:-^V<<S,Sj.^'V<F=!jEO5LV]r>BJ(ZMU?[,$*+
%JJGnm/57f4(l(nmea)hKMZ2mQOp$u6l=!Fd.B#ksK5'\h3Z/>DYFOg\nX5Wl82&sVl]ufmohBX\K1C1!j#Mm/]T@#WQk]s5Y?ph'
%EI?s$\P<JLCt/=@WoiS0,1\4W?X`%(8JOZ$;:fCtHj4hYe:uE3BRM!lWm;7Nf\Tn@oPo$==Y8mRT*Oc+\ek[7DG"3'@!kD]$YmZ;
%Z;#FJUe++^#"4c::1TaALa'5`3j/ER7)c7;L8Y)C[f5URWrq1`n+r2d+2K>6?q1*CI$I[V=qi=^_lN;BMC#B8s7M@OSL&/snZKEf
%g()%!Ms\`#<.]J=49Hi_K3pNnRS7OO!bM8&DsFpYJF$'U4*7PF.gJA><3<!V?.ok8@\V7H5)IAUMkGV;ff3ha=@btE"_1&f.Tc\_
%/uh1%`F`26%KLDu0onf/W_!7\,"?(K.KGWJf.i[*&HoU-gOLua3<!m.ZpJ&kodU?3.lPT@`F&%__Y:5%Ot_Ut'K9(^`H66%Eb3dh
%]D:F"q<;]"a[&ZC(,&b'6Vp=($l*WIaSKdQP_RhN-p)UYG&1R!FNE-R0YQlQTK?NMGlP[1^6sb[cJH>0LO5is27_`:,9\N-F4'FQ
%$&I42juj1DPt??+ff,"0h^K(5UT\/\a[<"^T1`=WZOd_+RbF=e>KoJGn6[2-gRq1O22G[Vqdspp?:]@[@^&8fD0O#OIk1Xu8RTG3
%c41b:gc2QrFQN"G5c_$:*]<bV(-B*JRPq:k#&8O.(Cb#NQk_7cSrQ_-4-09=*>h(dkALUK\.mhhUC(D1:$duDEH2Ce2P\hgo!E#0
%qb7@,'N$67R'CSYFfFn-Rfn%G_nKuJDb&/>X>c4>!YS2:!<3_gCB,reD4buo[c*YJqeX4kj4OC2$rT$?NG&Rqgc-HtFGc?1htd$^
%3tp$X3_lqKh)s]BY"SU*`b6r$JHX=d\pNenW?^_5]BDWmP%!.cL64WiQ=(PU,Ns^Z+FMjYcV?7=^+).@0$LpoI>e8h/#3db:md>:
%#Gkl^."@(31/L*7ONN9ei9$bUb%[hNfimZkW*04UGDKL,OsX.Oq:\o-M/b2[2MN.O&65!i4bXVR&oC38(*'%S-TJq>EFujXi93la
%MSca5pF%CF0d&<Qm3*"L'TafrRZ:r)lm./1'\&7GJ^rj2+<lZc$Z,[fRT2Jgp>cK1=rfWT726`'3o"p93lQG6RpOXED"5f4TIo8s
%l82MA8m!o(5<(hRVN$1R>B#=O!4^d.C3J?W1HA`eloSFVdcf@Rl-sCCa\87qc7%Mp(kJBcSA\DHjQdC>LAf]tqMNqT=uhAj_!etO
%0(fo<h2;Ht>#+-*GK/_,^YkInjbU9'#VU+S(D(?]>DW`RA4"mWL?uf4H_pNb0e-dAfS8adY&bB8rhdLfGt@<'Dq5o9!_k*gF/Fj>
%d5LBIZjXs!F!">M-@ROiRLbRj1._S2);qrT&:O+g&kqmO,s`N-j^Ap_Bo$?IeJ/dH=[AYL&(?[$)Z`IlRQ0DZ2]].)e_K/j*mlEp
%Q5oURZQ40,eRgt7n+3&t^<b-t)"8##qN&;\s#L,m+Mmd,:AqR^s*g[p.N<fX`]m%6kh/nO'`^fF,3p2$mtMrGZkT]l=9,k(Wq`n2
%S*VM02;RFUqn!AcpL3MSln@G;2JCgO]mOlbloUG-.[d',_=^i(niO<uE3c+kh/o:Pm-ei]h$q*1_8"W':'-I7/Oj`p\X\CX.0oQ=
%P^P9WVa+G3kdV0#_o]Vipp6Bh477.HHFh//"+5<CDo;[*hdW&@,R3/>Qj*Q"e:ZVL"$ES8[q/j)jX%'D+PVOr1bAgsT'+>J%ZchY
%@rbiU+Ju#BACXD9XqOu\gZiSV6K^o`:l%&4XG&'#0oQ5!`3%5",M4:B*[)Om`(NNLBnKRoqT)VW&D%:)eg-s/9t2B-b-Mg5L$`KW
%.D^sr0"8>p`,dkV5Bf<ZWtJt]Ci6JGR-HFSL5&I++*?!g#eMX=k,T[2.W\<IA%K1U,_uL#0FBOAnpn5:dj].8+LsIcf)&@./6&`5
%,I9h1#^g/<i&D(%+-YV#.esVnqj1s0jlo#@f<$T-6?>&(B*sgFd/^HuP=((>NuS1)?2lr:d:oojn3e']Ek2/!ZIiN^3&&52MZ3WZ
%8Y^$G$<3*Fni%>lG:<MhG+!(I2,r"lVXL"&LF<4hSeRM/=C\T>#.P!dF?1F6G[,u5=Nh?a1m9B)'SM`N\k2N=^XC.kcdqAZJ_^AI
%+""t0I$JZV!I>I'E6:085_Qp1:-/XD7G^fi`)K8[dLcdO$(s?h3Ut2)H=e80f`qC6.7a%=W@_+_5u&fXV3$gO'H<.4i3Q@L#$<uf
%\T8?SQr't!-r_LM<IFliqr64FdT?fQ,`uDZP[e_LZk,W3,OhhRf&[qq7?fp\&)K/jZ"+1q6#]Oh"_4d^%H`9'<CENKCGBg0a+.&a
%@<G(5FJcMrYs[oeE;Er0\'X(TI_<*rrT6AE`H$YZ`tFrJ7tboW]"T+D1n`RipjDZ)?:N?7@QHCqQV>DRPgUH[=IP^N7*-6#o<a0W
%@(-r5WD_ZO(V&S26O*GO*3.r4il&HWqdEj'"2*LI<078KX=_!9/FTGGOL)^;;bmgp5<FphFKjUUN[fa<Np.ab(D;7m+,0/]jYE/3
%1,[U]JPasZ/fR\)X4-j[H7S1\Wk]6T8$(2GlRo,;!9TYBh7&WDaDJ@A=[<&:9.%@i\j)Li8C^9cViLZH9SYh03BQm1-2dVK/;(7u
%'Gl?Eg/O!UEM:M"N0[+`38`mZqg2T3rE/[rO%%qf/d)W1H!t*ZA:l_OjBNCtVCqNN`lCm##As=sQ(@N(4R>:uj#]9+BC+)qhOW<2
%'71ZnN&0]*fu*QAmZ_,P<\O#QP[i8,i6g^5+,ngO0R\";m!C#RVF\jD1FH<@Q&M7mF-D#<9E7N.L\#qcZbLG@hYlBeo7PqK1Dd,,
%ogNa0JFjad(?@(R\l.tjk58W>L5Wfe@Z]cAP/u=5:%eaPIW7!Qks!GHhjrE3'74q4J's0B47TrlW^-*&II?+$'AIQ8&EK=(@XC*$
%C+"03PKig\`DY;_loFrbT6D[Vm_mt:'2+5KIm<(2aYD=YG?7j7Zc0l/?K/n(1t)I%]K%>t_$uRU3u!X],]`)I?dZGFWJJR<?R',=
%e7CBLbqQ+GB-_4.$@Yg8l`MaBf#OVaa/)E$U.Qq*-rM?#2'h^//r>g>VF1u+<ju*([*Y.,+(Op-1="*D'\K?7;$]YU<,e7.OjlsA
%cK'E$PEe8;FHW:JOs1]9*hm,-P;V$8nRr0GadOr:XO5S0m'hWQ71`20U<<'/arDbo^)=P?Wm[])d7jmOVNK@ZQM0V+V*>i?WJFlo
%ADMm%>``6pU1g@Z:W:1O;d$4:nl!A7eVG]r1U=8`ZOqBh%3Q#'M^a@IHAC-6NU9o<N_/nkCGhDXQ2Ln9K2:*!.R1V`<TTRuiC..F
%m;=Y`Z*Ye:U-j)nd"Qhaj]>d*=Be/PF?p^p1ollq1=Dt'k-_g[d5_\W6g/-?D]".FP_5.$%ohlZ'q*+%()Q\?DFQIXAksV[&/1#n
%OO_je`//36N#S1(&ocj=JAt&IHCHT*:fc!8I9T*[;J]4DDpZ0gdeR\J?;f.rYFC^*gLc_YI2ElCVP0eUDH_^0)o\=ZG+$R47*ii3
%K3G(-08#RQ&s5f4Qd+aVUt-,.-*@Y4j*`A))JPd>kU7@Zh./(7dDta*iLNFZiefI%'>n,PA09?t#M$q.M9&!4-`.[0I3p>[r9S#0
%M[uj^7f=bT;Y78_)N&@Y7l-+<-:3S,X)ThNHd3IS>-p=jfu2f!L*#tf8at.4L4)<S<ZF.21+uD$UIIeg(W-8%=Y$h3kO19g=<,rN
%N)[%R#bW<0@A8:_'hYHTj^VCt2_#j`iK&5*X#0"cNH3QsO5DX6^clRU%4KBk#/e<[aJ4SNE%p(agaDHERUXr$+XK`Zeau3?C5IBo
%[r20=^N+F_XTWUrp2Nuh/&l+W(mdhm$gk)YeE6G9l61_[>&sp`9[KIOQeZ.X@=NmtLq\]R-+He3/hY$h?]&NnH0HI:j.)VWM&-fY
%lhJO96ia(;qK7WQ!@8k]ok:)EXaOglLYZbjo*-*(R:'+gL.Tk`[Z,e8(&52;lJ4<bCB=!XD@osH9e7>dKX0fi+//BjNZTrWjQ^dS
%8E<4%A0IopZDG9oU'7gI`'4=/8ZubDM_dd&iA7/3DAuUA^;69fb1#3SMS94M%^"/f![CTKYRn,mFHh'?:+/?ab_]=6Z8Ua>N'a$$
%2P\l`K:-ks'\6F'1?8NN!f\D+(!YEL1+pCPXL-HAbh4He?,iV#G+loAH2t<abpM0ZcmH+/#X%1B$g>Jc(_u$o*hMVmVlucNK.a22
%U'R6l=9CBSO["TLjap"P\pa%(nkD'HB-I<3Ki.97NA?!l5UK:+AKf`A*Mc#u8k=bR-".a#Kj?T2Bcp>fm+m$=:G7E3c0+0CD#H11
%lX3_0XVs,`@!7tK8jd,16@g3](+n+0P2d2J^`B]r\d%QVjtIsW,J1_YbI2([lKL_9__W\8Ve=l]aWWdEl+3Q?k_Q\.'_D1.mMnp6
%pTQmW!jQ?aOoBb<0[\^SrVB%E$b'Jq]oR1I<oKaQ(<53'ab<@Ainuo+SB1-q?DA?iq^;=^n0%T8@)[H8^@>BT[hKV1E-"8!h>QP5
%hsU=XX+nWIUV$3dW%V?1NGE1F\ut/h8X![@$IB/qiH]"PVX90/3M8+:;pRcb,?Aj/[\:^li`PLmOW:1O-Mlf;4SJU6<,*OF-*@HM
%G1d'onEnsorL!Ll6Ii9HoO@X8=*]sAg@!7u5PS!!'8Je7MII0aGmbrjhQK\_hlTd6(2IPfS=C2BB)uBn5cgfBrosD44F@U0Ro(hE
%lq>W!-2dRdHXMN:l$JKhiH/db6W$N5C'f/Xd>u.u,gfc"N"l9=O)l$f_dZ>0I\$;fB9(C'_sc>Ubj3B*@u[X.0UY41JdE&9Flh-.
%D7E)Q2/b_M8&[Ps4*hS@.)miuj$YX9-eX:MH<,7T-Vue_^$/$q!D9BO/@!GiEM5l4Ip$mXPDrkbjoL"SS5<UYC&rVkIVElrAp0Ui
%[gM3,Q8S*Q%ON-k_l#35X@=D6lGF'.kA!h=4D`QYd$/6)mS3/r+WJ97irg`nU^dr$LqTE[0bGQCO&eIj@H1T9f]m?QT4SZ4omA4F
%LQUJ2`S#(*^1[Dh-K,\saS#pLJF5AY=t0eOIl>3U,Vi6L:TL:qEds-60uqTV?fn65UH"3l10<R;.9d>s&%MC"kXR9:FfZR-5M`k*
%_OYTDnm,PQlctXumC4mJYPW^6_iiL"Y"gW&OsgpQCHC@0"[%*tB5MnPBQm%-YhD!$/55>VXWjWM%o)<fF*:c2lI<P+f.`U&[2KJD
%)rkWnMOVc):cR^G^n><g!9j1l+;A?DG3U@gm;PBHc!-s32:5j7Gf'H<B");6*JgDh'"G<;`lh)o4mipjrVRBYB+UacF2&fq@^3I.
%f^d>fBujc5,)i>N3HBg(^*2!S3*W.X&NlTPE3a@&PhOAko+a?O0aFmd38:GRk69^+bbZ2:r54efZb7c8O!b\,%'LbMG8_ga1hB%J
%+6J?bR;+*A>L),KZ6HiQg6CFKD6("gQ/[aG-_#U9IFi?XTDNRcZ[H=/btgCaMf3oW(LkaolC\+QYNda]nDQUhXV3B'hkeshWj/](
%HoBU,C.Fl@Ak=l=b6p+FPANtTeH>bY74Z!p%VWtKi=E9_$F>'tA8$FI\@Qe.oVBA_?:oE)bVKk%r+43ArI_lN`pF^WT>ZiABY?t\
%"BSA18MUG[[m$=a6O;i5FGH&;XM/2FLM@7a5rH8>F@0:&A;f.K9,HZnMVp4$^Zf1(i`^JAa+L&.QK(&5Bpa!@MM4IH[[SAAbfSkY
%kKc1l<=U=@\m]c%'#h@gd3f\ggVsJchT9[/YC3pdG*f7#bOcqGK%mI)oKC7ACF8PWVsDT=UK#.*W]<LM`Hc;$BoBE>lHosm'ZquX
%lPh.-g9thr<0a,n<fl#mg2hFWPrm$*rLC_@/`4Ll7>WDFP11n6<-=]&C&6-)C"7@AKIg#V$1p_%i`3[_2WR1[g6h>u+7^a%gcmnC
%LXC%,QBGu\9g4"4D\7DTQ9@8][8P>qNt.FW1s<G0:gGg_oG=o-?g^/&isVAfS9=Jb"KHH_?g9&g1q/87B<rg`_B7Pf35oB1I&3YH
%=R5:,Z\UGe^>+.de'JorrLDItVKRcu\^[*PJSZ_KE]?)?0oN.Wp(`.-_R&tY'=8Jr49(2Qq/ZL4:P[GkcAWj(3Or,t0<Gsa7fM%c
%0ZcEQ?4mPpSI-X7U,]#hBMb&!D,c$8T/YM(fG6%eFL$+7WJ[pf2k3sn,+5;j6Jn`D/dBmdBd-0q].a^f[%a?34DuQR1*CD>7UF6b
%(9'eGrtR<?Mmcbd+7=Kk0]F]6/L)-"WGUF5CD8!5&pG+H<KV=&<'(`QMi3i\9<+?=m::lUGhH#)PC9JRj(@c,S6sfK0eI-(>rdkp
%%O6re?[Sc07LlHePuQAj@fQ.<68jofZVGB_=:kARMG]-:JCVAU0'%)2C:/[o/8N>DBWSR[D]MI![9qTL3nc6@I+6&%rOD*fVoC9G
%V#?-]KK(gSaiW[fi>+I6m#\6M2XZDJ/VC+GP1[=M$#Fd?Ag]PAcOooJSZUXnLMHNXT8!]7[)m4#p[NN+@k1I>e>a_1YS:"==qG&G
%,%Y]AWCZiJ<0G?X1Z@!u;s8(uM-=AYbmu1CaK>d<F>B$ei\2b]%BJQ`i%c]WK*on)-WC&6I^WkgCoM6WElWiH=cAPeHIMg9LM;7/
%a8=cdo7^TN1,KE$TSOj"?3A/meW8Q!=^S.;ckgmS&>$eF^D;p=b',Kl<)`c0%mM5C.P[4B(\5%ma?i?#aZHqZH"6<rpKRh9.3Y^-
%4]p#EMId[tZf*(XL6F688s`ci3W-6Z/edDqlU^QjG<G:6^O4(SIsTu/htNq13O3"P-<kuA6<(2@"=$rJ_8uuG"VW%)@P<#.S$2[1
%.\0(BFVFe)htTj0-hkNI.c`s(/V>_iHd2KYa2F5a:9?K42C"Tq`H]h]MHQCW]D:Dr%]C14$N_@C\8RpVnM=HahQafpO]RjP.p.=!
%^OEA<KtajC8:&[p;K+/J\XgXgZI1\U;U0]3bDHp.QL$fG/c_J(,+Mrj@6Q]Nj!N*>hjrB2o6RI_lY#XtaBT)Hp?$`=_VFH$lD$5=
%?of=iC6?0nO#ht>Ec?7ufO-MA$I]CYnZ>DPH'f]!k*djercC%#Qtn$e79Pqn2IqfrC2#W_C,[R]!F&aUIatPrHE@CUU/!p;hK47g
%@C"LaG/p(JqY@_U?Uc^NL9^Gg?-cehX.ML9IG[3UpBX/T;G4,T=#Ki#Q^_5_l=GoI+.'XQW4]MF)maC"EPn/CmiiqenBY;e^0sFB
%:]g"$/@UA>Qa(fGo=Tp=*8';n6l0KWCPS&5*s_\@.l5tG@-=H./6WL9rJEZ_TA(F5mm##'#7H=%k4oMCV`HTqGg^F"QdT.MZ[KX<
%ff20;HHb4eG?XXZ:jh0RJ"oU/CqT,$m)*30@;5_[ZR+l1?2/2"l)Xa>X'PL9heIFZRsgJBB9"6\DVrQsf26beU'b67GFkoh^=k^D
%j/fHd0Cn/,Bo9[0)unr*s4-$+d83<(gA=BO:*J5+$6nZ3]ICpWE0W1#o!hDnF7#u#=KKa+@YLSX7mLK^L7ik%C0(jhDp@mm##Q%u
%!Sb0m:d*K&6as'dnmhr>hF;U57?nK:mb,6=JIK>&2dZ]b?(u/98o,j_am3KFKTd9:d4GY"^#'AU;9'C>ce`N2r:AMDXM\r,/$V0t
%jJ.m@aEq/afc8k=<(<\k7/2m#^r5'+];GEZY01Y4>lhI8*.#1`)VpRl^JK,o0ka'OAm=P8X"Btpp#h&$n/<$1LUEH:9Du'*![KaA
%&KV:p4*mgB4M'h:b.RHuBOMXN:;)-=Hj9H0+&?/MhI*+5d11$,6`kck\_G9IR%iGUF1h3_4*Bt/hE_+>/pb8Y@"lr1Q(8,FgTH=*
%Rifr<d6Q;qFDFkuTrKQ<R?tlgJ'<mH"Y'=-ICe;;%l]@A^\r(/X*l`>E"/fJ?&DD!\b.T94:HhI>5#j37<oU<B+m`U\Y<>)=UrO6
%;^h*ur0KCbF]Z_QX,X:LisI5i?:nd'eFD/%\1IAS8&%j?(JRDsi3B_>j/REjA<bMa4q7)/*rW?)N74#Ybd0g2c!q)i'0^9%W``mC
%1r29W<+qH4oj"D\.Z1`D]"q"aKFp1,BX1?RI59,sFI3`'W3@37a-KJq+*::'@sae3)/s#sRQ['j%&V);o@1Nrd4oI04;mM"+GuUM
%.?)'5F&mE>j'rO!9bSuQn*cW.pAZ(+B=FE0`6iu\5EV;\?Sp#6jcY/J[ao&OFP'?pAhpub4)T<<_E1+tT$[)09bVi6/'`cPf"f'\
%B#um.p=V:WVN&GT>,Q'q^Yiot@AMu;ghks\>FbZ1A=FNN2@o7th"'r4GJ=++h:;0G=B+_t2RWLsEHu3l?4ZX'%X>US&sg2BSNM+n
%f^34^R\M6So#rZ"o`j#s_eog<m8C.D$&(Jnl4p$"j/A,:'ib-+MkMWh2;N,Yc$p9!a(l%*Y+>&GUju\WG@Goljs>epq;H-Rou(j6
%B?\h!I\q\opO)4TjQQPDj\,L=mUIjEHP*ll:lTD\L#Mob@*/kp4t?4Yb8Xui'IO_DWUA>ZjJPE'=Z3>q=PbokN[naHN_3Xd!qZf2
%q;H-r*2NUR^<&1nkpGlumG5Oj%KD`XC<4.k:qK'.Ye5o\>Z=kjA]`%/-A(nBWasD%4[GY9Bl2TBKrdmb;5%B7K3"rC7AM'6E/E(Q
%eX4!AD=n"KDLPK7:`5AO@2@CYZje7kKF'NI_\?B4`p.TIX\U;p-V,_Bk,0d+A'L*$:+nG?O6>+:B"]Se&B.q9)\DQO1W8pY_`#9n
%*V7b5]RT29TY3MV[-4,:T,G,P,.2(X"S\JcJ,Sc`DuS,(e>p:]COc+R)9pc\>5F-6`39->5>P2K[;WI#72(&Q=qfoTnGUe(a<S_&
%D!B+X-4j4IQ]\JLQ(!eI8WJ;2=\X_HEi;%:pG;e<dDj=C?L1KKD^nl5].2fJ0+*oq/YUup+nA0(AuJ0EPG,2n@IS0#oA6p:A[7/g
%:g?j6:-7dMCaU0lHsYu]CONe"(+2-`%jB!p3T'`i_tJ>(ojO0@7c#oFetDYirI-k>1*,h.@sg<TpFeWMYrBUlG5O/!!ZT@sDfQG7
%`L!FQs5].l!O$0fDd*5TXDlL#P^ULX!+G![j7SB.)5+iir8JGV($fdU"d$c#E;ED:^Fn45riQ'D8Y(o0!"o#H55_>YqKMnno\k;u
%]9Y\Z_r%jc?3lMf?iTTF-J8:ZBA]j:c?A;[1DC7lFe@JH]VjI'a3aQ':kd.POY;`i_2\9TC_j)`U4qi'5W5p4L6%Z>[]=iS0\\cT
%Ip?FNSaOk6"4"f*4DD+Gms<%PFCcM#4$Dh1HZ%U2caY\$[YrH5Lk!e[_^iGP^&BBtFCBD_$[a2Y0mm4S>lJ%;_ie>464Z0"ZNWTq
%$U\csDgm<H__pNjTQ)[l?-qZr7fm24V*:e0Wa?k1LU4NXq.)Tpdlm,'Vd$e=]&*VGD^3V7o#JIfIlD!ET3R(no0p:H%JJYFD0$ro
%FQpj+-bm_fpZ,`o$-IDFgil'HL75tsIQ3hU;iWkD\Z+c9dnS]4f=Ud')r:s'RTR:.h=d-ZS3&C)glAQ2nfmO&ilA]c([f7k8a]74
%[`Fmj&s$g$=U#->AD+8FfZ7KC#9Ge)#bjm:#\H1&0LRIOKUDO*GI.47i,W<,bgkctFJc52@h?k0D'&lL_,+TaD5NPf.D(\,P?u0]
%4e?#rXUk/5lX<V's7)b"lGm@g*RMV3aIJ@-H-H[^YCrX6r_XjD&FAeC^:=d-%=O2LT*2&-NLMdY_$N,GZbCdCrD:fF#0>`?E9e(Y
%MiniU\h1LJ1<KVl/=T`'Rn#Y%]jf\&>UV:CXctRF$`>Do^4RNf:mbDrAH;Dl8RX*hTs8S0@Fa#4Y<FLJ8(4#92)O@6^,"U&qn^BO
%+\Pe_o))H@o:g"b5;i/^[B0&tp*n_LG\t1*pVRFe&P-SNJqS@B&VMCrP9>OX<G=eG;nuj-5jP#s8Og`jMEW1T$"gR&Apf\:5^k75
%OJcF9O)YPF1Qa5)-<A&dLn@?!-o;Q%K8(XN-Wb>?Q)n0hIig1M0EF3eW<gYt?c-PIkpQ"MaUBF=8D?oX!q$mb8#bBt,gE"P@l2rD
%&Lb`F?R]RWe;+\N;'tpBqm2tn0Q,d^H!-"4*M=W#?MeVXVU,A1aQU^"%$JOUd!Fq7p,\\XG@VdF+pG=eV"qp)#/E\s1:3ntY+r9>
%lM0EQ0,ZZJ.6KkCed$W.B:HJ@JD,,tZ;k*_\h3RM))m%k-._C#SoBOl"k$IeU/`\%aBpK!s%H?,f=XF"e">.7V'()Hje]mE#.[oF
%Z8-<%[#\`Y#6/ilGjOZ+[:R<,20@?]d&<Wu*3sli,crK[TRu^D%stuh%Sg#nGn2-FKgZkPdiW[GG5oaD/kN2#mjc"<IHLgHZe8%M
%#i!qqrhNp()rXQ1j"RU`V.@4bdH>-sfTe0JH&]l'mB#K_H->EdJ>"ke3?)8G9Ng`\4=*La_8qQNUOhMbEOFtGakf,sHp8`W,'^ND
%!@a'GL\BF-A&U^2%cW5gUt`ROB\#KH6V7`#+'d4.;0/G`3&CXkCeN>9'hQ*RcJ%!\O)3:ddS7\PbOfR>6O-nCX$06XqTeD?T%SK$
%-D1aSDdT03*(T`bFj9>u,\M/<(Hn@'pD.jjMBXa9`V/Jpi+9DWVU(so_gjAZ9cK5.Co3%HR1oEC`F_MtecuLYN*pL4Ec8R,\;*f4
%P4PNt.(/5"m\]O@d>YuU)WAJZ`s;cr>u(tQ2Z*=LT#[\V=73Q1rUOlbOGE'#p.nI[s8"s0s6T7`&]-`ok<8#-MpqBA\U2F@U7ZYN
%pTOKJs8(K"qR:sGY</:,p?SkW(4B5d=pscSoXlQ#p;-dL++Egn5FfQ5>;G$(kO5te+9I`chn=%o4M53Cm6CN?JV!Puo0-sHB?f%j
%lh1@iBmg&.Mc_#JS!KfZAj^0jV5nP/qj,$`WRtH).'S8,EqI7;?R]bGWIV\h.)BNN)"abK[;r]mXK?aioOGlma<gV%^MV)*>]+^X
%1_O8hD#8lCb5CL%@)(F'ZI_GM@8:RAK:jXcPQ/:frS08`<Ju3ROp!aNi\'YDQ9,T?mY!`k&]`2.FE.+h[3ga;HO]Eh^V&,Ijki='
%gQpQB^6>k,b[WHB\KGTO<`lBogt;7+Z'Au;E&*o9#Nj$:dX+P*UYE*AMe1XB`Yk^SlVFm[97PO\$6CZ,QPGK;aNM8.1BBFN&mQ8<
%hf@;kY9:c`?+NVc8VAQtnQW0E'+S\,\.FO8C@VCFE>bRR?(\JPaOa(2<Sq;AWp[7k2cfr=1:oG8&TD+U1P9P_,KBq(B5+)NRMX)+
%9r$flgdJ3:^W/5BesgB9+!(,1Y$SJnN2U;=BfA]F>PDH&h0*kG$,D*'?3ts9A1_="`L;*m'm%**F1"U4eS8k-,R2(TC9j-pXE*tt
%aXX5gUU&8gX_M$WoZ8#XpPDCCW1K9m4\nXD,8E<O"+<"!/_LA)ZMDSEHLp)tb;rCfWso=Q5=Y\Gbojb12#M>!8UYaF$+:>Iff@#D
%C9ZF=X&o[u>GeND$9cr%.R9n6#r9bghmkZ&4S#BU4e_AG_s.!/l8[([^2(urL4'R*X::WjlOUM=oa![ff"7[52!24U062C&<_]R`
%lL$7X*4e&ch#!uY4Oq\jda!EA3eW-_^f+NoN:@L)WiKi#?Nm#T\+L_d>/QGJ3?h6I+;]rPb`Sg2I-e&sOT:;%6.OoZefK*'qm?V=
%+rl^m`"ceR?M;Ih(/^Q,7rU^(n(XGJ[!Q3@#X'>Bm]j,2HJ6M\*(TK)Blfd;Vr/6DSJGm"Jkm=0Jr2AOYp\TDW9:[J4\5obOtT>l
%WK3[#aSmlKSl"?"iTO5(Bg_&=pmZWoWS:=Y*QT:Jg5+BaoOJFpoatmK3[.?OR7!Jh:X)tnX2n4LLSB%?&UEC!(@=(*:XYY/hju#f
%)YY#jgETL20Wpoj:TaA+P1)H9:Mh&Oi":8"[btUVF6!Y-KdD&XdR-fiSVrf&4nOD&<i[Gb[>1@7m>?`TNR3lbO)q@3F<r_Chkj,A
%Vm>B3@Z8s'e9a<P[)\d7]8pXu*.4JL((7_@_'aob?.EU!5,mIh4Q_G`[D`lRVs"d=Ym'$2HLtnRLM5R$LS'r%(0Nl=:YW1U>OCAs
%e_MR5S/q-tmJsW"cg`C<cNo;Oq!$?SI7s@7Z,12oG</8:k'\=%rZM+%ICm+nVAsuk1[aY:/2dQj9-NLjj`JQ!FP7U.k5EeVh!m?E
%*tLRVUlY74/tK^s^ZFjL^E99GK62]0KG"-2P.hlbHCm+ae)l)4r&FjU)jlfQ&H1:ACX/fR35SIiKDV%n_bZJ5%R1ur,Q-%e.>I;`
%@S2!Tg,])L^=?"3a/+&G"7G-GhL4^U4=G<)TDGC\/fn'anC(G3NRj`o(3^bA*WL2)^7NPqpo0qt\rP@KnC)NdO5SKq\l@uUpd>R`
%LO.seSR-ti3+>\>e2Jgo4(;!&O(]N<-g:E6)a-M`N=DTT=f9VF2eRWe*dZg%8!q.<:YiD.m*VaVo#0sFO)fL+$!XZimu\uT&m#H[
%9p)?^VkoHq;n#?7EfN9P2%o@A8"SEi:_lR^M6fr=#G,V$0EP3Di+XDAX757#nAKUaR%p8U:]9S8Hg/FJi2J:QhgPnpnOOVq8)UAG
%!nCd[*dHZP<XWP7JL>cDN8U01T%Y5\g&k,&=FXT[T%&$H`Z9W.DY*[H"J-MO#WeBE!`)K$D5[-<dl)Bu8(`[c]go!_Yg`"/r^jt%
%E2":l@?-QpnK'9_5=\="2[c;&@Afh%ThZ8BG\QP4@9]qo6?f$r'1ADfl)$BX`0"-YeXVutr*?igi3":i"ekGtDnb0'hB$kR7;7T;
%X]_!A!'!+V\WMtlU33CrqiU3oS2^3A8`NQfC*-+7FNW(AJG1aiZH&MLeZfOB\.dI'+OUsJ_X+4a&U#Wl),(Zj%m(N%L)iT<Kq1hB
%SN1g'4-e"k4A[XGG(LQ@gZgZSM1-+OE!eZAUpKVMiW=FLJTihT".i,9(F7:V-VP;*gk/@h*,@D:STmiN8h'-n-S?u*T+Fde`@^Hq
%n^P=g451qOBMg/@A;`EbO0B;+F\UJD-O/9;/64LB:0]j2q%7e%Nct*ZlP+Ll230-PEMl^R=7Tc,4#(VgZ>Z8M:7)jf=<:lurRs;L
%%m-&A3/-:(F4eThrJ)ic<9b&:RY";iF6GoNTG.(,ASI2ca^jAW.HJEG[^:8jc9b8M<fY!`T,r#VdiQ;o6V_ZEiIlB;54uM-1R")L
%L:1B?SLED,Q<DuF:+LRp!@+n#'<ddd6\b;Z'9*T6nM$3HRgQI)@Ik>#`LGpfU.;H]E"h933JqO(Ri$b)W5eOMP6Q?CN](V>1_2-?
%YR-@n;=p9.9lM7/[Q)RK-Dl4_*QJFDalfc$"EqB:LV=qc`)q3'1*;u5o@UM"2T?AVlu&4^D+M5[)e%"P<9!`%d^K?rL2BV]Gp>G@
%`u0*4j*hc8*^1[8VtW;+S\B-ZjmADL+.N"7ZRA-0f'gZAHdS_bC%FN*hP\Vj1YTcRC^]nSm_l=mYT+Es_H+UQJ&IgggD"Rpb^7!Z
%"ojs1(.;VUW#dq=Rl%l2mP/!N#IJ!%2do?@/8C5)nagW]_4>h6,8pKV^UWH1mWkIP1\P?#nKpg"U@"<AGgi4<pP9Ile^%4HE$p+=
%P^J'E@B5]Gh*XrM52c&DkE$A>C0U[#jMZD!*O0'.-Z![h6;CXj)4X#gqU20Fe/i\JQJ-A=G1+sU"K.`sR$2>emBjp(A96S:,Nbek
%k3<3nM`L;ogS.'_*cocm)#e'+3GJ6@apIHG-_8Lj7M^)D$fuDgG/Cn.lS[D<%bha(RY";G3p>'I#G#Zt":oP?5png9)ZVAr3pG0G
%n?W@jpbL%d:,+-hPSF5c0diE).8hoA0dfZ2WaOtVPP&6EJXt;h2TPNYP8_uO@-3i?-:qM*TG)r4>*aVu3pE;O)tc5VFD$F0'N(d`
%:I:d]^\%-$FksiR<b:]CZ^#k0(=S5$r@CdnL_lr=#0eHgZ'(QF7Cn9C\ME&)ntuIL;9d/Gn`n"imVa9uQ.(NMkZrF^<MCHo9jX6+
%mQKK'*;F!SIOIrNKB"pUZt'[uT'srSTWm4:q>/Z,/_GodZ=4)ZWB*4mFt4sJXK*MS\uk<UXfL"Kb2rm#$g\&Bc6RHECE>R;('Ru[
%/oqTW6DW.)R;-0q@*@j9^.A*o,r6o34;WdkElZ.<(.9p8kk`*FQ+[_9AV/=MOs&soY^#_iTDQMLF#@\s6o%Rdd*E*(-mPGN4s9Cb
%P!5bAEK<FW'$@7^<odRpPtH$=V>>fQh?*qG@Z@tK!^As#HZ'MIB.ogEa:S74aNYA\g''l!85\""&+@c/NRDQYHLpRFKTqAM&LmJF
%ki43C#fiF8hG^l>(=h,0kaR[A.1!cEEZI]<_V-TLX$C'"4C>1id4UF"87]&0ec</7dT1:q]'N4rJE$LTmYm>AB.8hfD8e@uq&\)'
%546=;$2.)/'-A(FVZI:soF3/jYS0)R`K'a@/T//#X_cWJ5dj!A/ns-Y@smdA-L$b4?E96CQ)=5J&A^L:F0c0EVstZ0VG#3PnR9(2
%j_36'fJ=IP)P#VqGZUK":cYeQ7haYFAti_V\+M++F$>h0$@u.W22Ni)l,08)(a#4K`BQ*Oh[+lO?&I/<Od00[;;%R>Q8S')9?;IW
%H63=0a.\f@Y&%)<Ud!ef#-t@>@,[J?MUGt"cF5psOu95djp>'If`*ffkA?NDNqn@j&@L/O0KFsE%HjMIT:A]bb0FdXoIWn;_YRmD
%M2b1HNqtFSg(S:#=Q0YUV@!D_No@Big[Gd1gSXS=S2AsaL:bEs4;uVL9FX^ZrH84_?&[P9jP=F_*\TN\H@3nUbF?h,5=-Fq6^9*c
%J*aE:'h@K%J+'FYCqoTeo_Y/(T/5qWk0F<R;Z9SKY([PGi\7:9H<h3HIL>fEes8@Om3:?_A;dmtN_r$bR:M\gor\)U+7+`1O6S)O
%[uJKj%P5YsdF,Ij`nn#9`4E'7JRQq#jM0!K8*TopQ</Enm4nU9S%.WYmPpebF7j'UM^[d")PDrgW?&%Qc:sK5Lf8dT'1**A#uK;3
%%X'i^dFuiT(L77oBNn2s:cC#H,Q`KH(WRC:Nge5&<M<<T8lcdFgS!toAeW(fCskiLj<#]!hem=BKno\3PY).\1KqoDQF]Z,PiLB?
%;Q=,Dr:nWD'/6eL>'Vlm!JFY1J%1@D4Z(UP`@pM'0A4K-f't%%c=q+HQEYkE_`ldHEo0+8.6e`Q1HsN4?"ieK@fPNL+PVMs)s^l-
%Yb/+9BR.?Upr1@TYdo&t,Y=F+C3Sqn(`*^X1Gn5KVkU0u2TATN&DaeEeSWE#&63dkHrmX0_VPE,?+iBaD;CZgc6oskIJ7>jXF9bT
%<Nf#3?FM>P!@#<]L$40?O]<@eoVLrWZ6l7M))X]-Keg*`N%TsNfV[Ll?en2_gOFZ.\8O_BA"3E3***5.>Z1[LlE)HE/'_02$le>a
%/+X1sR;VSSq7+O.F5P/ipWhRg2/i/#'bK_\8"oA>76I$8>lHJoA`\Q9A)b74mV>R\o]DP<6=%UJ!'R#BN,i8c3>QBh5FfuMe]9`+
%ii[:4_7T#ZG?o.)FX?&2@/dkZl_pTq?H,#EaJlZ3G`]+W=#=%7S+BoN=C[OapQA?=o^1@%k/WWPIH*6Li>8%Wk9SCmU7jJ@jJ-\s
%WLL*57oS;73e-9c5+8q!C%c`@;$&[W\p][$65-Edb)(LfJ,[YTHLk%+5-u?q%I<sm@dEmXMgn^`U2R(L:&AYQUAlZ>1+-JjRb6n8
%,Nn+FemN0*hDD?Fs$7T&lV9c=b]6o2hc(ADHA&r/hhC^YCTOYn*\PGZkVDLR@d]$P<f9=4(1dq)TNV/+%?!G-ME%h)ZiV3_"Xo07
%Tlb2k;<d1k!"^41!Yi.ar"C8]mgBT`@\Sm`+VZOHHCU,?9)aW5:.,<p4bE-+$cfRPe3mTL.M-%9N.)E.pE,Wg\\VL3BMl,SKr=.L
%Bu2LXl(h+afhP"WDp=eonAmjn:&:`-_IAHQS?d+"AXMd?da'lNSC##UAA\LCT;]ZI#=NM6kca`58E*n'9rm`"qLGM8e/oHp1A0cB
%mX;Q.S?,\;5nD@;ODQVPRn+]b5th8'8A4@:h/N`*`SR^-)POi79-7;.d\iT^qZg"1eNTc7WThu@1"K`Fnbun;#$\=iYYm2AV7uA"
%WbL!G@i]cTPq4SnaQZQ1;_aWPNsl_@D!CjT@8ulh^4s?sPcPmb&N8:"_q\dXBl<G@)[4pA;i?Dg=sE4pYJ=dP/D1C)qpF%&04Jd!
%'VHE=0+k%@&PtQE4Osp_!c':,Wa^ja_I8=tIa=mf,tk3XeuW@qs"+>6qD5HkNXX,/bLm^73GpB7D!4%Qihl;i[ct'UI7UHf?%!D;
%CVShN2"%q^mZ&Q?fU.%dX[%cFO/X^WH/!6$2r"B80fXsU@CE9R)VG2>Rm:W5r_*3?LuUtha_pA;>.86p\f2_F(+X$V@__+OB<@Ys
%@2MsZlY^4/,)?55ijRpA\_D"l7dc]o''e:phl*/?X^jj<SKO.]UjZ@=THLdi]EjY:9salp#ZT5P!B5Kr>o-->n&BglU-L+KNAOdu
%k,hSk&D<N,\!FaCZnO@`j]bl#,&spV\3EqjTi?0]qqGkhVOVC]f(5_Q:1.=)^At$b>3b,?ViiG2=*q6O#5+*#m`*4b]Ghp&qc1,D
%PNDSuak54ETZ\HpdORT3EB?WS:"8/#J,e+!,CK8VbNm.r6qa..;7YL^J2,3qPMB/;*DfQpKq0\i'7u+@XbNqC;h:#hmc6(q<[(EM
%pu3uZk@1^`hSd9fLS7jZr?m&+2NYBZ`_,`+U<<[h:KG&+lh#).!'F44%MZ56Lrg>B6e97d1.Lc1&G.#fK+Mgnde%eN0R_qj]?b57
%1,=>ZmaHXeAT&!A3^I+`CO@;HhC$j*eF>S&\/S^>J9*[C]Cj:R#lq:N8b)tWbc2W*lN`LOJos=)/FMBo=d23$3".mR./Nd6Z1;\X
%M=otVZ@kD;(da[BDVTTuiFMT[WW\!m2Ke9OE;8M+`d^*n>Bb!P\Fm[Ykpo_5;[qbuUZdkH.dtlr$erdFo\*gai(*ZeqoomIIHZu2
%XLRLOWnd;%fg\?Q[dM?8I^<qnHH1nAW6^Wf9G"1&>PJ$\J%GNR\$=f)rGOS#I0TCVJI3e*KLM!.^+Cls<.Kq01H)F\*j@27BZLYN
%a,4+tfJ3Q\^<b#qgW]"CUBDg)*"dTA.CUu\4k\rOq<bcnhP\daQ'abmD&KrH]n5k,)1*I/T+st/d7rf/I9:,h3Epn="`dLs@il^0
%-su'93d3<PB[[rhVC6^EKfaKglb8]qb41#(E_Op;3-W>MUoo5B<ER1E0FrFohb!=lGns55?s4?;1f+A@]$=>k<KXMRAca9\IC%dH
%.ce!`^7/Au=^<a-E./OW?e,O4o;8hJ9f%1^W+h-EFjS;"eprq,<n>BP9Vu;@9ZH%WVRqh*^GA'N\N.FS0fS@r7]br5N[=*@guXn+
%djQ.KAMQtqoK4+SR5_n7C^&f<k#n^*S6Wurj(Hij,)=Q/aE4o].<iN%2Nkk7r@-=.Ro-"Y_sQs*2b7jVZd/)",G-m,SKbQ7k]XP^
%F)^gaGNSA]*5?Is]H'O?jhPL6&Q#nJQ_hW:"L4g:V\Le+5_=\+\7r"uDRp>WXLQX%_jG4>e?AV_d[QT;$)W)tlU<I?[hHWgTF*89
%3boG@(*_/j"0DC\-=A`!^J1RI[$ZQ1q"\ghdgJ%a(ZjXd2p#:u&K8&TOcAPJ6U[0<T=&[3U-?dchLak'qboDQ>la/G:F>hn6:7Ji
%cO):_Jq9s0Z://PC,.;O%K0*4ZA$/[*!M[bgd@-qoGt7!qsEn6R+eT]ME=W!/U$_P\*n_-gE,f@_/2jDR\A28,K3JT%el&"!/=YR
%dbR]d/$Oa@#F?YS,o-4LR4OFB%0OmA'mg,),0:g<AQFDX+MG6,]EEb0m0";ai^IIe^XIiHpDa"<XaY42]Vp-k@>/(K!`\!2X@'dZ
%L^f=6eW>bE68g&LU0%Sl3eOj_F1e.l:tDjJo:qsmQ:k;@:9+O#2lYBFBVHqF`![/E'W&Z8;-0N`-"(=2DG#raWNCYQ*T3Oql_\nF
%psl<+K60NEXsiijUFIXu:DJfU!:OY/<i6+BX\_)'!>/g>fUrZ?*V\>J5Q+-1oKR&6g`JCb;#]Dqrr2HXO.QXknsgf4M"f[SrYf#d
%fj$@]&Q\_9p)_G8^%?e35.uqpnj[sMA`MYLpk6dW.c!R6)^SgDh>4%*75c#$3Ld.",s\rA>!q5C2j%bF6.Rt0<cmME[ALa0)J>%a
%s8$d9ec/V'`7?l<05VZq8(W2"Yt4^Xd0We:Q')9$'aNkKomb_tT$58&`2#b@U0%G\EWBrbDU]:mIHq466`CK,']`'uLqkBDgfH[e
%6VCCtOD65GXGk=,BT,XeUD`&FUS(`imT%dp:lMV\BcohqYhdZ0M/nGdjd!e4^E1u#GZKsY(Qb3-H1ClPPjj2UqEaQb?$KbX*Wiqb
%$o8*P\h`UK,5gP?.t#rWX01\S,Ao!nl^tA\^3*k"TWVE1;GR"/Q$TEFM#LR<itdq$_g(EUbh;_pk![,RL*rcV++,iZj977@j11.-
%8EEbns%u'`&G1q&YaUgc(*htI;V&0,cKA10,C]$/<@KSi[>DGLoO*X7QFGm@NJ]*E]H5I"DU+H]IVQ5h@%<_.;>5"J_pUmeS0ui9
%]!shI]>_p;&.M:.E$k]3?`>+ka`jqfILPiHlFFmW8MEHH<P5["AKqj;cO5?fZ>=F/l82fmW<.?23\[:q(?d=O`-m6"2h]4Bg!mb8
%P5LO<?NC&pc]qM^$Bod?7qcFZMfd!mINFiq+s?#??`hW7h](D(B\'C;$[)R$WcR5">HP3aVJ*G:B1;S"&fmBrALEVbYE[>;BY_n<
%bUUA5`EUJsTs)JiR?ZbMaL&3*eET1<$WO@VS7oO+^:DIGd[\7efh:7fF]aQ01;uE.pUR]&9FBl8oL':5>^<6T^[.Gb[\g'9]V"=8
%($#lj[Yl0m5q.VFY"qFN]=qJBOi8*),,_6L9V6:[AZuAK['D;Tni"ZX.p^OE:OYt?:KhctbNN7.Z>@r9&JV7taO'BlhsFp'm3@Vs
%S=;B]iLBGe0%E+_&&6PXS$-eb,H*/G.sp_1Rpur=mG4R9oPP<T8oN5RI'KYkYjW\>%2&g2_?agaZ^J@<`(.!MrefC)D-*<Q=KD$5
%?2?-:"p[4D,2$]HW'EeB`5!,=)#?AT2LBTu7r9h$>H!G5M8tKODfY6b@h-t;8_Ud/$A$oCF,B=L9:t%#UJ@COn%[]c(<)2dG:i1E
%3*`FKQ""8-j6'&n;,^R'TWK]6Zk`*<nFm=69`:[1GW_OfMt'WZ9()r1"=&Ul&?5WNJ4".#;1PI$_G^:,+<uDrbA#0#LIbdMZG*fV
%+%j=]n$Y_nBC21K9:M;J"(!%C<#X`(]0>Vom&rSi2U8>p<"LK_2%P%HG!(%#q`Foc:-4:.;l.CLKK&9M^KTl?2&H+2pJK8-]scuL
%P;oR[5Ms*;_qgeGBJf+0)_9+bYU1m@]s+[k6#6)oH%L#!Us+f,A$T)R^LN(gR19/<)Z4P4K7KUGK3%4HI5@Ok#t!Kte'WMra[DAi
%mkrSX]OH;4'lc7+l63DD!AM\/429,5rZ\9DS(BVn:sem;^j..;6o1mW$g$8fE:<%W3=h6T<cLVod3+pAm8O2RU.>I'"=;<P`E5ed
%7)SkqS7`Mr0Z-WO<jW/?9-0Q:&W'%rJ0BC=AWOl07(Kh9iFMT2<./&RX7+GM2gjT#Q%7MKBm*=u]gY<K'7icQ&D`N>BQQ1n:[Y:I
%W_.7f4r^QoWd<[0l3]\-+1(6LNqj;_Wj(K)f>0cTF@AQV&O^U$YV8'-k^m4gB[i$eL8*GL5>-iVVB)1SJKn]#^93`,AJM*pHHDun
%[M09XGc5!H+LS.9+:$5.;ktU45>e-H6f"qneZLCe5\7p%.,e=/3p'@fXt5U;cbYYEGq5JrB]dY<W+Ulk'P*l2UY+R-KIfdV&(]!o
%N?X-D@?HF<\P3J'FeV(`'8@$+RqFV++L"m9)5niqL/89/G9F?;mbM@f05Sq@#H,^2?C2MTMMr=0d?pj<CU%L55]1]iika^C,oU:)
%/L[L#oiqZc&`[D?Q18(?&PEsg7U#W?-^]&lKSMs/['M0#12.OrNL6ueN!kKg`RP,+Kd<1c<!I5J@knT);S<e*QG#":J8m@dSK)H=
%H92ES^EQ-goPkGL`fIad!7LC<.C6pE3a5)^-oG"uk9nou"q&,+]YNNI[#32nCl@agVbqk*fGgTH$bDg72\S^-[P;@s-ds]Nc"bHD
%:Wl-H1o7Zgo&]NS3>73FOI622Ng7h+Y^35UX:HoV8Od&U>ujfo!HeO'a5Zt-D>YK@-+/2d:f'ff8$Ht)]HEX(7)@5JC;X1fX(l/g
%)Ql[9TL,u"^Cip>AC3U+m"-g;Rj(m2M,)(HUUakr@u)m^";Opjd[k-!g"'CFXWeHjDnjkheMf`IP$26-))W!Q;'W!p+?N0X]\Ykb
%fR1R3`b&>N+DPJg8Z(N+i;@7#pgK.OBuH`Y3?jPorK#\sHMiYKe*SdL:.p'8p6Hs:+_=&bSQck.$em<(>"Kfm\^YK8<W#Z!&kT'O
%%ZO>o+g_]aFm^o$XV+'tgoAm+[23T:[*!de6d;&OZd($GT7Tj;;'@2B\S;9(*CLQ"72rYKD5h%_/4O-V4GtoG[&tDc7AeJ)H=r!H
%`V=$)[og@6gJ`9&MH:=hG,KR7K&XDM^F-Mms)N>K].#ZhGh:`=Xbf#dhqA[=mH:PH@ohFEl!tfqK&akLG4l``o0(u3>5tT0QmfhD
%k=Pm6lX6<`KDGEErqh1pqVr[#WtbPT+jBucn%\btS#;mW%d(0;[=#q9pr7=kVSj7BHdliS@5\\:I@X.e.Ye&og@B<]32^ea<JlC)
%n't`D%eH,qrC^50a;]p+TeQuTF-``4A4:pf@u9LMYe$mA3d"%;,RcC(\R9dH4)XW<F"VV/aSp6ea?q`C+a;f5]Y&V\q!2['l'haj
%acEq.Ce<M$e!7hCXV$jQ73:SQgp\>KGV=(7RC`+d'$&W#F;Sb.H-TF(hPV#L,AQrcT2,)94BDu;mF$i/PTMQLr+/ng%YgPB>ZsuG
%-M:tj(UtgkLGCUUKu"F:%::M;3!%-5(#>UMnZ3Rt,>D;J-1Sr\W!';kBoqD<9FC9>PWeKS"U:0JW-PKiARfg(qiglkP4,fT?j0A2
%p7E:$0q7-821-o]ef6hOV&`1De0J?s3)s'^7ifP!=.'4fg$)J#-X[b)759:2V?+/NJ[H6jZE6mPoj:!$DMrLf,TZYG#?<8[][q1b
%pZh=P8h^S6.:X1PNQm2!]"e;,Lu1"(*J#d*$aUrJGPV#pBepKN17UsQ:da_,%P`1'O\PJ%TSQ8](WkHR'K6?-h=N+_78-oH>o7_P
%ZoHQEF?S'_LlS6M1kCoH!n]3@i+D3kC-3:G>=\FKER<$e.4_9o9"Aad,\0:Y%sR^7=o&gZpuCr2.4M9HgL)8V[A7A4\t9X^0%1o"
%"Zt9'ocJ:-,fYhUR1\(@2(teJLAk<br<'<E2J'/F[plZ$J[_@uJ&Dqj/XAoC'keo$@bqba9-Z6`FfFJOX;S(=*1J<@"3GuqQW:Bt
%p;*CWYYOrW%?.UGO$tDLqr#aiIi9oLVFC#qi&+Lld\R5=/`+Q:mdBcZ"[DFfd:Yg-`aq#L<AUaqk#aMT[:#5,K.&LDofdYJ"'X,i
%X1M[><QDrh"m8p]h3rDOhf"JREGsE6;Ma`S!e`c^(_UEhHLkh1G?\<U4TY.[bd`\O"3$kb$-7aq5TUq9<nClTNo3_?C4!"dBT)L=
%/%e"_V\sTbY:_8r@e$s2+LUFt?N=oYV'%Z`nELKuSZRn!\!V([0c\F?<.hD0(=o=8X2/RC*@'j,HpeaC-h#4D$lDtEFsC=kh7Q'b
%4"e0U^jA06%:LG\:^"l0/9AQ-B5g/e`R%,0L5Yp;@dj`@"Ma;dbT$3OY9N5%D@h^0p]m>7LGt!AAh+AWr<L7)=Dc7_IQDZS>\[b&
%A_3WQ-8Jd4*\+4lHBrn&l.\ALKpk^,4iJZBT2/KQ_9oP1J5=CkoYI##;>i_8,Op->L'7SSUp61KRXRE`-&[5D#3S2,I`@"=e\=#"
%81Leaj;b4PMCNE5aCdE0k!jB$nbp7o0l*\rfUL4Bk*B<@D'!$$-l>cR<m<X3I!!]'Q"g&5V]YBq$=8it#mM*f6L\$.#q/LSot':R
%2!8jfrR)qclSdt".lmb:JiGBb?>P'>"+8I4<;[[<A$nr%8%l]!?9hD7](G]m^>+,"_a!dql/2MZjo>=XJ,ADahgG7emk0rEpm_<S
%Rt(8$s7s:ar+k3Grq0XsbO9rP_f%d;k26.IGh?s7BE+k?s73eZrr*H.rk%':q#16an,FIFI^K.5DuSmkrq$0\f73Jn"*4Ar<<~>
%AI9_PrivateDataEnd
